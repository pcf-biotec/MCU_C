CCS PCM C Compiler, Version 4.114, 93460303               14-dez-17 13:18

               Filename: D:\Arquivos\Projeto\programação C\menu_novo\Oficial\teste_bluetooth\teste_bluetooth.lst

               ROM used: 6674 words (81%)
                         Largest free fragment is 1091
               RAM used: 76 (21%) at main() level
                         93 (25%) worst case
               Stack:    8 worst case (6 in main + 2 for interrupts)

*
0000:  MOVLW  12
0001:  MOVWF  0A
0002:  GOTO   2F7
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   032
001B:  MOVLW  8C
001C:  MOVWF  04
001D:  BTFSS  00.0
001E:  GOTO   021
001F:  BTFSC  0C.0
0020:  GOTO   035
0021:  MOVF   22,W
0022:  MOVWF  04
0023:  MOVF   23,W
0024:  MOVWF  77
0025:  MOVF   24,W
0026:  MOVWF  78
0027:  MOVF   25,W
0028:  MOVWF  79
0029:  MOVF   26,W
002A:  MOVWF  7A
002B:  MOVF   20,W
002C:  MOVWF  0A
002D:  SWAPF  21,W
002E:  MOVWF  03
002F:  SWAPF  7F,F
0030:  SWAPF  7F,W
0031:  RETFIE
0032:  BCF    0A.3
0033:  BCF    0A.4
0034:  GOTO   407
0035:  BCF    0A.3
0036:  BCF    0A.4
0037:  GOTO   1EC
.................... /////////////////////////////////////////////////////////////////////////////// 
.................... //       Spider                                                              // 
.................... //       09/12/2017                                                          // 
.................... //       Versão: 2.1                                                         // 
.................... ///////////////////////////////////////////////////////////////////////////////  
....................  
.................... //---CONFIGURANDO Uc---// 
....................  
.................... #include  <16f877a.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #use      delay(clock=8000000) 
*
0446:  MOVLW  6C
0447:  MOVWF  04
0448:  BCF    03.7
0449:  MOVF   00,W
044A:  BTFSC  03.2
044B:  GOTO   459
044C:  MOVLW  02
044D:  MOVWF  78
044E:  CLRF   77
044F:  DECFSZ 77,F
0450:  GOTO   44F
0451:  DECFSZ 78,F
0452:  GOTO   44E
0453:  MOVLW  97
0454:  MOVWF  77
0455:  DECFSZ 77,F
0456:  GOTO   455
0457:  DECFSZ 00,F
0458:  GOTO   44C
0459:  RETURN
.................... #use      I2C(master, sda=PIN_C4, scl=PIN_C3) 
*
0ACC:  MOVLW  08
0ACD:  MOVWF  78
0ACE:  NOP
0ACF:  BCF    07.3
0AD0:  BCF    28.3
0AD1:  MOVF   28,W
0AD2:  BSF    03.5
0AD3:  MOVWF  07
0AD4:  NOP
0AD5:  BCF    03.5
0AD6:  RLF    67,F
0AD7:  BCF    07.4
0AD8:  BTFSS  03.0
0AD9:  GOTO   2E0
0ADA:  BSF    28.4
0ADB:  MOVF   28,W
0ADC:  BSF    03.5
0ADD:  MOVWF  07
0ADE:  GOTO   2E4
0ADF:  BCF    03.5
0AE0:  BCF    28.4
0AE1:  MOVF   28,W
0AE2:  BSF    03.5
0AE3:  MOVWF  07
0AE4:  NOP
0AE5:  BCF    03.5
0AE6:  BSF    28.3
0AE7:  MOVF   28,W
0AE8:  BSF    03.5
0AE9:  MOVWF  07
0AEA:  BCF    03.5
0AEB:  BTFSS  07.3
0AEC:  GOTO   2EB
0AED:  DECFSZ 78,F
0AEE:  GOTO   2CE
0AEF:  NOP
0AF0:  BCF    07.3
0AF1:  BCF    28.3
0AF2:  MOVF   28,W
0AF3:  BSF    03.5
0AF4:  MOVWF  07
0AF5:  NOP
0AF6:  BCF    03.5
0AF7:  BSF    28.4
0AF8:  MOVF   28,W
0AF9:  BSF    03.5
0AFA:  MOVWF  07
0AFB:  NOP
0AFC:  NOP
0AFD:  BCF    03.5
0AFE:  BSF    28.3
0AFF:  MOVF   28,W
0B00:  BSF    03.5
0B01:  MOVWF  07
0B02:  BCF    03.5
0B03:  BTFSS  07.3
0B04:  GOTO   303
0B05:  CLRF   78
0B06:  NOP
0B07:  BTFSC  07.4
0B08:  BSF    78.0
0B09:  BCF    07.3
0B0A:  BCF    28.3
0B0B:  MOVF   28,W
0B0C:  BSF    03.5
0B0D:  MOVWF  07
0B0E:  BCF    03.5
0B0F:  BCF    07.4
0B10:  BCF    28.4
0B11:  MOVF   28,W
0B12:  BSF    03.5
0B13:  MOVWF  07
0B14:  BCF    03.5
0B15:  RETURN
0B16:  MOVLW  08
0B17:  MOVWF  68
0B18:  MOVF   77,W
0B19:  MOVWF  69
0B1A:  BSF    28.4
0B1B:  MOVF   28,W
0B1C:  BSF    03.5
0B1D:  MOVWF  07
0B1E:  NOP
0B1F:  BCF    03.5
0B20:  BSF    28.3
0B21:  MOVF   28,W
0B22:  BSF    03.5
0B23:  MOVWF  07
0B24:  BCF    03.5
0B25:  BTFSS  07.3
0B26:  GOTO   325
0B27:  BTFSC  07.4
0B28:  BSF    03.0
0B29:  BTFSS  07.4
0B2A:  BCF    03.0
0B2B:  RLF    78,F
0B2C:  NOP
0B2D:  BCF    28.3
0B2E:  MOVF   28,W
0B2F:  BSF    03.5
0B30:  MOVWF  07
0B31:  BCF    03.5
0B32:  BCF    07.3
0B33:  DECFSZ 68,F
0B34:  GOTO   31A
0B35:  BSF    28.4
0B36:  MOVF   28,W
0B37:  BSF    03.5
0B38:  MOVWF  07
0B39:  NOP
0B3A:  BCF    03.5
0B3B:  BCF    07.4
0B3C:  MOVF   69,W
0B3D:  BTFSC  03.2
0B3E:  GOTO   344
0B3F:  BCF    28.4
0B40:  MOVF   28,W
0B41:  BSF    03.5
0B42:  MOVWF  07
0B43:  BCF    03.5
0B44:  NOP
0B45:  BSF    28.3
0B46:  MOVF   28,W
0B47:  BSF    03.5
0B48:  MOVWF  07
0B49:  BCF    03.5
0B4A:  BTFSS  07.3
0B4B:  GOTO   34A
0B4C:  NOP
0B4D:  BCF    07.3
0B4E:  BCF    28.3
0B4F:  MOVF   28,W
0B50:  BSF    03.5
0B51:  MOVWF  07
0B52:  NOP
0B53:  BCF    03.5
0B54:  BCF    07.4
0B55:  BCF    28.4
0B56:  MOVF   28,W
0B57:  BSF    03.5
0B58:  MOVWF  07
0B59:  BCF    03.5
0B5A:  RETURN
.................... #use      rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
.................... #include  "lcd_r.c" 
.................... /*  
....................  
....................    Biblioteca: Manipulação de LCD à 4 bits 
....................    Autor     : Rahul Martim Juliato 
....................    Compilador: PICC-CCS 
....................     
....................    Data: 10.12.2012 
....................    Rev.:    03.2017 
....................  
.................... */ 
....................     
....................     
.................... /* 
.................... Exemplo de utilização: 
....................     
.................... void main(void){ 
....................  
....................    lcd_ini();          //Inicializa o LCD   
....................    delay_ms(250); 
....................    lcd_escreve('\f'); 
....................    delay_ms(250); 
....................  
....................     
....................    lcd_pos_xy(2,1);    //Utiliza as rotinas de escrita 
....................    printf(lcd_escreve,"LCD"); 
....................    lcd_pos_xy(2,2); 
....................    printf(lcd_escreve,"Teste"); 
....................    delay_ms(2000); 
....................        
....................    while(true){ 
....................    } 
.................... } 
....................  
.................... */ 
....................  
....................  
.................... /* Original    
.................... #define lcd_enable     pin_D1      // pino enable do LCD 
.................... #define lcd_rs         pin_D0      // pino rs do LCD 
....................  
.................... #define lcd_d4         pin_D2      // pino de dados d4 do LCD 
.................... #define lcd_d5         pin_D3      // pino de dados d5 do LCD 
.................... #define lcd_d6         pin_D4      // pino de dados d6 do LCD 
.................... #define lcd_d7         pin_D5      // pino de dados d7 do LCD 
.................... */ 
....................  
.................... #define lcd_enable     pin_d3      // pino enable do LCD 
.................... #define lcd_rs         pin_d2      // pino rs do LCD 
....................  
.................... #define lcd_d4         pin_d4      // pino de dados d4 do LCD 
.................... #define lcd_d5         pin_d5      // pino de dados d5 do LCD 
.................... #define lcd_d6         pin_d6      // pino de dados d6 do LCD 
.................... #define lcd_d7         pin_d7     // pino de dados d7 do LCD 
....................  
....................  
....................  
.................... //!#define lcd_d4         pin_d7      // pino de dados d4 do LCD 
.................... //!#define lcd_d5         pin_d6      // pino de dados d5 do LCD 
.................... //!#define lcd_d6         pin_d5      // pino de dados d6 do LCD 
.................... //!#define lcd_d7         pin_d4     // pino de dados d7 do LCD 
.................... //! 
.................... //! 
....................  
.................... #define lcd_type 2           // 0=5x7, 1=5x10, 2=2 linhas 
.................... #define lcd_seg_lin 0x40    // Endereço da segunda linha na RAM do LCD 
....................  
.................... // a constante abaixo define a seqüência de inicialização do módulo LCD 
.................... byte CONST INI_LCD[4] = {0x20 | (lcd_type << 2), 0xf, 1, 6}; 
....................  
.................... //envia um comando para o pino d7 até d4 
.................... void send_d7_d4(int8 address,int8 nibble) 
.................... {   
....................     
....................  
....................   if((nibble & 1)==1) output_high(pin_b4); else output_low(pin_b4); 
....................   if((nibble & 2)==2) output_high(pin_b5); else output_low(pin_b5); 
....................   if((nibble & 4)==4) output_high(pin_b6); else output_low(pin_b6); 
....................   if((nibble & 8)==8) output_high(pin_b7); else output_low(pin_b7); 
....................    delay_us(60); 
....................    if(address) 
....................      output_high(pin_b2); 
....................        
....................    else 
....................      output_low(pin_b2);  
....................        
....................  
....................  output_high(pin_b3); 
....................  delay_us(2); 
....................  output_low(pin_b3); 
.................... } 
....................  
.................... void lcd_envia_nibble( byte dado ) 
.................... // envia um dado de quatro bits para o display 
.................... { 
....................    // coloca os quatro bits nas saidas 
....................    output_bit(lcd_d4,bit_test(dado,0)); 
*
0474:  BTFSC  73.0
0475:  GOTO   478
0476:  BCF    08.4
0477:  GOTO   479
0478:  BSF    08.4
0479:  BSF    03.5
047A:  BCF    08.4
*
04A5:  BTFSC  73.0
04A6:  GOTO   4A9
04A7:  BCF    08.4
04A8:  GOTO   4AA
04A9:  BSF    08.4
04AA:  BSF    03.5
04AB:  BCF    08.4
*
058F:  BTFSC  73.0
0590:  GOTO   593
0591:  BCF    08.4
0592:  GOTO   594
0593:  BSF    08.4
0594:  BSF    03.5
0595:  BCF    08.4
*
05C2:  BTFSC  73.0
05C3:  GOTO   5C6
05C4:  BCF    08.4
05C5:  GOTO   5C7
05C6:  BSF    08.4
05C7:  BSF    03.5
05C8:  BCF    08.4
....................    output_bit(lcd_d5,bit_test(dado,1)); 
*
047B:  BTFSC  73.1
047C:  GOTO   481
047D:  BCF    03.5
047E:  BCF    08.5
047F:  GOTO   483
0480:  BSF    03.5
0481:  BCF    03.5
0482:  BSF    08.5
0483:  BSF    03.5
0484:  BCF    08.5
*
04AC:  BTFSC  73.1
04AD:  GOTO   4B2
04AE:  BCF    03.5
04AF:  BCF    08.5
04B0:  GOTO   4B4
04B1:  BSF    03.5
04B2:  BCF    03.5
04B3:  BSF    08.5
04B4:  BSF    03.5
04B5:  BCF    08.5
*
0596:  BTFSC  73.1
0597:  GOTO   59C
0598:  BCF    03.5
0599:  BCF    08.5
059A:  GOTO   59E
059B:  BSF    03.5
059C:  BCF    03.5
059D:  BSF    08.5
059E:  BSF    03.5
059F:  BCF    08.5
*
05C9:  BTFSC  73.1
05CA:  GOTO   5CF
05CB:  BCF    03.5
05CC:  BCF    08.5
05CD:  GOTO   5D1
05CE:  BSF    03.5
05CF:  BCF    03.5
05D0:  BSF    08.5
05D1:  BSF    03.5
05D2:  BCF    08.5
....................    output_bit(lcd_d6,bit_test(dado,2)); 
*
0485:  BTFSC  73.2
0486:  GOTO   48B
0487:  BCF    03.5
0488:  BCF    08.6
0489:  GOTO   48D
048A:  BSF    03.5
048B:  BCF    03.5
048C:  BSF    08.6
048D:  BSF    03.5
048E:  BCF    08.6
*
04B6:  BTFSC  73.2
04B7:  GOTO   4BC
04B8:  BCF    03.5
04B9:  BCF    08.6
04BA:  GOTO   4BE
04BB:  BSF    03.5
04BC:  BCF    03.5
04BD:  BSF    08.6
04BE:  BSF    03.5
04BF:  BCF    08.6
*
05A0:  BTFSC  73.2
05A1:  GOTO   5A6
05A2:  BCF    03.5
05A3:  BCF    08.6
05A4:  GOTO   5A8
05A5:  BSF    03.5
05A6:  BCF    03.5
05A7:  BSF    08.6
05A8:  BSF    03.5
05A9:  BCF    08.6
*
05D3:  BTFSC  73.2
05D4:  GOTO   5D9
05D5:  BCF    03.5
05D6:  BCF    08.6
05D7:  GOTO   5DB
05D8:  BSF    03.5
05D9:  BCF    03.5
05DA:  BSF    08.6
05DB:  BSF    03.5
05DC:  BCF    08.6
....................    output_bit(lcd_d7,bit_test(dado,3)); 
*
048F:  BTFSC  73.3
0490:  GOTO   495
0491:  BCF    03.5
0492:  BCF    08.7
0493:  GOTO   497
0494:  BSF    03.5
0495:  BCF    03.5
0496:  BSF    08.7
0497:  BSF    03.5
0498:  BCF    08.7
*
04C0:  BTFSC  73.3
04C1:  GOTO   4C6
04C2:  BCF    03.5
04C3:  BCF    08.7
04C4:  GOTO   4C8
04C5:  BSF    03.5
04C6:  BCF    03.5
04C7:  BSF    08.7
04C8:  BSF    03.5
04C9:  BCF    08.7
*
05AA:  BTFSC  73.3
05AB:  GOTO   5B0
05AC:  BCF    03.5
05AD:  BCF    08.7
05AE:  GOTO   5B2
05AF:  BSF    03.5
05B0:  BCF    03.5
05B1:  BSF    08.7
05B2:  BSF    03.5
05B3:  BCF    08.7
*
05DD:  BTFSC  73.3
05DE:  GOTO   5E3
05DF:  BCF    03.5
05E0:  BCF    08.7
05E1:  GOTO   5E5
05E2:  BSF    03.5
05E3:  BCF    03.5
05E4:  BSF    08.7
05E5:  BSF    03.5
05E6:  BCF    08.7
....................    // dá um pulso na linha enable 
....................    output_high(lcd_enable); 
*
0499:  BCF    08.3
049A:  BCF    03.5
049B:  BSF    08.3
*
04CA:  BCF    08.3
04CB:  BCF    03.5
04CC:  BSF    08.3
*
05B4:  BCF    08.3
05B5:  BCF    03.5
05B6:  BSF    08.3
*
05E7:  BCF    08.3
05E8:  BCF    03.5
05E9:  BSF    08.3
....................    output_low(lcd_enable); 
*
049C:  BSF    03.5
049D:  BCF    08.3
049E:  BCF    03.5
049F:  BCF    08.3
*
04CD:  BSF    03.5
04CE:  BCF    08.3
04CF:  BCF    03.5
04D0:  BCF    08.3
*
05B7:  BSF    03.5
05B8:  BCF    08.3
05B9:  BCF    03.5
05BA:  BCF    08.3
*
05EA:  BSF    03.5
05EB:  BCF    08.3
05EC:  BCF    03.5
05ED:  BCF    08.3
.................... } 
....................  
....................  
.................... void lcd_envia_byte( boolean endereco, byte dado ) 
.................... { 
....................    // coloca a linha rs em 0 
....................    output_low(lcd_rs); 
*
045A:  BSF    03.5
045B:  BCF    08.2
045C:  BCF    03.5
045D:  BCF    08.2
....................    // aguarda o display ficar desocupado 
....................    //while ( bit_test(lcd_le_byte(),7) ) ; 
....................    // configura a linha rs dependendo do modo selecionado 
....................    output_bit(lcd_rs,endereco); 
045E:  MOVF   70,F
045F:  BTFSS  03.2
0460:  GOTO   463
0461:  BCF    08.2
0462:  GOTO   464
0463:  BSF    08.2
0464:  BSF    03.5
0465:  BCF    08.2
....................    delay_us(100);   // aguarda 100 us 
0466:  MOVLW  42
0467:  MOVWF  77
0468:  DECFSZ 77,F
0469:  GOTO   468
046A:  NOP
....................    // caso a linha rw esteja definida, coloca em 0 
....................  
....................    // desativa linha enable 
....................    output_low(lcd_enable); 
046B:  BCF    08.3
046C:  BCF    03.5
046D:  BCF    08.3
....................    // envia a primeira parte do byte 
....................    lcd_envia_nibble(dado >> 4); 
046E:  SWAPF  71,W
046F:  MOVWF  72
0470:  MOVLW  0F
0471:  ANDWF  72,F
0472:  MOVF   72,W
0473:  MOVWF  73
....................    // envia a segunda parte do byte 
....................    lcd_envia_nibble(dado & 0x0f); 
*
04A0:  MOVF   71,W
04A1:  ANDLW  0F
04A2:  MOVWF  72
04A3:  MOVF   72,W
04A4:  MOVWF  73
.................... } 
*
04D1:  RETURN
....................  
....................  
.................... void lcd_ini() 
.................... // rotina de inicialização do display 
.................... { 
....................    byte conta; 
....................    output_low(lcd_d4); 
*
056C:  BSF    03.5
056D:  BCF    08.4
056E:  BCF    03.5
056F:  BCF    08.4
....................    output_low(lcd_d5); 
0570:  BSF    03.5
0571:  BCF    08.5
0572:  BCF    03.5
0573:  BCF    08.5
....................    output_low(lcd_d6); 
0574:  BSF    03.5
0575:  BCF    08.6
0576:  BCF    03.5
0577:  BCF    08.6
....................    output_low(lcd_d7); 
0578:  BSF    03.5
0579:  BCF    08.7
057A:  BCF    03.5
057B:  BCF    08.7
....................    output_low(lcd_rs); 
057C:  BSF    03.5
057D:  BCF    08.2
057E:  BCF    03.5
057F:  BCF    08.2
....................  
....................    output_low(lcd_enable); 
0580:  BSF    03.5
0581:  BCF    08.3
0582:  BCF    03.5
0583:  BCF    08.3
....................    delay_ms(15); 
0584:  MOVLW  0F
0585:  MOVWF  6C
0586:  CALL   446
....................    // envia uma seqüência de 3 vezes 0x03 
....................    // e depois 0x02 para configurar o módulo 
....................    // para modo de 4 bits 
....................    for(conta=1;conta<=3;++conta) 
0587:  MOVLW  01
0588:  MOVWF  67
0589:  MOVF   67,W
058A:  SUBLW  03
058B:  BTFSS  03.0
058C:  GOTO   5C0
....................    { 
....................       lcd_envia_nibble(3); 
058D:  MOVLW  03
058E:  MOVWF  73
....................       delay_ms(5); 
*
05BB:  MOVLW  05
05BC:  MOVWF  6C
05BD:  CALL   446
....................    } 
05BE:  INCF   67,F
05BF:  GOTO   589
....................    lcd_envia_nibble(2); 
05C0:  MOVLW  02
05C1:  MOVWF  73
....................    // envia string de inicialização do display 
....................    for(conta=0;conta<=3;++conta) lcd_envia_byte(0,INI_LCD[conta]); 
*
05EE:  CLRF   67
05EF:  MOVF   67,W
05F0:  SUBLW  03
05F1:  BTFSS  03.0
05F2:  GOTO   5FC
05F3:  MOVF   67,W
05F4:  CALL   038
05F5:  MOVWF  68
05F6:  CLRF   70
05F7:  MOVF   68,W
05F8:  MOVWF  71
05F9:  CALL   45A
05FA:  INCF   67,F
05FB:  GOTO   5EF
.................... } 
....................  
.................... void lcd_pos_xy( byte x, byte y) 
.................... { 
....................    byte endereco; 
....................    if(y!=1)                      //se y é diferente de 1, muda para segunda linha 
*
04D2:  DECFSZ 6D,W
04D3:  GOTO   4D5
04D4:  GOTO   4D8
....................       endereco = lcd_seg_lin; 
04D5:  MOVLW  40
04D6:  MOVWF  6E
....................    else 
04D7:  GOTO   4D9
....................       endereco = 0; 
04D8:  CLRF   6E
....................    endereco += x-1; 
04D9:  MOVLW  01
04DA:  SUBWF  6C,W
04DB:  ADDWF  6E,F
....................    lcd_envia_byte(0,0x80|endereco); 
04DC:  MOVF   6E,W
04DD:  IORLW  80
04DE:  MOVWF  6F
04DF:  CLRF   70
04E0:  MOVF   6F,W
04E1:  MOVWF  71
04E2:  CALL   45A
.................... } 
04E3:  RETURN
....................  
.................... //cgram(0); - mostra o caráter especial armazenado na posição 0; 
.................... void cgram(int8 n){ 
....................    lcd_envia_byte(1,n); 
*
06B8:  MOVLW  01
06B9:  MOVWF  70
06BA:  MOVF   68,W
06BB:  MOVWF  71
06BC:  CALL   45A
.................... } 
06BD:  RETURN
.................... //cgram_x(n); - n é a posição onde os caracteres são escritos, vai de 0 a 7 
.................... void cgram_x(int p){ 
.................... lcd_envia_byte(0,0x40+p*8); 
*
0633:  RLF    67,W
0634:  MOVWF  77
0635:  RLF    77,F
0636:  RLF    77,F
0637:  MOVLW  F8
0638:  ANDWF  77,F
0639:  MOVF   77,W
063A:  ADDLW  40
063B:  MOVWF  68
063C:  CLRF   70
063D:  MOVF   68,W
063E:  MOVWF  71
063F:  CALL   45A
*
0654:  RLF    67,W
0655:  MOVWF  77
0656:  RLF    77,F
0657:  RLF    77,F
0658:  MOVLW  F8
0659:  ANDWF  77,F
065A:  MOVF   77,W
065B:  ADDLW  40
065C:  MOVWF  68
065D:  CLRF   70
065E:  MOVF   68,W
065F:  MOVWF  71
0660:  CALL   45A
*
0675:  RLF    67,W
0676:  MOVWF  77
0677:  RLF    77,F
0678:  RLF    77,F
0679:  MOVLW  F8
067A:  ANDWF  77,F
067B:  MOVF   77,W
067C:  ADDLW  40
067D:  MOVWF  68
067E:  CLRF   70
067F:  MOVF   68,W
0680:  MOVWF  71
0681:  CALL   45A
*
0696:  RLF    67,W
0697:  MOVWF  77
0698:  RLF    77,F
0699:  RLF    77,F
069A:  MOVLW  F8
069B:  ANDWF  77,F
069C:  MOVF   77,W
069D:  ADDLW  40
069E:  MOVWF  68
069F:  CLRF   70
06A0:  MOVF   68,W
06A1:  MOVWF  71
06A2:  CALL   45A
.................... } 
....................  
.................... //for(i=0;i<=7 ;i++) lcd_envia_byte(1,aleatorio[i]); - responsável por enviar 8 bytes 
.................... void envia_bytes(void){ 
....................  
.................... int8 i; 
.................... for(i=0 ;i < 3; i++) 
....................    { 
....................     send_d7_d4(0,0x03); 
....................     delay_ms(5); 
....................    } 
....................     send_d7_d4(0,0x02); 
....................     lcd_envia_byte(0, 0x28); 
....................     delay_ms(5); 
....................     lcd_envia_byte(0, 0x08); 
....................     delay_ms(5); 
....................     lcd_envia_byte(0, 0x01); 
....................     delay_ms(5); 
....................     lcd_envia_byte(0, 0x06); 
....................     delay_ms(5); 
....................     lcd_envia_byte(0, 0x0C); 
.................... } 
....................  
.................... // exemplo de caracter char - const char aleatorio[8]={0b01011,0b11011,0b01100,0b10011,0b11001,0b10101,0b00110,0b11100}; 
....................  
.................... void lcd_escreve( char c) 
.................... // envia caractere para o display 
.................... { 
....................    switch (c) 
....................    { 
*
04E4:  MOVF   6B,W
04E5:  XORLW  0C
04E6:  BTFSC  03.2
04E7:  GOTO   4F8
04E8:  XORLW  06
04E9:  BTFSC  03.2
04EA:  GOTO   500
04EB:  XORLW  07
04EC:  BTFSC  03.2
04ED:  GOTO   500
04EE:  XORLW  05
04EF:  BTFSC  03.2
04F0:  GOTO   506
04F1:  XORLW  63
04F2:  BTFSC  03.2
04F3:  GOTO   50B
04F4:  XORLW  11
04F5:  BTFSC  03.2
04F6:  GOTO   515
04F7:  GOTO   51F
....................      case '\f'    :   lcd_envia_byte(0,1); 
04F8:  CLRF   70
04F9:  MOVLW  01
04FA:  MOVWF  71
04FB:  CALL   45A
....................               delay_ms(2); 
04FC:  MOVLW  02
04FD:  MOVWF  6C
04FE:  CALL   446
....................             break; 
04FF:  GOTO   525
....................      case '\n'   : 
....................      case '\r'    :   lcd_pos_xy(1,2); 
0500:  MOVLW  01
0501:  MOVWF  6C
0502:  MOVLW  02
0503:  MOVWF  6D
0504:  CALL   4D2
....................               break; 
0505:  GOTO   525
....................      case '\b'    :   lcd_envia_byte(0,0x10); 
0506:  CLRF   70
0507:  MOVLW  10
0508:  MOVWF  71
0509:  CALL   45A
....................               break; 
050A:  GOTO   525
....................      case '\k' : lcd_envia_byte(0,14); 
050B:  CLRF   70
050C:  MOVLW  0E
050D:  MOVWF  71
050E:  CALL   45A
....................               delay_us(37); 
050F:  MOVLW  18
0510:  MOVWF  77
0511:  DECFSZ 77,F
0512:  GOTO   511
0513:  NOP
....................                break; 
0514:  GOTO   525
....................      case '\z' : lcd_envia_byte(0,0x0c); 
0515:  CLRF   70
0516:  MOVLW  0C
0517:  MOVWF  71
0518:  CALL   45A
....................               delay_us(37); 
0519:  MOVLW  18
051A:  MOVWF  77
051B:  DECFSZ 77,F
051C:  GOTO   51B
051D:  NOP
....................                break;           
051E:  GOTO   525
....................      default   :   lcd_envia_byte(1,c); 
051F:  MOVLW  01
0520:  MOVWF  70
0521:  MOVF   6B,W
0522:  MOVWF  71
0523:  CALL   45A
....................               break; 
0524:  GOTO   525
....................    } 
.................... } 
0525:  RETURN
....................  
.................... #fuses    HS, NOLVP, NOPUT, NOBROWNOUT, NOWDT, NOPROTECT 
....................  
.................... //!//Outputs - versão proto 
.................... //!#define  C1      pin_b0 
.................... //!#define  C2      pin_b1 
.................... //!#define  C3      pin_b2  
.................... //!#define  C4      pin_b3  
.................... //!#define  C5      pin_b4  
.................... //!#define  C6      pin_b5  
.................... //!#define  C7      pin_b6  
.................... //!#define  C8      pin_b7 
....................  
.................... //!//Outputs - Versão placa 
.................... #define  C1      pin_b7 
.................... #define  C2      pin_b6 
.................... #define  C3      pin_b5 
.................... #define  C4      pin_b4 
.................... #define  C5      pin_b3 
.................... #define  C6      pin_b2  
.................... #define  C7      pin_b1  
.................... #define  C8      pin_b0 
....................  
....................  
.................... //Inputs IHM - comando 
.................... #define  COR     pin_a3  
.................... #define  MAQ     pin_a4  
.................... #define  RET     pin_a5 
.................... #define  RDN     pin_e0 
....................  
.................... //Inputs IHM - botões 
.................... #define  OK      pin_a0   
.................... #define  MAIS    pin_a1   
.................... #define  MENOS   pin_a2 
....................  
.................... //EEPROM 
.................... #define GET_C1   0x00 
.................... #define GET_C2   0x01 
.................... #define GET_C3   0x02 
.................... #define GET_C4   0x03 
.................... #define GET_C5   0x04 
.................... #define GET_C6   0x05 
.................... #define GET_C7   0x06 
.................... #define GET_C8   0x07 
.................... #define RDN_INI  0x08 
.................... #define RDN_FIM  0x09  
.................... #define RDN_A_D  0x0A 
.................... #define GET_SEN  0x0B 
.................... #define GET_VER  0x0C 
.................... #define GET_INV  0x0D 
....................  
.................... //Bluetooth 
.................... #define albt    pin_c5 
....................  
.................... //Variáveis 
.................... unsigned short trava_mais       = 0,    
....................                trava_menos      = 0, 
....................                trava_OK         = 0, 
....................                trava_indiv      = 0, 
....................                trava_setor      = 0, 
....................                trava_config     = 0, 
....................                trava_clock      = 0, 
....................                trava_COR        = 0, 
....................                trava_MQ         = 0, 
....................                trava_RET        = 0, 
....................                trava_RDN        = 0, 
....................                trava_menus      = 0, 
....................                trava_config_N   = 0, 
....................                trava_seta       = 0, 
....................                trava_ronda      = 0, 
....................                trava_relogio    = 0, 
....................                finalizado       = 0, 
....................                trava1           = 0, 
....................                ccto1            = 0,  
....................                ccto2            = 0, 
....................                ccto3            = 0, 
....................                ccto4            = 0, 
....................                ccto5            = 0, 
....................                ccto6            = 0, 
....................                ccto7            = 0, 
....................                ccto8            = 0,   
....................                trava_COR_C1     = 0, 
....................                trava_MAQ_C2     = 0, 
....................                trava_RET_C3     = 0, 
....................                trava_RDN_C4     = 0, 
....................                trava_COR_C5     = 0, 
....................                trava_MAQ_C6     = 0, 
....................                trava_RET_C7     = 0, 
....................                trava_okay       = 0, 
....................                trava_dsmin      = 0, 
....................                trava_dsh        = 0, 
....................                trava_dsd        = 0, 
....................                trava_dsmes      = 0, 
....................                trava_dsa        = 0, 
....................                trava_dsdsem     = 0, 
....................                trava_entra      = 0, 
....................                trava_ativado    = 0, 
....................                trava_verao      = 0, 
....................                trava_inverno    = 0, 
....................                trava_senai      = 0, 
....................                trava_auto       = 0; 
....................                 
.................... unsigned int   limite_seta      = 3, 
....................                limite_menus     = 6, 
....................                limite_config    = 3, 
....................                config_esse      = 0, 
....................                seta             = 1, 
....................                pre_programada   = 1, 
....................                muda_menus       = 1, 
....................                config           = 1, 
....................                conectado        = 0, 
....................                info                , 
....................                seg                 , 
....................                min                 , 
....................                hrs                 , 
....................                dia                 , 
....................                mes                 , 
....................                ano                 , 
....................                sem                 , 
....................                divisor2         = 0, 
....................                divisor          = 0, 
....................                i                = 0, 
....................                ativado   [8]={0b11110, 0b11110, 0b11110, 0b11110, 0b11110, 0b00000, 0b00000, 0b00000},               
*
134C:  MOVLW  1E
134D:  BCF    03.5
134E:  MOVWF  43
134F:  MOVWF  44
1350:  MOVWF  45
1351:  MOVWF  46
1352:  MOVWF  47
1353:  CLRF   48
1354:  CLRF   49
1355:  CLRF   4A
....................                desativado[8]={0b11110, 0b10010, 0b10010, 0b10010, 0b11110, 0b00000, 0b00000, 0b00000}, 
1356:  MOVWF  4B
1357:  MOVLW  12
1358:  MOVWF  4C
1359:  MOVWF  4D
135A:  MOVWF  4E
135B:  MOVLW  1E
135C:  MOVWF  4F
135D:  CLRF   50
135E:  CLRF   51
135F:  CLRF   52
....................                lugar_seta[8]={0b00000, 0b00100, 0b00010, 0b11111, 0b00010, 0b00100, 0b00000, 0b00000}, 
1360:  CLRF   53
1361:  MOVLW  04
1362:  MOVWF  54
1363:  MOVLW  02
1364:  MOVWF  55
1365:  MOVLW  1F
1366:  MOVWF  56
1367:  MOVLW  02
1368:  MOVWF  57
1369:  MOVLW  04
136A:  MOVWF  58
136B:  CLRF   59
136C:  CLRF   5A
....................                inicio    [8]={0b11100, 0b01110, 0b00111, 0b01110, 0b11100, 0b00000, 0b00000, 0b00000}; 
136D:  MOVLW  1C
136E:  MOVWF  5B
136F:  MOVLW  0E
1370:  MOVWF  5C
1371:  MOVLW  07
1372:  MOVWF  5D
1373:  MOVLW  0E
1374:  MOVWF  5E
1375:  MOVLW  1C
1376:  MOVWF  5F
1377:  CLRF   60
1378:  CLRF   61
1379:  CLRF   62
....................                 
.................... short          trava_rondac     = 0, 
....................                ativa            = 0; 
....................  
.................... char           sem_v[4]; 
....................  
.................... //INICIALIZA LCD E BLUETOOTH 
.................... void inicializa(){ 
....................  
....................    lcd_ini(); 
....................    delay_ms(250); 
*
05FC:  MOVLW  FA
05FD:  MOVWF  6C
05FE:  CALL   446
....................    lcd_escreve("\f"); 
05FF:  MOVLW  78
0600:  BSF    03.6
0601:  MOVWF  0D
0602:  MOVLW  00
0603:  MOVWF  0F
0604:  BCF    03.6
0605:  CALL   526
....................    delay_ms(250); 
0606:  MOVLW  FA
0607:  MOVWF  6C
0608:  CALL   446
....................    lcd_escreve("\k"); 
0609:  MOVLW  79
060A:  BSF    03.6
060B:  MOVWF  0D
060C:  MOVLW  00
060D:  MOVWF  0F
060E:  BCF    03.6
060F:  CALL   526
....................    lcd_escreve("\z"); 
0610:  MOVLW  7A
0611:  BSF    03.6
0612:  MOVWF  0D
0613:  MOVLW  00
0614:  MOVWF  0F
0615:  BCF    03.6
0616:  CALL   526
....................    output_high(pin_e1); 
0617:  BSF    03.5
0618:  BCF    09.1
0619:  BCF    03.5
061A:  BSF    09.1
....................     
....................    output_low(albt); 
061B:  BCF    28.5
061C:  MOVF   28,W
061D:  BSF    03.5
061E:  MOVWF  07
061F:  BCF    03.5
0620:  BCF    07.5
....................    delay_ms(1000); 
0621:  MOVLW  04
0622:  MOVWF  67
0623:  MOVLW  FA
0624:  MOVWF  6C
0625:  CALL   446
0626:  DECFSZ 67,F
0627:  GOTO   623
....................    output_high(pin_c5); 
0628:  BCF    28.5
0629:  MOVF   28,W
062A:  BSF    03.5
062B:  MOVWF  07
062C:  BCF    03.5
062D:  BSF    07.5
....................    conectado = 0; 
062E:  CLRF   37
....................  
.................... } 
062F:  BCF    0A.3
0630:  BSF    0A.4
0631:  GOTO   37C (RETURN)
....................  
.................... //APRESENTA O PROGRAMA 
.................... void apresentacao(){ 
....................  
....................    int z;                                                                  
....................     
....................    lcd_pos_xy(1,1);                                                           
*
06BE:  MOVLW  01
06BF:  MOVWF  6C
06C0:  MOVWF  6D
06C1:  CALL   4D2
....................    printf(lcd_escreve, "|     Lugh     |"); 
06C2:  MOVLW  7B
06C3:  BSF    03.6
06C4:  MOVWF  0D
06C5:  MOVLW  00
06C6:  MOVWF  0F
06C7:  BCF    03.6
06C8:  CALL   526
....................    delay_ms(500); 
06C9:  MOVLW  02
06CA:  MOVWF  68
06CB:  MOVLW  FA
06CC:  MOVWF  6C
06CD:  CALL   446
06CE:  DECFSZ 68,F
06CF:  GOTO   6CB
....................    lcd_pos_xy(1,2);  
06D0:  MOVLW  01
06D1:  MOVWF  6C
06D2:  MOVLW  02
06D3:  MOVWF  6D
06D4:  CALL   4D2
....................    printf(lcd_escreve, "|     Light    |"); 
06D5:  MOVLW  84
06D6:  BSF    03.6
06D7:  MOVWF  0D
06D8:  MOVLW  00
06D9:  MOVWF  0F
06DA:  BCF    03.6
06DB:  CALL   526
....................    delay_ms(2000); 
06DC:  MOVLW  08
06DD:  MOVWF  68
06DE:  MOVLW  FA
06DF:  MOVWF  6C
06E0:  CALL   446
06E1:  DECFSZ 68,F
06E2:  GOTO   6DE
....................     
....................    for (z=0;z<=16;z++){                                                        
06E3:  CLRF   67
06E4:  MOVF   67,W
06E5:  SUBLW  10
06E6:  BTFSS  03.0
06E7:  GOTO   6FE
....................       lcd_pos_xy(z,1); 
06E8:  MOVF   67,W
06E9:  MOVWF  6C
06EA:  MOVLW  01
06EB:  MOVWF  6D
06EC:  CALL   4D2
....................       cgram(0); 
06ED:  CLRF   68
06EE:  CALL   6B8
....................       delay_ms(50); 
06EF:  MOVLW  32
06F0:  MOVWF  6C
06F1:  CALL   446
....................       lcd_pos_xy(z,2); 
06F2:  MOVF   67,W
06F3:  MOVWF  6C
06F4:  MOVLW  02
06F5:  MOVWF  6D
06F6:  CALL   4D2
....................       cgram(0);                                          
06F7:  CLRF   68
06F8:  CALL   6B8
....................       delay_ms(50);    
06F9:  MOVLW  32
06FA:  MOVWF  6C
06FB:  CALL   446
....................    }       
06FC:  INCF   67,F
06FD:  GOTO   6E4
....................     
....................    lcd_pos_xy(5,1);                                
06FE:  MOVLW  05
06FF:  MOVWF  6C
0700:  MOVLW  01
0701:  MOVWF  6D
0702:  CALL   4D2
....................    printf(lcd_escreve, " SENAI ");                                            
0703:  MOVLW  8D
0704:  BSF    03.6
0705:  MOVWF  0D
0706:  MOVLW  00
0707:  MOVWF  0F
0708:  BCF    03.6
0709:  CALL   526
....................    delay_ms(2000); 
070A:  MOVLW  08
070B:  MOVWF  68
070C:  MOVLW  FA
070D:  MOVWF  6C
070E:  CALL   446
070F:  DECFSZ 68,F
0710:  GOTO   70C
....................    lcd_escreve("\f"); 
0711:  MOVLW  91
0712:  BSF    03.6
0713:  MOVWF  0D
0714:  MOVLW  00
0715:  MOVWF  0F
0716:  BCF    03.6
0717:  CALL   526
.................... } 
0718:  BCF    0A.3
0719:  BSF    0A.4
071A:  GOTO   382 (RETURN)
....................  
.................... //GRAVA DADOS NA MEMÓRIA CGRAM 
.................... void ativa_CGRAM(){ 
....................  
....................    cgram_x(0); 
*
0632:  CLRF   67
....................    for(i=0;i<=7 ;i++) lcd_envia_byte(1,inicio[i]); 
*
0640:  CLRF   42
0641:  MOVF   42,W
0642:  SUBLW  07
0643:  BTFSS  03.0
0644:  GOTO   652
0645:  MOVLW  5B
0646:  ADDWF  42,W
0647:  MOVWF  04
0648:  BCF    03.7
0649:  MOVF   00,W
064A:  MOVWF  67
064B:  MOVLW  01
064C:  MOVWF  70
064D:  MOVF   67,W
064E:  MOVWF  71
064F:  CALL   45A
0650:  INCF   42,F
0651:  GOTO   641
....................     
....................    /* 
....................    inicio    [8]={0b11100,  
....................                   0b01110,  
....................                   0b00111,  
....................                   0b01110,  
....................                   0b11100,  
....................                   0b00000,  
....................                   0b00000,  
....................                   0b00000}, 
....................    */ 
....................  
....................    cgram_x(1); 
0652:  MOVLW  01
0653:  MOVWF  67
....................    for(i=0;i<=7 ;i++) lcd_envia_byte(1,ativado[i]); 
*
0661:  CLRF   42
0662:  MOVF   42,W
0663:  SUBLW  07
0664:  BTFSS  03.0
0665:  GOTO   673
0666:  MOVLW  43
0667:  ADDWF  42,W
0668:  MOVWF  04
0669:  BCF    03.7
066A:  MOVF   00,W
066B:  MOVWF  67
066C:  MOVLW  01
066D:  MOVWF  70
066E:  MOVF   67,W
066F:  MOVWF  71
0670:  CALL   45A
0671:  INCF   42,F
0672:  GOTO   662
....................     
....................    /* 
....................    ativado   [8]={0b11110,  
....................                   0b11110,  
....................                   0b11110,  
....................                   0b11110,  
....................                   0b11110,  
....................                   0b00000,  
....................                   0b00000,  
....................                   0b00000}, 
....................    */ 
....................     
....................    cgram_x(2); 
0673:  MOVLW  02
0674:  MOVWF  67
....................    for(i=0;i<=7 ;i++) lcd_envia_byte(1,desativado[i]);  
*
0682:  CLRF   42
0683:  MOVF   42,W
0684:  SUBLW  07
0685:  BTFSS  03.0
0686:  GOTO   694
0687:  MOVLW  4B
0688:  ADDWF  42,W
0689:  MOVWF  04
068A:  BCF    03.7
068B:  MOVF   00,W
068C:  MOVWF  67
068D:  MOVLW  01
068E:  MOVWF  70
068F:  MOVF   67,W
0690:  MOVWF  71
0691:  CALL   45A
0692:  INCF   42,F
0693:  GOTO   683
....................     
....................    /* 
....................    desativado[8]={0b11110,  
....................                   0b10010,  
....................                   0b10010,  
....................                   0b10010,  
....................                   0b11110,  
....................                   0b00000,  
....................                   0b00000,  
....................                   0b00000}, 
....................    */ 
....................     
....................    cgram_x(3); 
0694:  MOVLW  03
0695:  MOVWF  67
....................    for(i=0;i<=7 ;i++) lcd_envia_byte(1,lugar_seta[i]);  
*
06A3:  CLRF   42
06A4:  MOVF   42,W
06A5:  SUBLW  07
06A6:  BTFSS  03.0
06A7:  GOTO   6B5
06A8:  MOVLW  53
06A9:  ADDWF  42,W
06AA:  MOVWF  04
06AB:  BCF    03.7
06AC:  MOVF   00,W
06AD:  MOVWF  67
06AE:  MOVLW  01
06AF:  MOVWF  70
06B0:  MOVF   67,W
06B1:  MOVWF  71
06B2:  CALL   45A
06B3:  INCF   42,F
06B4:  GOTO   6A4
....................     
....................    /* 
....................    lugar_seta[8]={0b00000,  
....................                   0b00100,  
....................                   0b00010,  
....................                   0b11111,  
....................                   0b00010,  
....................                   0b00100,  
....................                   0b00000,  
....................                   0b00000}, 
....................    */ 
.................... } 
06B5:  BCF    0A.3
06B6:  BSF    0A.4
06B7:  GOTO   37F (RETURN)
....................  
.................... //INICIALIZA ROTINA DE INTERRUPÇÃO 
.................... void timers(){ 
....................  
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_64); 
*
071B:  BSF    03.5
071C:  MOVF   01,W
071D:  ANDLW  C0
071E:  IORLW  05
071F:  MOVWF  01
....................    set_timer0(131); 
0720:  MOVLW  83
0721:  BCF    03.5
0722:  MOVWF  01
....................     
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_8); 
0723:  MOVLW  B5
0724:  MOVWF  10
....................    set_timer1(131); 
0725:  CLRF   0F
0726:  MOVLW  83
0727:  MOVWF  0E
....................     
....................    enable_interrupts(INT_TIMER1); 
0728:  BSF    03.5
0729:  BSF    0C.0
....................    enable_interrupts(INT_RTCC); 
072A:  BCF    03.5
072B:  BSF    0B.5
....................    enable_interrupts(GLOBAL); 
072C:  MOVLW  C0
072D:  IORWF  0B,F
....................     
.................... } 
072E:  BCF    0A.3
072F:  BSF    0A.4
0730:  GOTO   388 (RETURN)
....................  
.................... //GUARDA DADOS NA MEMÓRIA EEPROM        
.................... void escreve_EEPROM(){ 
....................     
....................    write_eeprom(GET_C1, ccto1); 
*
023B:  MOVLW  00
023C:  BTFSC  2B.2
023D:  MOVLW  01
023E:  MOVWF  7B
023F:  BSF    03.6
0240:  CLRF   0D
0241:  MOVF   7B,W
0242:  MOVWF  0C
0243:  BSF    03.5
0244:  BCF    0C.7
0245:  BSF    0C.2
0246:  BCF    03.5
0247:  BCF    03.6
0248:  MOVF   0B,W
0249:  MOVWF  77
024A:  BCF    0B.7
024B:  BSF    03.5
024C:  BSF    03.6
024D:  MOVLW  55
024E:  MOVWF  0D
024F:  MOVLW  AA
0250:  MOVWF  0D
0251:  BSF    0C.1
0252:  BTFSC  0C.1
0253:  GOTO   252
0254:  BCF    0C.2
0255:  MOVF   77,W
0256:  BCF    03.5
0257:  BCF    03.6
0258:  IORWF  0B,F
....................    write_eeprom(GET_C2, ccto2); 
0259:  MOVLW  00
025A:  BTFSC  2B.3
025B:  MOVLW  01
025C:  MOVWF  7B
025D:  MOVLW  01
025E:  BSF    03.6
025F:  MOVWF  0D
0260:  MOVF   7B,W
0261:  MOVWF  0C
0262:  BSF    03.5
0263:  BCF    0C.7
0264:  BSF    0C.2
0265:  BCF    03.5
0266:  BCF    03.6
0267:  MOVF   0B,W
0268:  MOVWF  77
0269:  BCF    0B.7
026A:  BSF    03.5
026B:  BSF    03.6
026C:  MOVLW  55
026D:  MOVWF  0D
026E:  MOVLW  AA
026F:  MOVWF  0D
0270:  BSF    0C.1
0271:  BTFSC  0C.1
0272:  GOTO   271
0273:  BCF    0C.2
0274:  MOVF   77,W
0275:  BCF    03.5
0276:  BCF    03.6
0277:  IORWF  0B,F
....................    write_eeprom(GET_C3, ccto3); 
0278:  MOVLW  00
0279:  BTFSC  2B.4
027A:  MOVLW  01
027B:  MOVWF  7B
027C:  MOVLW  02
027D:  BSF    03.6
027E:  MOVWF  0D
027F:  MOVF   7B,W
0280:  MOVWF  0C
0281:  BSF    03.5
0282:  BCF    0C.7
0283:  BSF    0C.2
0284:  BCF    03.5
0285:  BCF    03.6
0286:  MOVF   0B,W
0287:  MOVWF  77
0288:  BCF    0B.7
0289:  BSF    03.5
028A:  BSF    03.6
028B:  MOVLW  55
028C:  MOVWF  0D
028D:  MOVLW  AA
028E:  MOVWF  0D
028F:  BSF    0C.1
0290:  BTFSC  0C.1
0291:  GOTO   290
0292:  BCF    0C.2
0293:  MOVF   77,W
0294:  BCF    03.5
0295:  BCF    03.6
0296:  IORWF  0B,F
....................    write_eeprom(GET_C4, ccto4); 
0297:  MOVLW  00
0298:  BTFSC  2B.5
0299:  MOVLW  01
029A:  MOVWF  7B
029B:  MOVLW  03
029C:  BSF    03.6
029D:  MOVWF  0D
029E:  MOVF   7B,W
029F:  MOVWF  0C
02A0:  BSF    03.5
02A1:  BCF    0C.7
02A2:  BSF    0C.2
02A3:  BCF    03.5
02A4:  BCF    03.6
02A5:  MOVF   0B,W
02A6:  MOVWF  77
02A7:  BCF    0B.7
02A8:  BSF    03.5
02A9:  BSF    03.6
02AA:  MOVLW  55
02AB:  MOVWF  0D
02AC:  MOVLW  AA
02AD:  MOVWF  0D
02AE:  BSF    0C.1
02AF:  BTFSC  0C.1
02B0:  GOTO   2AF
02B1:  BCF    0C.2
02B2:  MOVF   77,W
02B3:  BCF    03.5
02B4:  BCF    03.6
02B5:  IORWF  0B,F
....................    write_eeprom(GET_C5, ccto5); 
02B6:  MOVLW  00
02B7:  BTFSC  2B.6
02B8:  MOVLW  01
02B9:  MOVWF  7B
02BA:  MOVLW  04
02BB:  BSF    03.6
02BC:  MOVWF  0D
02BD:  MOVF   7B,W
02BE:  MOVWF  0C
02BF:  BSF    03.5
02C0:  BCF    0C.7
02C1:  BSF    0C.2
02C2:  BCF    03.5
02C3:  BCF    03.6
02C4:  MOVF   0B,W
02C5:  MOVWF  77
02C6:  BCF    0B.7
02C7:  BSF    03.5
02C8:  BSF    03.6
02C9:  MOVLW  55
02CA:  MOVWF  0D
02CB:  MOVLW  AA
02CC:  MOVWF  0D
02CD:  BSF    0C.1
02CE:  BTFSC  0C.1
02CF:  GOTO   2CE
02D0:  BCF    0C.2
02D1:  MOVF   77,W
02D2:  BCF    03.5
02D3:  BCF    03.6
02D4:  IORWF  0B,F
....................    write_eeprom(GET_C6, ccto6);    
02D5:  MOVLW  00
02D6:  BTFSC  2B.7
02D7:  MOVLW  01
02D8:  MOVWF  7B
02D9:  MOVLW  05
02DA:  BSF    03.6
02DB:  MOVWF  0D
02DC:  MOVF   7B,W
02DD:  MOVWF  0C
02DE:  BSF    03.5
02DF:  BCF    0C.7
02E0:  BSF    0C.2
02E1:  BCF    03.5
02E2:  BCF    03.6
02E3:  MOVF   0B,W
02E4:  MOVWF  77
02E5:  BCF    0B.7
02E6:  BSF    03.5
02E7:  BSF    03.6
02E8:  MOVLW  55
02E9:  MOVWF  0D
02EA:  MOVLW  AA
02EB:  MOVWF  0D
02EC:  BSF    0C.1
02ED:  BTFSC  0C.1
02EE:  GOTO   2ED
02EF:  BCF    0C.2
02F0:  MOVF   77,W
02F1:  BCF    03.5
02F2:  BCF    03.6
02F3:  IORWF  0B,F
....................    write_eeprom(GET_C7, ccto7); 
02F4:  MOVLW  00
02F5:  BTFSC  2C.0
02F6:  MOVLW  01
02F7:  MOVWF  7B
02F8:  MOVLW  06
02F9:  BSF    03.6
02FA:  MOVWF  0D
02FB:  MOVF   7B,W
02FC:  MOVWF  0C
02FD:  BSF    03.5
02FE:  BCF    0C.7
02FF:  BSF    0C.2
0300:  BCF    03.5
0301:  BCF    03.6
0302:  MOVF   0B,W
0303:  MOVWF  77
0304:  BCF    0B.7
0305:  BSF    03.5
0306:  BSF    03.6
0307:  MOVLW  55
0308:  MOVWF  0D
0309:  MOVLW  AA
030A:  MOVWF  0D
030B:  BSF    0C.1
030C:  BTFSC  0C.1
030D:  GOTO   30C
030E:  BCF    0C.2
030F:  MOVF   77,W
0310:  BCF    03.5
0311:  BCF    03.6
0312:  IORWF  0B,F
....................    write_eeprom(GET_C8, ccto8); 
0313:  MOVLW  00
0314:  BTFSC  2C.1
0315:  MOVLW  01
0316:  MOVWF  7B
0317:  MOVLW  07
0318:  BSF    03.6
0319:  MOVWF  0D
031A:  MOVF   7B,W
031B:  MOVWF  0C
031C:  BSF    03.5
031D:  BCF    0C.7
031E:  BSF    0C.2
031F:  BCF    03.5
0320:  BCF    03.6
0321:  MOVF   0B,W
0322:  MOVWF  77
0323:  BCF    0B.7
0324:  BSF    03.5
0325:  BSF    03.6
0326:  MOVLW  55
0327:  MOVWF  0D
0328:  MOVLW  AA
0329:  MOVWF  0D
032A:  BSF    0C.1
032B:  BTFSC  0C.1
032C:  GOTO   32B
032D:  BCF    0C.2
032E:  MOVF   77,W
032F:  BCF    03.5
0330:  BCF    03.6
0331:  IORWF  0B,F
....................  
....................    write_eeprom(RDN_A_D, trava_ativado); 
0332:  MOVLW  00
0333:  BTFSC  2E.1
0334:  MOVLW  01
0335:  MOVWF  7B
0336:  MOVLW  0A
0337:  BSF    03.6
0338:  MOVWF  0D
0339:  MOVF   7B,W
033A:  MOVWF  0C
033B:  BSF    03.5
033C:  BCF    0C.7
033D:  BSF    0C.2
033E:  BCF    03.5
033F:  BCF    03.6
0340:  MOVF   0B,W
0341:  MOVWF  77
0342:  BCF    0B.7
0343:  BSF    03.5
0344:  BSF    03.6
0345:  MOVLW  55
0346:  MOVWF  0D
0347:  MOVLW  AA
0348:  MOVWF  0D
0349:  BSF    0C.1
034A:  BTFSC  0C.1
034B:  GOTO   34A
034C:  BCF    0C.2
034D:  MOVF   77,W
034E:  BCF    03.5
034F:  BCF    03.6
0350:  IORWF  0B,F
....................  
.................... } 
0351:  RETURN
....................  
.................... //LÊ DADOS ARMAZENADOS NA MEMÓRIA EEPROM  
....................  void leitura_EEPROM(){ 
....................  
....................    ccto1 = read_EEPROM(GET_C1); 
0352:  BSF    03.6
0353:  CLRF   0D
0354:  BSF    03.5
0355:  BCF    0C.7
0356:  BSF    0C.0
0357:  BCF    03.5
0358:  MOVF   0C,W
0359:  MOVWF  78
035A:  BCF    03.6
035B:  BCF    2B.2
035C:  BTFSC  78.0
035D:  BSF    2B.2
....................    ccto2 = read_EEPROM(GET_C2); 
035E:  MOVLW  01
035F:  BSF    03.6
0360:  MOVWF  0D
0361:  BSF    03.5
0362:  BCF    0C.7
0363:  BSF    0C.0
0364:  BCF    03.5
0365:  MOVF   0C,W
0366:  MOVWF  78
0367:  BCF    03.6
0368:  BCF    2B.3
0369:  BTFSC  78.0
036A:  BSF    2B.3
....................    ccto3 = read_EEPROM(GET_C3); 
036B:  MOVLW  02
036C:  BSF    03.6
036D:  MOVWF  0D
036E:  BSF    03.5
036F:  BCF    0C.7
0370:  BSF    0C.0
0371:  BCF    03.5
0372:  MOVF   0C,W
0373:  MOVWF  78
0374:  BCF    03.6
0375:  BCF    2B.4
0376:  BTFSC  78.0
0377:  BSF    2B.4
....................    ccto4 = read_EEPROM(GET_C4); 
0378:  MOVLW  03
0379:  BSF    03.6
037A:  MOVWF  0D
037B:  BSF    03.5
037C:  BCF    0C.7
037D:  BSF    0C.0
037E:  BCF    03.5
037F:  MOVF   0C,W
0380:  MOVWF  78
0381:  BCF    03.6
0382:  BCF    2B.5
0383:  BTFSC  78.0
0384:  BSF    2B.5
....................    ccto5 = read_EEPROM(GET_C5); 
0385:  MOVLW  04
0386:  BSF    03.6
0387:  MOVWF  0D
0388:  BSF    03.5
0389:  BCF    0C.7
038A:  BSF    0C.0
038B:  BCF    03.5
038C:  MOVF   0C,W
038D:  MOVWF  78
038E:  BCF    03.6
038F:  BCF    2B.6
0390:  BTFSC  78.0
0391:  BSF    2B.6
....................    ccto6 = read_EEPROM(GET_C6); 
0392:  MOVLW  05
0393:  BSF    03.6
0394:  MOVWF  0D
0395:  BSF    03.5
0396:  BCF    0C.7
0397:  BSF    0C.0
0398:  BCF    03.5
0399:  MOVF   0C,W
039A:  MOVWF  78
039B:  BCF    03.6
039C:  BCF    2B.7
039D:  BTFSC  78.0
039E:  BSF    2B.7
....................    ccto7 = read_EEPROM(GET_C7); 
039F:  MOVLW  06
03A0:  BSF    03.6
03A1:  MOVWF  0D
03A2:  BSF    03.5
03A3:  BCF    0C.7
03A4:  BSF    0C.0
03A5:  BCF    03.5
03A6:  MOVF   0C,W
03A7:  MOVWF  78
03A8:  BCF    03.6
03A9:  BCF    2C.0
03AA:  BTFSC  78.0
03AB:  BSF    2C.0
....................    ccto8 = read_EEPROM(GET_C8); 
03AC:  MOVLW  07
03AD:  BSF    03.6
03AE:  MOVWF  0D
03AF:  BSF    03.5
03B0:  BCF    0C.7
03B1:  BSF    0C.0
03B2:  BCF    03.5
03B3:  MOVF   0C,W
03B4:  MOVWF  78
03B5:  BCF    03.6
03B6:  BCF    2C.1
03B7:  BTFSC  78.0
03B8:  BSF    2C.1
....................  
....................    trava_ativado = read_EEPROM(RDN_A_D);  
03B9:  MOVLW  0A
03BA:  BSF    03.6
03BB:  MOVWF  0D
03BC:  BSF    03.5
03BD:  BCF    0C.7
03BE:  BSF    0C.0
03BF:  BCF    03.5
03C0:  MOVF   0C,W
03C1:  MOVWF  78
03C2:  BCF    03.6
03C3:  BCF    2E.1
03C4:  BTFSC  78.0
03C5:  BSF    2E.1
....................     
....................     
....................    output_bit(C1,ccto1);  
03C6:  BTFSC  2B.2
03C7:  GOTO   3CA
03C8:  BCF    06.7
03C9:  GOTO   3CB
03CA:  BSF    06.7
03CB:  BSF    03.5
03CC:  BCF    06.7
....................    output_bit(C2,ccto2);                               
03CD:  BCF    03.5
03CE:  BTFSC  2B.3
03CF:  GOTO   3D2
03D0:  BCF    06.6
03D1:  GOTO   3D3
03D2:  BSF    06.6
03D3:  BSF    03.5
03D4:  BCF    06.6
....................    output_bit(C3,ccto3); 
03D5:  BCF    03.5
03D6:  BTFSC  2B.4
03D7:  GOTO   3DA
03D8:  BCF    06.5
03D9:  GOTO   3DB
03DA:  BSF    06.5
03DB:  BSF    03.5
03DC:  BCF    06.5
....................    output_bit(C4,ccto4); 
03DD:  BCF    03.5
03DE:  BTFSC  2B.5
03DF:  GOTO   3E2
03E0:  BCF    06.4
03E1:  GOTO   3E3
03E2:  BSF    06.4
03E3:  BSF    03.5
03E4:  BCF    06.4
....................    output_bit(C5,ccto5);                                              
03E5:  BCF    03.5
03E6:  BTFSC  2B.6
03E7:  GOTO   3EA
03E8:  BCF    06.3
03E9:  GOTO   3EB
03EA:  BSF    06.3
03EB:  BSF    03.5
03EC:  BCF    06.3
....................    output_bit(C6,ccto6); 
03ED:  BCF    03.5
03EE:  BTFSC  2B.7
03EF:  GOTO   3F2
03F0:  BCF    06.2
03F1:  GOTO   3F3
03F2:  BSF    06.2
03F3:  BSF    03.5
03F4:  BCF    06.2
....................    output_bit(C7,ccto7); 
03F5:  BCF    03.5
03F6:  BTFSC  2C.0
03F7:  GOTO   3FA
03F8:  BCF    06.1
03F9:  GOTO   3FB
03FA:  BSF    06.1
03FB:  BSF    03.5
03FC:  BCF    06.1
....................    output_bit(C8,ccto8); 
03FD:  BCF    03.5
03FE:  BTFSC  2C.1
03FF:  GOTO   402
0400:  BCF    06.0
0401:  GOTO   403
0402:  BSF    06.0
0403:  BSF    03.5
0404:  BCF    06.0
....................     
....................  
....................     
.................... } 
0405:  BCF    03.5
0406:  RETURN
....................  
.................... //ATIVA MODULO BLUETOOTH  
.................... void LUGH_LIGHT2(){ 
....................  
....................       switch(info){ 
*
01C5:  MOVF   38,W
01C6:  XORLW  49
01C7:  BTFSC  03.2
01C8:  GOTO   1D9
01C9:  XORLW  06
01CA:  BTFSC  03.2
01CB:  GOTO   1DC
01CC:  XORLW  1F
01CD:  BTFSC  03.2
01CE:  GOTO   1DF
01CF:  XORLW  11
01D0:  BTFSC  03.2
01D1:  GOTO   1E2
01D2:  XORLW  12
01D3:  BTFSC  03.2
01D4:  GOTO   1E5
01D5:  XORLW  10
01D6:  BTFSC  03.2
01D7:  GOTO   1E8
01D8:  GOTO   1EB
....................  
....................          //ALTERA C4 
....................          case 'I': 
....................          ccto4 = ~ccto4; 
01D9:  MOVLW  20
01DA:  XORWF  2B,F
....................          break; 
01DB:  GOTO   1EB
....................  
....................          //ALTERA C5 
....................          case 'O': 
....................          ccto5 = ~ccto5; 
01DC:  MOVLW  40
01DD:  XORWF  2B,F
....................          break; 
01DE:  GOTO   1EB
....................  
....................          //ALTERA C6 
....................          case 'P': 
....................          ccto6 = ~ccto6; 
01DF:  MOVLW  80
01E0:  XORWF  2B,F
....................          break; 
01E1:  GOTO   1EB
....................  
....................          //ALTERA C7 
....................          case 'A':  
....................          ccto7 = ~ccto7; 
01E2:  MOVLW  01
01E3:  XORWF  2C,F
....................          break; 
01E4:  GOTO   1EB
....................  
....................          //ALTERA C8 
....................          case 'S': 
....................          ccto8 = ~ccto8; 
01E5:  MOVLW  02
01E6:  XORWF  2C,F
....................          break; 
01E7:  GOTO   1EB
....................  
....................          case 'C': 
....................          conectado=1; 
01E8:  MOVLW  01
01E9:  MOVWF  37
....................          break; 
01EA:  GOTO   1EB
....................       } 
....................       break; 
.................... } 
01EB:  RETURN
....................  
.................... //ATIVA MODULO BLUETOOTH 
.................... void LUGH_LIGHT(){ 
....................  
....................    while (1){ 
....................     
....................       if(kbhit()==1){ 
*
01F0:  MOVLW  00
01F1:  BTFSC  0C.5
01F2:  MOVLW  01
01F3:  SUBLW  01
01F4:  BTFSS  03.2
01F5:  GOTO   1FA
....................          info=getc(); 
01F6:  BTFSS  0C.5
01F7:  GOTO   1F6
01F8:  MOVF   1A,W
01F9:  MOVWF  38
....................           
....................       } 
....................                      
....................       switch(info){ 
01FA:  MOVF   38,W
01FB:  XORLW  51
01FC:  BTFSC  03.2
01FD:  GOTO   211
01FE:  XORLW  06
01FF:  BTFSC  03.2
0200:  GOTO   218
0201:  XORLW  12
0202:  BTFSC  03.2
0203:  GOTO   21D
0204:  XORLW  17
0205:  BTFSC  03.2
0206:  GOTO   222
0207:  XORLW  06
0208:  BTFSC  03.2
0209:  GOTO   225
020A:  XORLW  0D
020B:  BTFSC  03.2
020C:  GOTO   228
020D:  XORLW  0C
020E:  BTFSC  03.2
020F:  GOTO   22B
0210:  GOTO   22F
....................       
....................          //ALTERA MÁQUINAS 
....................          case 'Q': 
....................          ccto2 = ~ccto2; 
0211:  MOVLW  08
0212:  XORWF  2B,F
....................          ccto3 = ~ccto3; 
0213:  MOVLW  10
0214:  XORWF  2B,F
....................          ccto4 = ~ccto4; 
0215:  MOVLW  20
0216:  XORWF  2B,F
....................          break; 
0217:  GOTO   22F
....................         
....................          //ALTERA RETÍFICA 
....................          case 'W':  
....................          ccto5 = ~ccto5; 
0218:  MOVLW  40
0219:  XORWF  2B,F
....................          ccto6 = ~ccto6; 
021A:  MOVLW  80
021B:  XORWF  2B,F
....................          break; 
021C:  GOTO   22F
....................          
....................          //ALTERA CORREDOR 
....................          case 'E': 
....................          ccto1 = ~ccto1; 
021D:  MOVLW  04
021E:  XORWF  2B,F
....................          ccto7 = ~ccto7; 
021F:  MOVLW  01
0220:  XORWF  2C,F
....................          break; 
0221:  GOTO   22F
....................          
....................          //ALTERA RONDA NOTURNA 
....................          case 'R': 
....................          ccto8 = ~ccto8; 
0222:  MOVLW  02
0223:  XORWF  2C,F
....................          break; 
0224:  GOTO   22F
....................          
....................          //ALTERA C1 
....................          case 'T': 
....................          ccto1 = ~ccto1; 
0225:  MOVLW  04
0226:  XORWF  2B,F
....................          break; 
0227:  GOTO   22F
....................          
....................          //ALTERA C2 
....................          case 'Y': 
....................          ccto2 = ~ccto2; 
0228:  MOVLW  08
0229:  XORWF  2B,F
....................          break; 
022A:  GOTO   22F
....................          
....................          //ALTERA C3 
....................          case 'U':  
....................          ccto3 = ~ccto3; 
022B:  MOVLW  10
022C:  XORWF  2B,F
....................          break; 
022D:  GOTO   22F
....................         LUGH_LIGHT2(); 
022E:  CALL   1C5
....................       } 
....................       break; 
022F:  GOTO   231
....................    } 
0230:  GOTO   1F0
.................... } 
....................  
.................... //LEITURA DE DADOS RTC - HORAS/MINUTOS/SEGUNDOS 
.................... void le_hora_rtc(){ 
....................    i2c_start();                  // Inicia com. p/ escrita 
*
0B5B:  BSF    28.4
0B5C:  MOVF   28,W
0B5D:  BSF    03.5
0B5E:  MOVWF  07
0B5F:  NOP
0B60:  BCF    03.5
0B61:  BSF    28.3
0B62:  MOVF   28,W
0B63:  BSF    03.5
0B64:  MOVWF  07
0B65:  NOP
0B66:  BCF    03.5
0B67:  BCF    07.4
0B68:  BCF    28.4
0B69:  MOVF   28,W
0B6A:  BSF    03.5
0B6B:  MOVWF  07
0B6C:  NOP
0B6D:  BCF    03.5
0B6E:  BCF    07.3
0B6F:  BCF    28.3
0B70:  MOVF   28,W
0B71:  BSF    03.5
0B72:  MOVWF  07
....................    /* Pede o horário */ 
....................    i2c_write(0b11010000);        // End:1101000 0(escrita) 
0B73:  MOVLW  D0
0B74:  BCF    03.5
0B75:  MOVWF  67
0B76:  CALL   2CC
....................    i2c_write(0x00);              // End:00h do RTC(seg)                                  // comanda segundos 
0B77:  CLRF   67
0B78:  CALL   2CC
....................    /* Recebe o horário */ 
....................    i2c_start();                  // Inicia com. p/ leitura 
0B79:  BSF    28.4
0B7A:  MOVF   28,W
0B7B:  BSF    03.5
0B7C:  MOVWF  07
0B7D:  NOP
0B7E:  BCF    03.5
0B7F:  BSF    28.3
0B80:  MOVF   28,W
0B81:  BSF    03.5
0B82:  MOVWF  07
0B83:  NOP
0B84:  BCF    03.5
0B85:  BTFSS  07.3
0B86:  GOTO   385
0B87:  BCF    07.4
0B88:  BCF    28.4
0B89:  MOVF   28,W
0B8A:  BSF    03.5
0B8B:  MOVWF  07
0B8C:  NOP
0B8D:  BCF    03.5
0B8E:  BCF    07.3
0B8F:  BCF    28.3
0B90:  MOVF   28,W
0B91:  BSF    03.5
0B92:  MOVWF  07
....................    i2c_write(0b11010001);        // End:1101000 1(leitura)   
0B93:  MOVLW  D1
0B94:  BCF    03.5
0B95:  MOVWF  67
0B96:  CALL   2CC
....................    seg = i2c_read(1);            // seg<-RTC(00h) - ACK 
0B97:  MOVLW  01
0B98:  MOVWF  77
0B99:  CALL   316
0B9A:  MOVF   78,W
0B9B:  MOVWF  39
....................    min = i2c_read(1);            // min<-RTC(01h) - ACK 
0B9C:  MOVLW  01
0B9D:  MOVWF  77
0B9E:  CALL   316
0B9F:  MOVF   78,W
0BA0:  MOVWF  3A
....................    hrs = i2c_read(0);            // hrs<-RTC(02h) - no ACK 
0BA1:  CLRF   77
0BA2:  CALL   316
0BA3:  MOVF   78,W
0BA4:  MOVWF  3B
....................    i2c_stop(); 
0BA5:  BCF    28.4
0BA6:  MOVF   28,W
0BA7:  BSF    03.5
0BA8:  MOVWF  07
0BA9:  NOP
0BAA:  BCF    03.5
0BAB:  BSF    28.3
0BAC:  MOVF   28,W
0BAD:  BSF    03.5
0BAE:  MOVWF  07
0BAF:  BCF    03.5
0BB0:  BTFSS  07.3
0BB1:  GOTO   3B0
0BB2:  NOP
0BB3:  GOTO   3B4
0BB4:  NOP
0BB5:  BSF    28.4
0BB6:  MOVF   28,W
0BB7:  BSF    03.5
0BB8:  MOVWF  07
0BB9:  NOP
.................... }    
0BBA:  BCF    03.5
0BBB:  RETURN
....................  
.................... //ESCRITA DE DADOS RTC - HORAS/MINUTOS/SEGUNDOS 
.................... void escreve_hora_rtc(){ 
....................    i2c_start();                  // Inicia com. p/ escrita 
*
0F55:  BSF    28.4
0F56:  MOVF   28,W
0F57:  BSF    03.5
0F58:  MOVWF  07
0F59:  NOP
0F5A:  BCF    03.5
0F5B:  BSF    28.3
0F5C:  MOVF   28,W
0F5D:  BSF    03.5
0F5E:  MOVWF  07
0F5F:  NOP
0F60:  BCF    03.5
0F61:  BCF    07.4
0F62:  BCF    28.4
0F63:  MOVF   28,W
0F64:  BSF    03.5
0F65:  MOVWF  07
0F66:  NOP
0F67:  BCF    03.5
0F68:  BCF    07.3
0F69:  BCF    28.3
0F6A:  MOVF   28,W
0F6B:  BSF    03.5
0F6C:  MOVWF  07
....................    /* Seleciona horário */ 
....................    i2c_write(0b11010000);        // End:1101000 0(escrita) 
0F6D:  MOVLW  D0
0F6E:  BCF    03.5
0F6F:  MOVWF  67
0F70:  CALL   2CC
....................    i2c_write(0x00);              // End:00h do RTC(seg)                                  // comanda segundos 
0F71:  CLRF   67
0F72:  CALL   2CC
....................    /* Escreve horário */ 
....................    i2c_write(seg);               // End:00h do RTC(seg) 
0F73:  MOVF   39,W
0F74:  MOVWF  67
0F75:  CALL   2CC
....................    i2c_write(min);               // End:01h do RTC(min) 
0F76:  MOVF   3A,W
0F77:  MOVWF  67
0F78:  CALL   2CC
....................    i2c_write(hrs);               // End:02h do RTC(hrs) 
0F79:  MOVF   3B,W
0F7A:  MOVWF  67
0F7B:  CALL   2CC
....................    i2c_stop(); 
0F7C:  BCF    28.4
0F7D:  MOVF   28,W
0F7E:  BSF    03.5
0F7F:  MOVWF  07
0F80:  NOP
0F81:  BCF    03.5
0F82:  BSF    28.3
0F83:  MOVF   28,W
0F84:  BSF    03.5
0F85:  MOVWF  07
0F86:  BCF    03.5
0F87:  BTFSS  07.3
0F88:  GOTO   787
0F89:  NOP
0F8A:  GOTO   78B
0F8B:  NOP
0F8C:  BSF    28.4
0F8D:  MOVF   28,W
0F8E:  BSF    03.5
0F8F:  MOVWF  07
0F90:  NOP
.................... }    
0F91:  BCF    03.5
0F92:  RETURN
....................  
.................... //LEITURA DE DADOS RTC - DIA/MÊS/ANO 
.................... void le_data_rtc(){ 
....................  
....................    i2c_start();                  // Inicia com. p/ escrita 
*
0D7D:  BSF    28.4
0D7E:  MOVF   28,W
0D7F:  BSF    03.5
0D80:  MOVWF  07
0D81:  NOP
0D82:  BCF    03.5
0D83:  BSF    28.3
0D84:  MOVF   28,W
0D85:  BSF    03.5
0D86:  MOVWF  07
0D87:  NOP
0D88:  BCF    03.5
0D89:  BCF    07.4
0D8A:  BCF    28.4
0D8B:  MOVF   28,W
0D8C:  BSF    03.5
0D8D:  MOVWF  07
0D8E:  NOP
0D8F:  BCF    03.5
0D90:  BCF    07.3
0D91:  BCF    28.3
0D92:  MOVF   28,W
0D93:  BSF    03.5
0D94:  MOVWF  07
....................    /* Pede a data */ 
....................    i2c_write(0b11010000);        // End:1101000 0(escrita) 
0D95:  MOVLW  D0
0D96:  BCF    03.5
0D97:  MOVWF  67
0D98:  CALL   2CC
....................    i2c_write(0x04);              // End:04h do RTC(dia)                                  // comanda segundos 
0D99:  MOVLW  04
0D9A:  MOVWF  67
0D9B:  CALL   2CC
....................    /* Recebe a data */ 
....................    i2c_start();                  // Inicia com. p/ leitura 
0D9C:  BSF    28.4
0D9D:  MOVF   28,W
0D9E:  BSF    03.5
0D9F:  MOVWF  07
0DA0:  NOP
0DA1:  BCF    03.5
0DA2:  BSF    28.3
0DA3:  MOVF   28,W
0DA4:  BSF    03.5
0DA5:  MOVWF  07
0DA6:  NOP
0DA7:  BCF    03.5
0DA8:  BTFSS  07.3
0DA9:  GOTO   5A8
0DAA:  BCF    07.4
0DAB:  BCF    28.4
0DAC:  MOVF   28,W
0DAD:  BSF    03.5
0DAE:  MOVWF  07
0DAF:  NOP
0DB0:  BCF    03.5
0DB1:  BCF    07.3
0DB2:  BCF    28.3
0DB3:  MOVF   28,W
0DB4:  BSF    03.5
0DB5:  MOVWF  07
....................    i2c_write(0b11010001);        // End:1101000 1(leitura)   
0DB6:  MOVLW  D1
0DB7:  BCF    03.5
0DB8:  MOVWF  67
0DB9:  CALL   2CC
....................    dia = i2c_read(1);            // dia<-RTC(04h) - ACK 
0DBA:  MOVLW  01
0DBB:  MOVWF  77
0DBC:  CALL   316
0DBD:  MOVF   78,W
0DBE:  MOVWF  3C
....................    mes = i2c_read(1);            // mes<-RTC(05h) - ACK 
0DBF:  MOVLW  01
0DC0:  MOVWF  77
0DC1:  CALL   316
0DC2:  MOVF   78,W
0DC3:  MOVWF  3D
....................    ano = i2c_read(0);            // ano<-RTC(06h) - no ACK 
0DC4:  CLRF   77
0DC5:  CALL   316
0DC6:  MOVF   78,W
0DC7:  MOVWF  3E
....................    i2c_stop();   
0DC8:  BCF    28.4
0DC9:  MOVF   28,W
0DCA:  BSF    03.5
0DCB:  MOVWF  07
0DCC:  NOP
0DCD:  BCF    03.5
0DCE:  BSF    28.3
0DCF:  MOVF   28,W
0DD0:  BSF    03.5
0DD1:  MOVWF  07
0DD2:  BCF    03.5
0DD3:  BTFSS  07.3
0DD4:  GOTO   5D3
0DD5:  NOP
0DD6:  GOTO   5D7
0DD7:  NOP
0DD8:  BSF    28.4
0DD9:  MOVF   28,W
0DDA:  BSF    03.5
0DDB:  MOVWF  07
0DDC:  NOP
.................... }   
....................  
.................... //ESCRITA DE DADOS RTC - DIA/MÊS/ANO 
.................... void escreve_data_rtc(){ 
....................    i2c_start();                  // Inicia com. p/ escrita 
*
1C05:  BSF    28.4
1C06:  MOVF   28,W
1C07:  BSF    03.5
1C08:  MOVWF  07
1C09:  NOP
1C0A:  BCF    03.5
1C0B:  BSF    28.3
1C0C:  MOVF   28,W
1C0D:  BSF    03.5
1C0E:  MOVWF  07
1C0F:  NOP
1C10:  BCF    03.5
1C11:  BCF    07.4
1C12:  BCF    28.4
1C13:  MOVF   28,W
1C14:  BSF    03.5
1C15:  MOVWF  07
1C16:  NOP
1C17:  BCF    03.5
1C18:  BCF    07.3
1C19:  BCF    28.3
1C1A:  MOVF   28,W
1C1B:  BSF    03.5
1C1C:  MOVWF  07
*
1C60:  BSF    28.4
1C61:  MOVF   28,W
1C62:  BSF    03.5
1C63:  MOVWF  07
1C64:  NOP
1C65:  BCF    03.5
1C66:  BSF    28.3
1C67:  MOVF   28,W
1C68:  BSF    03.5
1C69:  MOVWF  07
1C6A:  NOP
1C6B:  BCF    03.5
1C6C:  BCF    07.4
1C6D:  BCF    28.4
1C6E:  MOVF   28,W
1C6F:  BSF    03.5
1C70:  MOVWF  07
1C71:  NOP
1C72:  BCF    03.5
1C73:  BCF    07.3
1C74:  BCF    28.3
1C75:  MOVF   28,W
1C76:  BSF    03.5
1C77:  MOVWF  07
....................    /* Seleciona data */ 
....................    i2c_write(0b11010000);        // End:1101000 0(escrita) 
*
1C1D:  MOVLW  D0
1C1E:  BCF    03.5
1C1F:  MOVWF  67
1C20:  BCF    0A.4
1C21:  CALL   2CC
1C22:  BSF    0A.4
*
1C78:  MOVLW  D0
1C79:  BCF    03.5
1C7A:  MOVWF  67
1C7B:  BCF    0A.4
1C7C:  CALL   2CC
1C7D:  BSF    0A.4
....................    i2c_write(0x04);              // End:04h do RTC(dia)                                  // comanda segundos 
*
1C23:  MOVLW  04
1C24:  MOVWF  67
1C25:  BCF    0A.4
1C26:  CALL   2CC
1C27:  BSF    0A.4
*
1C7E:  MOVLW  04
1C7F:  MOVWF  67
1C80:  BCF    0A.4
1C81:  CALL   2CC
1C82:  BSF    0A.4
....................    /* Escreve data */ 
....................    i2c_write(dia);               // End:04h do RTC(dia) 
*
1C28:  MOVF   3C,W
1C29:  MOVWF  67
1C2A:  BCF    0A.4
1C2B:  CALL   2CC
1C2C:  BSF    0A.4
*
1C83:  MOVF   3C,W
1C84:  MOVWF  67
1C85:  BCF    0A.4
1C86:  CALL   2CC
1C87:  BSF    0A.4
....................    i2c_write(mes);               // End:05h do RTC(mes) 
*
1C2D:  MOVF   3D,W
1C2E:  MOVWF  67
1C2F:  BCF    0A.4
1C30:  CALL   2CC
1C31:  BSF    0A.4
*
1C88:  MOVF   3D,W
1C89:  MOVWF  67
1C8A:  BCF    0A.4
1C8B:  CALL   2CC
1C8C:  BSF    0A.4
....................    i2c_write(ano);               // End:06h do RTC(ano) 
*
1C32:  MOVF   3E,W
1C33:  MOVWF  67
1C34:  BCF    0A.4
1C35:  CALL   2CC
1C36:  BSF    0A.4
*
1C8D:  MOVF   3E,W
1C8E:  MOVWF  67
1C8F:  BCF    0A.4
1C90:  CALL   2CC
1C91:  BSF    0A.4
....................    i2c_stop(); 
*
1C37:  BCF    28.4
1C38:  MOVF   28,W
1C39:  BSF    03.5
1C3A:  MOVWF  07
1C3B:  NOP
1C3C:  BCF    03.5
1C3D:  BSF    28.3
1C3E:  MOVF   28,W
1C3F:  BSF    03.5
1C40:  MOVWF  07
1C41:  BCF    03.5
1C42:  BTFSS  07.3
1C43:  GOTO   442
1C44:  NOP
1C45:  GOTO   446
1C46:  NOP
1C47:  BSF    28.4
1C48:  MOVF   28,W
1C49:  BSF    03.5
1C4A:  MOVWF  07
1C4B:  NOP
*
1C92:  BCF    28.4
1C93:  MOVF   28,W
1C94:  BSF    03.5
1C95:  MOVWF  07
1C96:  NOP
1C97:  BCF    03.5
1C98:  BSF    28.3
1C99:  MOVF   28,W
1C9A:  BSF    03.5
1C9B:  MOVWF  07
1C9C:  BCF    03.5
1C9D:  BTFSS  07.3
1C9E:  GOTO   49D
1C9F:  NOP
1CA0:  GOTO   4A1
1CA1:  NOP
1CA2:  BSF    28.4
1CA3:  MOVF   28,W
1CA4:  BSF    03.5
1CA5:  MOVWF  07
1CA6:  NOP
.................... }    
....................  
.................... //ESCRITA DE DADOS RTC - DIAS DA SEMANA 
.................... void escreve_sem_rtc(){ 
....................    i2c_start();                  // Inicia com. p/ escrita 
*
0BBC:  BSF    28.4
0BBD:  MOVF   28,W
0BBE:  BSF    03.5
0BBF:  MOVWF  07
0BC0:  NOP
0BC1:  BCF    03.5
0BC2:  BSF    28.3
0BC3:  MOVF   28,W
0BC4:  BSF    03.5
0BC5:  MOVWF  07
0BC6:  NOP
0BC7:  BCF    03.5
0BC8:  BCF    07.4
0BC9:  BCF    28.4
0BCA:  MOVF   28,W
0BCB:  BSF    03.5
0BCC:  MOVWF  07
0BCD:  NOP
0BCE:  BCF    03.5
0BCF:  BCF    07.3
0BD0:  BCF    28.3
0BD1:  MOVF   28,W
0BD2:  BSF    03.5
0BD3:  MOVWF  07
....................    /* Seleciona data */ 
....................    i2c_write(0b11010000);        // End:1101000 0(escrita) 
0BD4:  MOVLW  D0
0BD5:  BCF    03.5
0BD6:  MOVWF  67
0BD7:  CALL   2CC
....................    i2c_write(0x03);              // End:03h do RTC(sem)                                  // comanda segundos 
0BD8:  MOVLW  03
0BD9:  MOVWF  67
0BDA:  CALL   2CC
....................    /* Escreve semana */ 
....................    i2c_write(sem);               // End:03h do RTC(sem) 
0BDB:  MOVF   3F,W
0BDC:  MOVWF  67
0BDD:  CALL   2CC
....................    i2c_stop(); 
0BDE:  BCF    28.4
0BDF:  MOVF   28,W
0BE0:  BSF    03.5
0BE1:  MOVWF  07
0BE2:  NOP
0BE3:  BCF    03.5
0BE4:  BSF    28.3
0BE5:  MOVF   28,W
0BE6:  BSF    03.5
0BE7:  MOVWF  07
0BE8:  BCF    03.5
0BE9:  BTFSS  07.3
0BEA:  GOTO   3E9
0BEB:  NOP
0BEC:  GOTO   3ED
0BED:  NOP
0BEE:  BSF    28.4
0BEF:  MOVF   28,W
0BF0:  BSF    03.5
0BF1:  MOVWF  07
0BF2:  NOP
.................... }   
0BF3:  BCF    03.5
0BF4:  RETURN
....................  
.................... //LEITURA DE DADOS RTC - DIAS DA SEMANA 
.................... void le_sem_rtc(){ 
....................  
....................    i2c_start();                  // Inicia com. p/ escrita 
0BF5:  BSF    28.4
0BF6:  MOVF   28,W
0BF7:  BSF    03.5
0BF8:  MOVWF  07
0BF9:  NOP
0BFA:  BCF    03.5
0BFB:  BSF    28.3
0BFC:  MOVF   28,W
0BFD:  BSF    03.5
0BFE:  MOVWF  07
0BFF:  NOP
0C00:  BCF    03.5
0C01:  BCF    07.4
0C02:  BCF    28.4
0C03:  MOVF   28,W
0C04:  BSF    03.5
0C05:  MOVWF  07
0C06:  NOP
0C07:  BCF    03.5
0C08:  BCF    07.3
0C09:  BCF    28.3
0C0A:  MOVF   28,W
0C0B:  BSF    03.5
0C0C:  MOVWF  07
....................    /* Pede a semana */ 
....................    i2c_write(0b11010000);        // End:1101000 0(escrita) 
0C0D:  MOVLW  D0
0C0E:  BCF    03.5
0C0F:  MOVWF  67
0C10:  CALL   2CC
....................    i2c_write(0x03);              // End:03h do RTC(sem)                                  // comanda segundos 
0C11:  MOVLW  03
0C12:  MOVWF  67
0C13:  CALL   2CC
....................    /* Recebe a semana */ 
....................    i2c_start();                  // Inicia com. p/ leitura 
0C14:  BSF    28.4
0C15:  MOVF   28,W
0C16:  BSF    03.5
0C17:  MOVWF  07
0C18:  NOP
0C19:  BCF    03.5
0C1A:  BSF    28.3
0C1B:  MOVF   28,W
0C1C:  BSF    03.5
0C1D:  MOVWF  07
0C1E:  NOP
0C1F:  BCF    03.5
0C20:  BTFSS  07.3
0C21:  GOTO   420
0C22:  BCF    07.4
0C23:  BCF    28.4
0C24:  MOVF   28,W
0C25:  BSF    03.5
0C26:  MOVWF  07
0C27:  NOP
0C28:  BCF    03.5
0C29:  BCF    07.3
0C2A:  BCF    28.3
0C2B:  MOVF   28,W
0C2C:  BSF    03.5
0C2D:  MOVWF  07
....................    i2c_write(0b11010001);        // End:1101000 1(leitura)   
0C2E:  MOVLW  D1
0C2F:  BCF    03.5
0C30:  MOVWF  67
0C31:  CALL   2CC
....................    sem = i2c_read(0);            // sem<-RTC(03h) - no ACK 
0C32:  CLRF   77
0C33:  CALL   316
0C34:  MOVF   78,W
0C35:  MOVWF  3F
....................    i2c_stop(); 
0C36:  BCF    28.4
0C37:  MOVF   28,W
0C38:  BSF    03.5
0C39:  MOVWF  07
0C3A:  NOP
0C3B:  BCF    03.5
0C3C:  BSF    28.3
0C3D:  MOVF   28,W
0C3E:  BSF    03.5
0C3F:  MOVWF  07
0C40:  BCF    03.5
0C41:  BTFSS  07.3
0C42:  GOTO   441
0C43:  NOP
0C44:  GOTO   445
0C45:  NOP
0C46:  BSF    28.4
0C47:  MOVF   28,W
0C48:  BSF    03.5
0C49:  MOVWF  07
0C4A:  NOP
....................    
....................    if(sem <= 0x07){ 
0C4B:  BCF    03.5
0C4C:  MOVF   3F,W
0C4D:  SUBLW  07
0C4E:  BTFSS  03.0
0C4F:  GOTO   4DD
....................       switch(sem){ 
0C50:  MOVLW  01
0C51:  SUBWF  3F,W
0C52:  ADDLW  F9
0C53:  BTFSC  03.0
0C54:  GOTO   4DC
0C55:  ADDLW  07
0C56:  GOTO   4E2
....................          case 1:sem_v="Dom"; break; 
0C57:  CLRF   67
0C58:  CLRF   68
0C59:  MOVLW  63
0C5A:  MOVWF  04
0C5B:  BCF    03.7
0C5C:  MOVF   67,W
0C5D:  ADDWF  04,F
0C5E:  MOVF   68,W
0C5F:  BCF    0A.3
0C60:  CALL   040
0C61:  BSF    0A.3
0C62:  MOVWF  00
0C63:  IORLW  00
0C64:  BTFSC  03.2
0C65:  GOTO   469
0C66:  INCF   68,F
0C67:  INCF   67,F
0C68:  GOTO   459
0C69:  GOTO   4DC
....................          case 2:sem_v="Seg"; break; 
0C6A:  CLRF   67
0C6B:  CLRF   68
0C6C:  MOVLW  63
0C6D:  MOVWF  04
0C6E:  BCF    03.7
0C6F:  MOVF   67,W
0C70:  ADDWF  04,F
0C71:  MOVF   68,W
0C72:  BCF    0A.3
0C73:  CALL   048
0C74:  BSF    0A.3
0C75:  MOVWF  00
0C76:  IORLW  00
0C77:  BTFSC  03.2
0C78:  GOTO   47C
0C79:  INCF   68,F
0C7A:  INCF   67,F
0C7B:  GOTO   46C
0C7C:  GOTO   4DC
....................          case 3:sem_v="Ter"; break; 
0C7D:  CLRF   67
0C7E:  CLRF   68
0C7F:  MOVLW  63
0C80:  MOVWF  04
0C81:  BCF    03.7
0C82:  MOVF   67,W
0C83:  ADDWF  04,F
0C84:  MOVF   68,W
0C85:  BCF    0A.3
0C86:  CALL   050
0C87:  BSF    0A.3
0C88:  MOVWF  00
0C89:  IORLW  00
0C8A:  BTFSC  03.2
0C8B:  GOTO   48F
0C8C:  INCF   68,F
0C8D:  INCF   67,F
0C8E:  GOTO   47F
0C8F:  GOTO   4DC
....................          case 4:sem_v="Qua"; break; 
0C90:  CLRF   67
0C91:  CLRF   68
0C92:  MOVLW  63
0C93:  MOVWF  04
0C94:  BCF    03.7
0C95:  MOVF   67,W
0C96:  ADDWF  04,F
0C97:  MOVF   68,W
0C98:  BCF    0A.3
0C99:  CALL   058
0C9A:  BSF    0A.3
0C9B:  MOVWF  00
0C9C:  IORLW  00
0C9D:  BTFSC  03.2
0C9E:  GOTO   4A2
0C9F:  INCF   68,F
0CA0:  INCF   67,F
0CA1:  GOTO   492
0CA2:  GOTO   4DC
....................          case 5:sem_v="Qui"; break; 
0CA3:  CLRF   67
0CA4:  CLRF   68
0CA5:  MOVLW  63
0CA6:  MOVWF  04
0CA7:  BCF    03.7
0CA8:  MOVF   67,W
0CA9:  ADDWF  04,F
0CAA:  MOVF   68,W
0CAB:  BCF    0A.3
0CAC:  CALL   060
0CAD:  BSF    0A.3
0CAE:  MOVWF  00
0CAF:  IORLW  00
0CB0:  BTFSC  03.2
0CB1:  GOTO   4B5
0CB2:  INCF   68,F
0CB3:  INCF   67,F
0CB4:  GOTO   4A5
0CB5:  GOTO   4DC
....................          case 6:sem_v="Sex"; break; 
0CB6:  CLRF   67
0CB7:  CLRF   68
0CB8:  MOVLW  63
0CB9:  MOVWF  04
0CBA:  BCF    03.7
0CBB:  MOVF   67,W
0CBC:  ADDWF  04,F
0CBD:  MOVF   68,W
0CBE:  BCF    0A.3
0CBF:  CALL   068
0CC0:  BSF    0A.3
0CC1:  MOVWF  00
0CC2:  IORLW  00
0CC3:  BTFSC  03.2
0CC4:  GOTO   4C8
0CC5:  INCF   68,F
0CC6:  INCF   67,F
0CC7:  GOTO   4B8
0CC8:  GOTO   4DC
....................          case 7:sem_v="Sab"; break; 
0CC9:  CLRF   67
0CCA:  CLRF   68
0CCB:  MOVLW  63
0CCC:  MOVWF  04
0CCD:  BCF    03.7
0CCE:  MOVF   67,W
0CCF:  ADDWF  04,F
0CD0:  MOVF   68,W
0CD1:  BCF    0A.3
0CD2:  CALL   070
0CD3:  BSF    0A.3
0CD4:  MOVWF  00
0CD5:  IORLW  00
0CD6:  BTFSC  03.2
0CD7:  GOTO   4DB
0CD8:  INCF   68,F
0CD9:  INCF   67,F
0CDA:  GOTO   4CB
0CDB:  GOTO   4DC
....................       } 
....................    } 
....................    else{ 
0CDC:  GOTO   4DF
....................       sem = 0X00; 
0CDD:  CLRF   3F
....................       escreve_sem_rtc(); 
0CDE:  CALL   3BC
....................    } 
.................... }  
0CDF:  BSF    0A.3
0CE0:  BCF    0A.4
0CE1:  GOTO   5DF (RETURN)
....................  
.................... //RONDA NOTURNA AUTOMÁTICA 
.................... void ronda_noturna_auto(){ 
....................  
....................    if(trava_ativado){ 
*
040D:  BTFSS  2E.1
040E:  GOTO   43E
....................     
....................       if(trava_inverno){ 
040F:  BTFSS  2E.3
0410:  GOTO   420
....................          if((hrs >= 0x18 && hrs <= 0x23) || (hrs >= 0x00 && hrs < 0x06)){ 
0411:  MOVF   3B,W
0412:  SUBLW  17
0413:  BTFSC  03.0
0414:  GOTO   419
0415:  MOVF   3B,W
0416:  SUBLW  23
0417:  BTFSC  03.0
0418:  GOTO   41D
0419:  MOVF   3B,W
041A:  SUBLW  05
041B:  BTFSS  03.0
041C:  GOTO   41F
....................             ccto8 = 1; 
041D:  BSF    2C.1
....................          } 
....................          else{ 
041E:  GOTO   420
....................             ccto8 = 0; 
041F:  BCF    2C.1
....................          } 
....................       } 
....................        
....................       if(trava_verao){ 
0420:  BTFSS  2E.2
0421:  GOTO   431
....................          if((hrs >= 0x20 && hrs <= 0x23) || (hrs >= 0x00 && hrs < 0x07)){ 
0422:  MOVF   3B,W
0423:  SUBLW  1F
0424:  BTFSC  03.0
0425:  GOTO   42A
0426:  MOVF   3B,W
0427:  SUBLW  23
0428:  BTFSC  03.0
0429:  GOTO   42E
042A:  MOVF   3B,W
042B:  SUBLW  06
042C:  BTFSS  03.0
042D:  GOTO   430
....................             ccto8 = 1; 
042E:  BSF    2C.1
....................          } 
....................          else{ 
042F:  GOTO   431
....................             ccto8 = 0;  
0430:  BCF    2C.1
....................          } 
....................       } 
....................        
....................       if(trava_senai){ 
0431:  BTFSS  2E.4
0432:  GOTO   43E
....................          if((hrs == 0x23) || (hrs >= 0x00 && hrs < 0x07)){ 
0433:  MOVF   3B,W
0434:  SUBLW  23
0435:  BTFSC  03.2
0436:  GOTO   43B
0437:  MOVF   3B,W
0438:  SUBLW  06
0439:  BTFSS  03.0
043A:  GOTO   43D
....................             ccto8 = 1; 
043B:  BSF    2C.1
....................          } 
....................          else{ 
043C:  GOTO   43E
....................             ccto8 = 0; 
043D:  BCF    2C.1
....................          } 
....................       }   
....................    } 
.................... } 
....................  
.................... //MENU: SETORIZADO  
.................... void corredor(){ 
....................  
....................    if(input(COR)){ 
*
081E:  BSF    03.5
081F:  BSF    05.3
0820:  BCF    03.5
0821:  BTFSS  05.3
0822:  GOTO   02B
....................       if(!trava_COR){ 
0823:  BTFSC  29.7
0824:  GOTO   02A
....................          trava_COR = 1; 
0825:  BSF    29.7
....................          ccto1 = ~ccto1; 
0826:  MOVLW  04
0827:  XORWF  2B,F
....................          ccto7 = ~ccto7; 
0828:  MOVLW  01
0829:  XORWF  2C,F
....................       } 
....................    } 
....................    else{ 
082A:  GOTO   02C
....................       trava_COR = 0; 
082B:  BCF    29.7
....................    } 
.................... } 
....................  
.................... //MENU: SETORIZADO 
.................... void maquinas(){ 
....................  
....................    if(input(MAQ)){ 
082C:  BSF    03.5
082D:  BSF    05.4
082E:  BCF    03.5
082F:  BTFSS  05.4
0830:  GOTO   03B
....................       if(!trava_MQ){ 
0831:  BTFSC  2A.0
0832:  GOTO   03A
....................          trava_MQ = 1; 
0833:  BSF    2A.0
....................          ccto2 = ~ccto2; 
0834:  MOVLW  08
0835:  XORWF  2B,F
....................          ccto3 = ~ccto3; 
0836:  MOVLW  10
0837:  XORWF  2B,F
....................          ccto4 = ~ccto4; 
0838:  MOVLW  20
0839:  XORWF  2B,F
....................       } 
....................    } 
....................    else{ 
083A:  GOTO   03C
....................       trava_MQ = 0; 
083B:  BCF    2A.0
....................    } 
.................... } 
....................  
.................... //MENU: SETORIZADO 
.................... void retifica(){ 
....................  
....................    if(input(RET)){ 
083C:  BSF    03.5
083D:  BSF    05.5
083E:  BCF    03.5
083F:  BTFSS  05.5
0840:  GOTO   049
....................       if(!trava_RET){ 
0841:  BTFSC  2A.1
0842:  GOTO   048
....................          trava_RET = 1; 
0843:  BSF    2A.1
....................          ccto5 = ~ccto5; 
0844:  MOVLW  40
0845:  XORWF  2B,F
....................          ccto6 = ~ccto6; 
0846:  MOVLW  80
0847:  XORWF  2B,F
....................       } 
....................    } 
....................    else{ 
0848:  GOTO   04A
....................       trava_RET = 0; 
0849:  BCF    2A.1
....................    } 
.................... }  
....................  
.................... //MENU: SETORIZADO 
.................... void ronda_noturna(){ 
....................  
....................    if(!trava_ativado){ 
084A:  BTFSC  2E.1
084B:  GOTO   058
*
0A33:  BTFSC  2E.1
0A34:  GOTO   241
....................       if(input(RDN)){ 
*
084C:  BSF    03.5
084D:  BSF    09.0
084E:  BCF    03.5
084F:  BTFSS  09.0
0850:  GOTO   057
*
0A35:  BSF    03.5
0A36:  BSF    09.0
0A37:  BCF    03.5
0A38:  BTFSS  09.0
0A39:  GOTO   240
....................          if(!trava_RDN){ 
*
0851:  BTFSC  2A.2
0852:  GOTO   056
*
0A3A:  BTFSC  2A.2
0A3B:  GOTO   23F
....................             trava_RDN = 1; 
*
0853:  BSF    2A.2
*
0A3C:  BSF    2A.2
....................             ccto8 = ~ccto8;                                          
*
0854:  MOVLW  02
0855:  XORWF  2C,F
*
0A3D:  MOVLW  02
0A3E:  XORWF  2C,F
....................          } 
....................       } 
....................       else{ 
*
0856:  GOTO   058
*
0A3F:  GOTO   241
....................          trava_RDN = 0; 
*
0857:  BCF    2A.2
*
0A40:  BCF    2A.2
....................       } 
....................    } 
.................... }  
....................  
.................... //MENU: SETORIZADO 
.................... void imprime_setor(){ 
....................  
....................    if(ccto1 && ccto7){ 
*
0882:  BTFSS  2B.2
0883:  GOTO   09C
0884:  BTFSS  2C.0
0885:  GOTO   09C
....................       lcd_pos_xy(2,2); 
0886:  MOVLW  02
0887:  MOVWF  6C
0888:  MOVWF  6D
0889:  BCF    0A.3
088A:  CALL   4D2
088B:  BSF    0A.3
....................       printf(lcd_escreve, " ON"); 
088C:  MOVLW  20
088D:  MOVWF  6B
088E:  BCF    0A.3
088F:  CALL   4E4
0890:  BSF    0A.3
0891:  MOVLW  4F
0892:  MOVWF  6B
0893:  BCF    0A.3
0894:  CALL   4E4
0895:  BSF    0A.3
0896:  MOVLW  4E
0897:  MOVWF  6B
0898:  BCF    0A.3
0899:  CALL   4E4
089A:  BSF    0A.3
....................    } 
....................    else{ 
089B:  GOTO   0B1
....................       lcd_pos_xy(2,2); 
089C:  MOVLW  02
089D:  MOVWF  6C
089E:  MOVWF  6D
089F:  BCF    0A.3
08A0:  CALL   4D2
08A1:  BSF    0A.3
....................       printf(lcd_escreve, "OFF"); 
08A2:  MOVLW  4F
08A3:  MOVWF  6B
08A4:  BCF    0A.3
08A5:  CALL   4E4
08A6:  BSF    0A.3
08A7:  MOVLW  46
08A8:  MOVWF  6B
08A9:  BCF    0A.3
08AA:  CALL   4E4
08AB:  BSF    0A.3
08AC:  MOVLW  46
08AD:  MOVWF  6B
08AE:  BCF    0A.3
08AF:  CALL   4E4
08B0:  BSF    0A.3
....................    } 
....................    if(ccto2 && ccto3 && ccto4){ 
08B1:  BTFSS  2B.3
08B2:  GOTO   0CE
08B3:  BTFSS  2B.4
08B4:  GOTO   0CE
08B5:  BTFSS  2B.5
08B6:  GOTO   0CE
....................       lcd_pos_xy(6,2); 
08B7:  MOVLW  06
08B8:  MOVWF  6C
08B9:  MOVLW  02
08BA:  MOVWF  6D
08BB:  BCF    0A.3
08BC:  CALL   4D2
08BD:  BSF    0A.3
....................       printf(lcd_escreve, " ON"); 
08BE:  MOVLW  20
08BF:  MOVWF  6B
08C0:  BCF    0A.3
08C1:  CALL   4E4
08C2:  BSF    0A.3
08C3:  MOVLW  4F
08C4:  MOVWF  6B
08C5:  BCF    0A.3
08C6:  CALL   4E4
08C7:  BSF    0A.3
08C8:  MOVLW  4E
08C9:  MOVWF  6B
08CA:  BCF    0A.3
08CB:  CALL   4E4
08CC:  BSF    0A.3
....................    } 
....................    else{ 
08CD:  GOTO   0E4
....................       lcd_pos_xy(6,2); 
08CE:  MOVLW  06
08CF:  MOVWF  6C
08D0:  MOVLW  02
08D1:  MOVWF  6D
08D2:  BCF    0A.3
08D3:  CALL   4D2
08D4:  BSF    0A.3
....................       printf(lcd_escreve, "OFF"); 
08D5:  MOVLW  4F
08D6:  MOVWF  6B
08D7:  BCF    0A.3
08D8:  CALL   4E4
08D9:  BSF    0A.3
08DA:  MOVLW  46
08DB:  MOVWF  6B
08DC:  BCF    0A.3
08DD:  CALL   4E4
08DE:  BSF    0A.3
08DF:  MOVLW  46
08E0:  MOVWF  6B
08E1:  BCF    0A.3
08E2:  CALL   4E4
08E3:  BSF    0A.3
....................    } 
....................    if(ccto5 && ccto6){ 
08E4:  BTFSS  2B.6
08E5:  GOTO   0FF
08E6:  BTFSS  2B.7
08E7:  GOTO   0FF
....................       lcd_pos_xy(10,2); 
08E8:  MOVLW  0A
08E9:  MOVWF  6C
08EA:  MOVLW  02
08EB:  MOVWF  6D
08EC:  BCF    0A.3
08ED:  CALL   4D2
08EE:  BSF    0A.3
....................       printf(lcd_escreve, " ON"); 
08EF:  MOVLW  20
08F0:  MOVWF  6B
08F1:  BCF    0A.3
08F2:  CALL   4E4
08F3:  BSF    0A.3
08F4:  MOVLW  4F
08F5:  MOVWF  6B
08F6:  BCF    0A.3
08F7:  CALL   4E4
08F8:  BSF    0A.3
08F9:  MOVLW  4E
08FA:  MOVWF  6B
08FB:  BCF    0A.3
08FC:  CALL   4E4
08FD:  BSF    0A.3
....................    } 
....................    else{ 
08FE:  GOTO   115
....................       lcd_pos_xy(10,2); 
08FF:  MOVLW  0A
0900:  MOVWF  6C
0901:  MOVLW  02
0902:  MOVWF  6D
0903:  BCF    0A.3
0904:  CALL   4D2
0905:  BSF    0A.3
....................       printf(lcd_escreve, "OFF"); 
0906:  MOVLW  4F
0907:  MOVWF  6B
0908:  BCF    0A.3
0909:  CALL   4E4
090A:  BSF    0A.3
090B:  MOVLW  46
090C:  MOVWF  6B
090D:  BCF    0A.3
090E:  CALL   4E4
090F:  BSF    0A.3
0910:  MOVLW  46
0911:  MOVWF  6B
0912:  BCF    0A.3
0913:  CALL   4E4
0914:  BSF    0A.3
....................    } 
....................    if(ccto8){ 
0915:  BTFSS  2C.1
0916:  GOTO   12E
....................       lcd_pos_xy(14,2); 
0917:  MOVLW  0E
0918:  MOVWF  6C
0919:  MOVLW  02
091A:  MOVWF  6D
091B:  BCF    0A.3
091C:  CALL   4D2
091D:  BSF    0A.3
....................       printf(lcd_escreve, " ON"); 
091E:  MOVLW  20
091F:  MOVWF  6B
0920:  BCF    0A.3
0921:  CALL   4E4
0922:  BSF    0A.3
0923:  MOVLW  4F
0924:  MOVWF  6B
0925:  BCF    0A.3
0926:  CALL   4E4
0927:  BSF    0A.3
0928:  MOVLW  4E
0929:  MOVWF  6B
092A:  BCF    0A.3
092B:  CALL   4E4
092C:  BSF    0A.3
....................    } 
....................    else{ 
092D:  GOTO   144
....................       lcd_pos_xy(14,2); 
092E:  MOVLW  0E
092F:  MOVWF  6C
0930:  MOVLW  02
0931:  MOVWF  6D
0932:  BCF    0A.3
0933:  CALL   4D2
0934:  BSF    0A.3
....................       printf(lcd_escreve, "OFF"); 
0935:  MOVLW  4F
0936:  MOVWF  6B
0937:  BCF    0A.3
0938:  CALL   4E4
0939:  BSF    0A.3
093A:  MOVLW  46
093B:  MOVWF  6B
093C:  BCF    0A.3
093D:  CALL   4E4
093E:  BSF    0A.3
093F:  MOVLW  46
0940:  MOVWF  6B
0941:  BCF    0A.3
0942:  CALL   4E4
0943:  BSF    0A.3
....................    } 
.................... } 
....................  
.................... //PASSAGEM MENU INDIVIDUAL - SETORIZADO 
.................... void regula_setorizado(){ 
....................  
....................    if(ccto1 | ccto7){  
*
0858:  MOVLW  00
0859:  BTFSC  2B.2
085A:  MOVLW  01
085B:  MOVWF  68
085C:  MOVLW  00
085D:  BTFSC  2C.0
085E:  MOVLW  01
085F:  IORWF  68,W
0860:  BTFSC  03.2
0861:  GOTO   064
....................       ccto1 = 1; 
0862:  BSF    2B.2
....................       ccto7 = 1;    
0863:  BSF    2C.0
....................    } 
....................     
....................    if(ccto2 | ccto3 | ccto4){ 
0864:  MOVLW  00
0865:  BTFSC  2B.3
0866:  MOVLW  01
0867:  MOVWF  68
0868:  MOVLW  00
0869:  BTFSC  2B.4
086A:  MOVLW  01
086B:  IORWF  68,W
086C:  MOVWF  69
086D:  MOVLW  00
086E:  BTFSC  2B.5
086F:  MOVLW  01
0870:  IORWF  69,W
0871:  BTFSC  03.2
0872:  GOTO   076
....................       ccto2 = 1; 
0873:  BSF    2B.3
....................       ccto3 = 1;  
0874:  BSF    2B.4
....................       ccto4 = 1; 
0875:  BSF    2B.5
....................    } 
....................     
....................    if(ccto5 | ccto6){ 
0876:  MOVLW  00
0877:  BTFSC  2B.6
0878:  MOVLW  01
0879:  MOVWF  68
087A:  MOVLW  00
087B:  BTFSC  2B.7
087C:  MOVLW  01
087D:  IORWF  68,W
087E:  BTFSC  03.2
087F:  GOTO   082
....................       ccto5 = 1; 
0880:  BSF    2B.6
....................       ccto6 = 1;    
0881:  BSF    2B.7
....................    }   
.................... } 
....................  
.................... //MENU: SETORIZADO 
.................... void comanda_setor(){ 
....................  
....................    corredor(); 
....................    maquinas(); 
....................    retifica(); 
....................    ronda_noturna(); 
....................    regula_setorizado(); 
....................    imprime_setor(); 
....................     
.................... } 
....................  
.................... //MENU: SETORIZADO 
.................... void setorizado(){ 
*
009B:  DATA 00,00
....................  
....................    if(!trava_setor){ 
*
0800:  BTFSC  29.4
0801:  GOTO   01B
....................        
....................       trava_setor = 1;     
0802:  BSF    29.4
....................       lcd_escreve("\f"); 
0803:  MOVLW  92
0804:  BSF    03.6
0805:  MOVWF  0D
0806:  MOVLW  00
0807:  MOVWF  0F
0808:  BCF    0A.3
0809:  BCF    03.6
080A:  CALL   526
080B:  BSF    0A.3
....................      
....................       lcd_pos_xy(1,1); 
080C:  MOVLW  01
080D:  MOVWF  6C
080E:  MOVWF  6D
080F:  BCF    0A.3
0810:  CALL   4D2
0811:  BSF    0A.3
....................       printf(lcd_escreve, " COR MAQ RET RDN"); 
0812:  MOVLW  93
0813:  BSF    03.6
0814:  MOVWF  0D
0815:  MOVLW  00
0816:  MOVWF  0F
0817:  BCF    0A.3
0818:  BCF    03.6
0819:  CALL   526
081A:  BSF    0A.3
....................        
....................    } 
....................     
....................       trava_indiv     = 0; 
081B:  BCF    29.3
....................       trava_config    = 0; 
081C:  BCF    29.5
....................       trava_clock     = 0; 
081D:  BCF    29.6
....................        
....................       comanda_setor(); 
.................... } 
*
0944:  BCF    0A.3
0945:  BSF    0A.4
0946:  GOTO   3B2 (RETURN)
....................  
.................... //MENU: INDIVIDUAL - NAVEGADOR 
.................... void navegador_seta(){ 
....................  
....................    if(trava_seta){ 
*
0978:  BTFSS  2A.5
0979:  GOTO   18B
....................     
....................       // configura botão OK 
....................       if(input(OK)){                           
097A:  BSF    03.5
097B:  BSF    05.0
097C:  BCF    03.5
097D:  BTFSS  05.0
097E:  GOTO   184
....................          if(!trava_OK){   
097F:  BTFSC  29.2
0980:  GOTO   183
....................             seta ++; 
0981:  INCF   33,F
....................             trava_OK = 1;     
0982:  BSF    29.2
....................          }   
....................       } 
....................       else{  
0983:  GOTO   185
....................          trava_OK = 0;      
0984:  BCF    29.2
....................       } 
....................          
....................    // configurações de limites  
....................       if(seta >= limite_seta)   seta  = 1; 
0985:  MOVF   2F,W
0986:  SUBWF  33,W
0987:  BTFSS  03.0
0988:  GOTO   18B
0989:  MOVLW  01
098A:  MOVWF  33
....................        
....................    } 
.................... } 
....................  
.................... //MENU: INDIVIDUAL 
.................... void circuito_1(){ 
....................  
....................    if(input(COR)){ 
*
09B0:  BSF    03.5
09B1:  BSF    05.3
09B2:  BCF    03.5
09B3:  BTFSS  05.3
09B4:  GOTO   1BB
....................       if(!trava_COR_C1){ 
09B5:  BTFSC  2C.2
09B6:  GOTO   1BA
....................          trava_COR_C1 = 1; 
09B7:  BSF    2C.2
....................          ccto1 = ~ccto1;                                                 
09B8:  MOVLW  04
09B9:  XORWF  2B,F
....................       } 
....................    } 
....................    else{ 
09BA:  GOTO   1BC
....................       trava_COR_C1 = 0; 
09BB:  BCF    2C.2
....................    } 
.................... } 
....................  
.................... //MENU: INDIVIDUAL 
.................... void circuito_2(){ 
....................  
....................    if(input(MAQ)){ 
09BC:  BSF    03.5
09BD:  BSF    05.4
09BE:  BCF    03.5
09BF:  BTFSS  05.4
09C0:  GOTO   1C7
....................       if(!trava_MAQ_C2){ 
09C1:  BTFSC  2C.3
09C2:  GOTO   1C6
....................          trava_MAQ_C2 = 1; 
09C3:  BSF    2C.3
....................          ccto2 = ~ccto2;                                            
09C4:  MOVLW  08
09C5:  XORWF  2B,F
....................       } 
....................    } 
....................    else{ 
09C6:  GOTO   1C8
....................       trava_MAQ_C2 = 0; 
09C7:  BCF    2C.3
....................    } 
.................... } 
....................  
.................... //MENU: INDIVIDUAL 
.................... void circuito_3(){ 
....................  
....................    if(input(RET)){ 
09C8:  BSF    03.5
09C9:  BSF    05.5
09CA:  BCF    03.5
09CB:  BTFSS  05.5
09CC:  GOTO   1D3
....................       if(!trava_RET_C3){ 
09CD:  BTFSC  2C.4
09CE:  GOTO   1D2
....................          trava_RET_C3 = 1; 
09CF:  BSF    2C.4
....................          ccto3 = ~ccto3;                                              
09D0:  MOVLW  10
09D1:  XORWF  2B,F
....................       } 
....................    } 
....................    else{ 
09D2:  GOTO   1D4
....................       trava_RET_C3 = 0; 
09D3:  BCF    2C.4
....................    } 
.................... } 
....................  
.................... //MENU: INDIVIDUAL 
.................... void circuito_4(){ 
....................  
....................    if(input(RDN)){ 
09D4:  BSF    03.5
09D5:  BSF    09.0
09D6:  BCF    03.5
09D7:  BTFSS  09.0
09D8:  GOTO   1DF
....................       if(!trava_RDN_C4){ 
09D9:  BTFSC  2C.5
09DA:  GOTO   1DE
....................          trava_RDN_C4 = 1; 
09DB:  BSF    2C.5
....................          ccto4 = ~ccto4;                                            
09DC:  MOVLW  20
09DD:  XORWF  2B,F
....................       } 
....................    } 
....................    else{ 
09DE:  GOTO   1E0
....................       trava_RDN_C4 = 0; 
09DF:  BCF    2C.5
....................    } 
.................... } 
....................  
.................... //MENU: INDIVIDUAL 
.................... void circuito_5(){ 
....................  
....................    if(input(COR)){ 
*
0A0F:  BSF    03.5
0A10:  BSF    05.3
0A11:  BCF    03.5
0A12:  BTFSS  05.3
0A13:  GOTO   21A
....................       if(!trava_COR_C5){ 
0A14:  BTFSC  2C.6
0A15:  GOTO   219
....................          trava_COR_C5 = 1; 
0A16:  BSF    2C.6
....................          ccto5 = ~ccto5;                                                 
0A17:  MOVLW  40
0A18:  XORWF  2B,F
....................       } 
....................    } 
....................    else{ 
0A19:  GOTO   21B
....................       trava_COR_C5 = 0; 
0A1A:  BCF    2C.6
....................    } 
.................... }  
....................  
.................... //MENU: INDIVIDUAL 
.................... void circuito_6(){ 
....................  
....................    if(input(MAQ)){ 
0A1B:  BSF    03.5
0A1C:  BSF    05.4
0A1D:  BCF    03.5
0A1E:  BTFSS  05.4
0A1F:  GOTO   226
....................       if(!trava_MAQ_C6){ 
0A20:  BTFSC  2C.7
0A21:  GOTO   225
....................          trava_MAQ_C6 = 1; 
0A22:  BSF    2C.7
....................          ccto6 = ~ccto6;                                            
0A23:  MOVLW  80
0A24:  XORWF  2B,F
....................       } 
....................    } 
....................    else{ 
0A25:  GOTO   227
....................       trava_MAQ_C6 = 0; 
0A26:  BCF    2C.7
....................    } 
.................... } 
....................  
.................... //MENU: INDIVIDUAL 
.................... void circuito_7(){ 
....................  
....................    if(input(RET)){ 
0A27:  BSF    03.5
0A28:  BSF    05.5
0A29:  BCF    03.5
0A2A:  BTFSS  05.5
0A2B:  GOTO   232
....................       if(!trava_RET_C7){ 
0A2C:  BTFSC  2D.0
0A2D:  GOTO   231
....................          trava_RET_C7 = 1; 
0A2E:  BSF    2D.0
....................          ccto7 = ~ccto7;                                                  
0A2F:  MOVLW  01
0A30:  XORWF  2C,F
....................       } 
....................    } 
....................    else{ 
0A31:  GOTO   233
....................       trava_RET_C7 = 0; 
0A32:  BCF    2D.0
....................    } 
.................... } 
....................  
.................... //MENU: INDIVIDUAL 
.................... void imprime_um_a_quatro(){ 
....................  
....................    if(ccto1==1){ 
*
0757:  BTFSS  2B.2
0758:  GOTO   762
....................       lcd_pos_xy(10,1); 
0759:  MOVLW  0A
075A:  MOVWF  6C
075B:  MOVLW  01
075C:  MOVWF  6D
075D:  CALL   4D2
....................       cgram(1); 
075E:  MOVLW  01
075F:  MOVWF  68
0760:  CALL   6B8
....................    } 
....................    else{ 
0761:  GOTO   76A
....................       lcd_pos_xy(10,1); 
0762:  MOVLW  0A
0763:  MOVWF  6C
0764:  MOVLW  01
0765:  MOVWF  6D
0766:  CALL   4D2
....................       cgram(2); 
0767:  MOVLW  02
0768:  MOVWF  68
0769:  CALL   6B8
....................    } 
....................    if(ccto2==1){ 
076A:  BTFSS  2B.3
076B:  GOTO   775
....................       lcd_pos_xy(12,1); 
076C:  MOVLW  0C
076D:  MOVWF  6C
076E:  MOVLW  01
076F:  MOVWF  6D
0770:  CALL   4D2
....................       cgram(1); 
0771:  MOVLW  01
0772:  MOVWF  68
0773:  CALL   6B8
....................    } 
....................    else{ 
0774:  GOTO   77D
....................       lcd_pos_xy(12,1); 
0775:  MOVLW  0C
0776:  MOVWF  6C
0777:  MOVLW  01
0778:  MOVWF  6D
0779:  CALL   4D2
....................       cgram(2); 
077A:  MOVLW  02
077B:  MOVWF  68
077C:  CALL   6B8
....................    } 
....................    if(ccto3==1){ 
077D:  BTFSS  2B.4
077E:  GOTO   788
....................       lcd_pos_xy(14,1); 
077F:  MOVLW  0E
0780:  MOVWF  6C
0781:  MOVLW  01
0782:  MOVWF  6D
0783:  CALL   4D2
....................       cgram(1); 
0784:  MOVLW  01
0785:  MOVWF  68
0786:  CALL   6B8
....................    } 
....................    else{ 
0787:  GOTO   790
....................       lcd_pos_xy(14,1); 
0788:  MOVLW  0E
0789:  MOVWF  6C
078A:  MOVLW  01
078B:  MOVWF  6D
078C:  CALL   4D2
....................       cgram(2); 
078D:  MOVLW  02
078E:  MOVWF  68
078F:  CALL   6B8
....................    } 
....................    if(ccto4==1){ 
0790:  BTFSS  2B.5
0791:  GOTO   79B
....................       lcd_pos_xy(16,1); 
0792:  MOVLW  10
0793:  MOVWF  6C
0794:  MOVLW  01
0795:  MOVWF  6D
0796:  CALL   4D2
....................       cgram(1); 
0797:  MOVLW  01
0798:  MOVWF  68
0799:  CALL   6B8
....................    } 
....................    else{ 
079A:  GOTO   7A3
....................       lcd_pos_xy(16,1); 
079B:  MOVLW  10
079C:  MOVWF  6C
079D:  MOVLW  01
079E:  MOVWF  6D
079F:  CALL   4D2
....................       cgram(2); 
07A0:  MOVLW  02
07A1:  MOVWF  68
07A2:  CALL   6B8
....................    } 
.................... } 
07A3:  RETURN
....................  
.................... //MENU: INDIVIDUAL 
.................... void imprime_cinco_a_oito(){ 
....................  
....................    if(ccto5==1){ 
07A4:  BTFSS  2B.6
07A5:  GOTO   7AF
....................       lcd_pos_xy(10,2); 
07A6:  MOVLW  0A
07A7:  MOVWF  6C
07A8:  MOVLW  02
07A9:  MOVWF  6D
07AA:  CALL   4D2
....................       cgram(1); 
07AB:  MOVLW  01
07AC:  MOVWF  68
07AD:  CALL   6B8
....................    } 
....................    else{ 
07AE:  GOTO   7B7
....................       lcd_pos_xy(10,2); 
07AF:  MOVLW  0A
07B0:  MOVWF  6C
07B1:  MOVLW  02
07B2:  MOVWF  6D
07B3:  CALL   4D2
....................       cgram(2); 
07B4:  MOVLW  02
07B5:  MOVWF  68
07B6:  CALL   6B8
....................    } 
....................    if(ccto6==1){ 
07B7:  BTFSS  2B.7
07B8:  GOTO   7C2
....................       lcd_pos_xy(12,2); 
07B9:  MOVLW  0C
07BA:  MOVWF  6C
07BB:  MOVLW  02
07BC:  MOVWF  6D
07BD:  CALL   4D2
....................       cgram(1); 
07BE:  MOVLW  01
07BF:  MOVWF  68
07C0:  CALL   6B8
....................    } 
....................    else{ 
07C1:  GOTO   7CA
....................       lcd_pos_xy(12,2); 
07C2:  MOVLW  0C
07C3:  MOVWF  6C
07C4:  MOVLW  02
07C5:  MOVWF  6D
07C6:  CALL   4D2
....................       cgram(2); 
07C7:  MOVLW  02
07C8:  MOVWF  68
07C9:  CALL   6B8
....................    } 
....................    if(ccto7==1){ 
07CA:  BTFSS  2C.0
07CB:  GOTO   7D5
....................       lcd_pos_xy(14,2); 
07CC:  MOVLW  0E
07CD:  MOVWF  6C
07CE:  MOVLW  02
07CF:  MOVWF  6D
07D0:  CALL   4D2
....................       cgram(1); 
07D1:  MOVLW  01
07D2:  MOVWF  68
07D3:  CALL   6B8
....................    } 
....................    else{ 
07D4:  GOTO   7DD
....................       lcd_pos_xy(14,2); 
07D5:  MOVLW  0E
07D6:  MOVWF  6C
07D7:  MOVLW  02
07D8:  MOVWF  6D
07D9:  CALL   4D2
....................       cgram(2); 
07DA:  MOVLW  02
07DB:  MOVWF  68
07DC:  CALL   6B8
....................    } 
....................    if(ccto8==1){ 
07DD:  BTFSS  2C.1
07DE:  GOTO   7E8
....................       lcd_pos_xy(16,2); 
07DF:  MOVLW  10
07E0:  MOVWF  6C
07E1:  MOVLW  02
07E2:  MOVWF  6D
07E3:  CALL   4D2
....................       cgram(1); 
07E4:  MOVLW  01
07E5:  MOVWF  68
07E6:  CALL   6B8
....................    } 
....................    else{ 
07E7:  GOTO   7F0
....................       lcd_pos_xy(16,2); 
07E8:  MOVLW  10
07E9:  MOVWF  6C
07EA:  MOVLW  02
07EB:  MOVWF  6D
07EC:  CALL   4D2
....................       cgram(2); 
07ED:  MOVLW  02
07EE:  MOVWF  68
07EF:  CALL   6B8
....................    } 
.................... } 
07F0:  RETURN
....................  
.................... //MENU: INDIVIDUAL 
.................... void um_a_quatro(){ 
....................  
....................    trava_seta     = 1; 
*
0993:  BSF    2A.5
....................    trava_menus    = 1; 
0994:  BSF    2A.3
....................    trava_config_N = 0; 
0995:  BCF    2A.4
....................  
....................    if(seta==1){ 
0996:  DECFSZ 33,W
0997:  GOTO   1EF
....................     
....................       lcd_pos_xy(7,2); 
0998:  MOVLW  07
0999:  MOVWF  6C
099A:  MOVLW  02
099B:  MOVWF  6D
099C:  BCF    0A.3
099D:  CALL   4D2
099E:  BSF    0A.3
....................       printf(lcd_escreve " "); 
099F:  MOVLW  20
09A0:  MOVWF  6B
09A1:  BCF    0A.3
09A2:  CALL   4E4
09A3:  BSF    0A.3
....................       lcd_pos_xy(7,1); 
09A4:  MOVLW  07
09A5:  MOVWF  6C
09A6:  MOVLW  01
09A7:  MOVWF  6D
09A8:  BCF    0A.3
09A9:  CALL   4D2
09AA:  BSF    0A.3
....................       cgram(3); 
09AB:  MOVLW  03
09AC:  MOVWF  68
09AD:  BCF    0A.3
09AE:  CALL   6B8
09AF:  BSF    0A.3
....................     
....................       circuito_1(); 
....................       circuito_2(); 
....................       circuito_3(); 
....................       circuito_4(); 
....................        
....................       imprime_um_a_quatro(); 
*
09E0:  BCF    0A.3
09E1:  CALL   757
09E2:  BSF    0A.3
....................       imprime_cinco_a_oito(); 
09E3:  BCF    0A.3
09E4:  CALL   7A4
09E5:  BSF    0A.3
09E6:  CLRF   27
09E7:  BTFSC  0B.7
09E8:  BSF    27.7
09E9:  BCF    0B.7
....................       escreve_EEPROM(); 
09EA:  BCF    0A.3
09EB:  CALL   23B
09EC:  BSF    0A.3
09ED:  BTFSC  27.7
09EE:  BSF    0B.7
....................  
....................    } 
.................... } 
....................  
.................... //MENU: INDIVIDUAL 
.................... void cinco_a_oito(){ 
....................  
....................    trava_seta     = 1; 
*
09F0:  BSF    2A.5
....................    trava_menus    = 1; 
09F1:  BSF    2A.3
....................    trava_config_N = 0; 
09F2:  BCF    2A.4
....................  
....................    if(seta==2){ 
09F3:  MOVF   33,W
09F4:  SUBLW  02
09F5:  BTFSS  03.2
09F6:  GOTO   250
....................     
....................       lcd_pos_xy(7,1); 
09F7:  MOVLW  07
09F8:  MOVWF  6C
09F9:  MOVLW  01
09FA:  MOVWF  6D
09FB:  BCF    0A.3
09FC:  CALL   4D2
09FD:  BSF    0A.3
....................       printf(lcd_escreve " "); 
09FE:  MOVLW  20
09FF:  MOVWF  6B
0A00:  BCF    0A.3
0A01:  CALL   4E4
0A02:  BSF    0A.3
....................       lcd_pos_xy(7,2); 
0A03:  MOVLW  07
0A04:  MOVWF  6C
0A05:  MOVLW  02
0A06:  MOVWF  6D
0A07:  BCF    0A.3
0A08:  CALL   4D2
0A09:  BSF    0A.3
....................       cgram(3); 
0A0A:  MOVLW  03
0A0B:  MOVWF  68
0A0C:  BCF    0A.3
0A0D:  CALL   6B8
0A0E:  BSF    0A.3
....................  
....................     
....................       circuito_5(); 
....................       circuito_6(); 
....................       circuito_7(); 
....................       ronda_noturna(); 
....................        
....................       imprime_um_a_quatro(); 
*
0A41:  BCF    0A.3
0A42:  CALL   757
0A43:  BSF    0A.3
....................       imprime_cinco_a_oito(); 
0A44:  BCF    0A.3
0A45:  CALL   7A4
0A46:  BSF    0A.3
0A47:  CLRF   27
0A48:  BTFSC  0B.7
0A49:  BSF    27.7
0A4A:  BCF    0B.7
....................       escreve_EEPROM(); 
0A4B:  BCF    0A.3
0A4C:  CALL   23B
0A4D:  BSF    0A.3
0A4E:  BTFSC  27.7
0A4F:  BSF    0B.7
....................        
....................    }  
.................... } 
....................  
.................... //MENU: INDIVIDUAL 
.................... void comanda_individual(){ 
....................  
....................    trava_menus    = 1; 
*
0975:  BSF    2A.3
....................    trava_config_N = 0; 
0976:  BCF    2A.4
....................    trava_seta     = 1; 
0977:  BSF    2A.5
....................     
....................    navegador_seta(); 
....................     
....................    switch(seta){                             
*
098B:  MOVF   33,W
098C:  XORLW  01
098D:  BTFSC  03.2
098E:  GOTO   193
098F:  XORLW  03
0990:  BTFSC  03.2
0991:  GOTO   1F0
0992:  GOTO   251
....................     
....................       case 1: um_a_quatro();   break; 
*
09EF:  GOTO   251
....................       case 2: cinco_a_oito();  break; 
*
0A50:  GOTO   251
....................        
....................    } 
.................... } 
....................  
.................... //MENU: INDIVIDUAL 
.................... void individual(){ 
*
00AE:  DATA 00,00
....................  
....................    if(!trava_indiv){ 
*
0947:  BTFSC  29.3
0948:  GOTO   172
....................        
....................       trava_indiv = 1; 
0949:  BSF    29.3
....................       lcd_escreve("\f"); 
094A:  MOVLW  9C
094B:  BSF    03.6
094C:  MOVWF  0D
094D:  MOVLW  00
094E:  MOVWF  0F
094F:  BCF    0A.3
0950:  BCF    03.6
0951:  CALL   526
0952:  BSF    0A.3
....................      
....................       lcd_pos_xy(1,1); 
0953:  MOVLW  01
0954:  MOVWF  6C
0955:  MOVWF  6D
0956:  BCF    0A.3
0957:  CALL   4D2
0958:  BSF    0A.3
....................       printf(lcd_escreve "Modo    1 2 3 4 "); 
0959:  MOVLW  9D
095A:  BSF    03.6
095B:  MOVWF  0D
095C:  MOVLW  00
095D:  MOVWF  0F
095E:  BCF    0A.3
095F:  BCF    03.6
0960:  CALL   526
0961:  BSF    0A.3
....................       lcd_pos_xy(1,2); 
0962:  MOVLW  01
0963:  MOVWF  6C
0964:  MOVLW  02
0965:  MOVWF  6D
0966:  BCF    0A.3
0967:  CALL   4D2
0968:  BSF    0A.3
....................       printf(lcd_escreve "Manual  5 6 7 8 "); 
0969:  MOVLW  A6
096A:  BSF    03.6
096B:  MOVWF  0D
096C:  MOVLW  00
096D:  MOVWF  0F
096E:  BCF    0A.3
096F:  BCF    03.6
0970:  CALL   526
0971:  BSF    0A.3
....................        
....................    } 
....................     
....................       trava_setor     = 0; 
0972:  BCF    29.4
....................       trava_config    = 0; 
0973:  BCF    29.5
....................       trava_clock     = 0; 
0974:  BCF    29.6
....................  
....................       comanda_individual(); 
....................        
.................... } 
*
0A51:  BCF    0A.3
0A52:  BSF    0A.4
0A53:  GOTO   3B2 (RETURN)
....................  
.................... //MENU: CLOCK 
.................... void mostra_horario(){ 
....................  
....................    trava_menus    = 1; 
*
0D6F:  BSF    2A.3
....................    trava_config_N = 0; 
0D70:  BCF    2A.4
....................    trava_seta     = 0; 
0D71:  BCF    2A.5
....................  
....................    if(!input(MAIS) && !input(MENOS)){ 
0D72:  BSF    03.5
0D73:  BSF    05.1
0D74:  BCF    03.5
0D75:  BTFSC  05.1
0D76:  GOTO   654
0D77:  BSF    03.5
0D78:  BSF    05.2
0D79:  BCF    03.5
0D7A:  BTFSC  05.2
0D7B:  GOTO   654
....................     
....................       le_hora_rtc(); 
0D7C:  CALL   35B
....................       le_data_rtc(); 
....................       le_sem_rtc(); 
*
0DDD:  BCF    03.5
0DDE:  GOTO   3F5
....................                        
....................       lcd_pos_xy(1,1); 
0DDF:  MOVLW  01
0DE0:  MOVWF  6C
0DE1:  MOVWF  6D
0DE2:  BCF    0A.3
0DE3:  CALL   4D2
0DE4:  BSF    0A.3
....................       printf(lcd_escreve,"%02X:%02X:%02X  %s        \n", hrs, min, seg, sem_v); 
0DE5:  MOVF   3B,W
0DE6:  MOVWF  67
0DE7:  MOVLW  37
0DE8:  MOVWF  68
0DE9:  CALL   254
0DEA:  MOVLW  3A
0DEB:  MOVWF  6B
0DEC:  BCF    0A.3
0DED:  CALL   4E4
0DEE:  BSF    0A.3
0DEF:  MOVF   3A,W
0DF0:  MOVWF  67
0DF1:  MOVLW  37
0DF2:  MOVWF  68
0DF3:  CALL   254
0DF4:  MOVLW  3A
0DF5:  MOVWF  6B
0DF6:  BCF    0A.3
0DF7:  CALL   4E4
0DF8:  BSF    0A.3
0DF9:  MOVF   39,W
0DFA:  MOVWF  67
0DFB:  MOVLW  37
0DFC:  MOVWF  68
0DFD:  CALL   254
0DFE:  MOVLW  20
0DFF:  MOVWF  6B
0E00:  BCF    0A.3
0E01:  CALL   4E4
0E02:  BSF    0A.3
0E03:  MOVLW  20
0E04:  MOVWF  6B
0E05:  BCF    0A.3
0E06:  CALL   4E4
0E07:  BSF    0A.3
0E08:  MOVLW  63
0E09:  MOVWF  04
0E0A:  BCF    03.7
*
0E22:  MOVLW  B8
0E23:  BSF    03.6
0E24:  MOVWF  0D
0E25:  MOVLW  00
0E26:  MOVWF  0F
0E27:  BCF    03.0
0E28:  MOVLW  09
0E29:  BCF    03.6
0E2A:  MOVWF  67
0E2B:  CALL   279
....................       printf(lcd_escreve,"%02X.%02X.%02X             ", dia, mes, ano); 
0E2C:  MOVF   3C,W
0E2D:  MOVWF  67
0E2E:  MOVLW  37
0E2F:  MOVWF  68
0E30:  CALL   254
0E31:  MOVLW  2E
0E32:  MOVWF  6B
0E33:  BCF    0A.3
0E34:  CALL   4E4
0E35:  BSF    0A.3
0E36:  MOVF   3D,W
0E37:  MOVWF  67
0E38:  MOVLW  37
0E39:  MOVWF  68
0E3A:  CALL   254
0E3B:  MOVLW  2E
0E3C:  MOVWF  6B
0E3D:  BCF    0A.3
0E3E:  CALL   4E4
0E3F:  BSF    0A.3
0E40:  MOVF   3E,W
0E41:  MOVWF  67
0E42:  MOVLW  37
0E43:  MOVWF  68
0E44:  CALL   254
0E45:  MOVLW  C4
0E46:  BSF    03.6
0E47:  MOVWF  0D
0E48:  MOVLW  00
0E49:  MOVWF  0F
0E4A:  BCF    03.0
0E4B:  MOVLW  0D
0E4C:  BCF    03.6
0E4D:  MOVWF  67
0E4E:  CALL   279
....................        
....................       delay_ms(200); 
0E4F:  MOVLW  C8
0E50:  MOVWF  6C
0E51:  BCF    0A.3
0E52:  CALL   446
0E53:  BSF    0A.3
....................        
....................    } 
.................... } 
....................  
.................... //MENU: CLOCK 
.................... void clock(){ 
....................  
....................    trava_menus    = 1; 
*
0CED:  BSF    2A.3
....................    trava_config_N = 0; 
0CEE:  BCF    2A.4
....................    trava_seta     = 0; 
0CEF:  BCF    2A.5
....................     
....................  if(!trava_clock){                                                          // trava para escrever 1 vez 
0CF0:  BTFSC  29.6
0CF1:  GOTO   56C
....................        
....................       trava_clock = 1;     
0CF2:  BSF    29.6
....................       lcd_escreve("\f"); 
0CF3:  MOVLW  CB
0CF4:  BSF    03.6
0CF5:  MOVWF  0D
0CF6:  MOVLW  00
0CF7:  MOVWF  0F
0CF8:  BCF    0A.3
0CF9:  BCF    03.6
0CFA:  CALL   526
0CFB:  BSF    0A.3
....................       lcd_pos_xy(1,1); 
0CFC:  MOVLW  01
0CFD:  MOVWF  6C
0CFE:  MOVWF  6D
0CFF:  BCF    0A.3
0D00:  CALL   4D2
0D01:  BSF    0A.3
....................       printf(lcd_escreve,"%02X:%02X:%02X  %s        \n", hrs, min, seg, sem_v); 
0D02:  MOVF   3B,W
0D03:  MOVWF  67
0D04:  MOVLW  37
0D05:  MOVWF  68
0D06:  CALL   254
0D07:  MOVLW  3A
0D08:  MOVWF  6B
0D09:  BCF    0A.3
0D0A:  CALL   4E4
0D0B:  BSF    0A.3
0D0C:  MOVF   3A,W
0D0D:  MOVWF  67
0D0E:  MOVLW  37
0D0F:  MOVWF  68
0D10:  CALL   254
0D11:  MOVLW  3A
0D12:  MOVWF  6B
0D13:  BCF    0A.3
0D14:  CALL   4E4
0D15:  BSF    0A.3
0D16:  MOVF   39,W
0D17:  MOVWF  67
0D18:  MOVLW  37
0D19:  MOVWF  68
0D1A:  CALL   254
0D1B:  MOVLW  20
0D1C:  MOVWF  6B
0D1D:  BCF    0A.3
0D1E:  CALL   4E4
0D1F:  BSF    0A.3
0D20:  MOVLW  20
0D21:  MOVWF  6B
0D22:  BCF    0A.3
0D23:  CALL   4E4
0D24:  BSF    0A.3
0D25:  MOVLW  63
0D26:  MOVWF  04
0D27:  BCF    03.7
*
0D3F:  MOVLW  D5
0D40:  BSF    03.6
0D41:  MOVWF  0D
0D42:  MOVLW  00
0D43:  MOVWF  0F
0D44:  BCF    03.0
0D45:  MOVLW  09
0D46:  BCF    03.6
0D47:  MOVWF  67
0D48:  CALL   279
....................       printf(lcd_escreve,"%02X.%02X.%02X             ", dia, mes, ano); 
0D49:  MOVF   3C,W
0D4A:  MOVWF  67
0D4B:  MOVLW  37
0D4C:  MOVWF  68
0D4D:  CALL   254
0D4E:  MOVLW  2E
0D4F:  MOVWF  6B
0D50:  BCF    0A.3
0D51:  CALL   4E4
0D52:  BSF    0A.3
0D53:  MOVF   3D,W
0D54:  MOVWF  67
0D55:  MOVLW  37
0D56:  MOVWF  68
0D57:  CALL   254
0D58:  MOVLW  2E
0D59:  MOVWF  6B
0D5A:  BCF    0A.3
0D5B:  CALL   4E4
0D5C:  BSF    0A.3
0D5D:  MOVF   3E,W
0D5E:  MOVWF  67
0D5F:  MOVLW  37
0D60:  MOVWF  68
0D61:  CALL   254
0D62:  MOVLW  E1
0D63:  BSF    03.6
0D64:  MOVWF  0D
0D65:  MOVLW  00
0D66:  MOVWF  0F
0D67:  BCF    03.0
0D68:  MOVLW  0D
0D69:  BCF    03.6
0D6A:  MOVWF  67
0D6B:  CALL   279
....................        
....................    } 
....................     
....................       trava_indiv     = 0; 
0D6C:  BCF    29.3
....................       trava_setor     = 0; 
0D6D:  BCF    29.4
....................       trava_config    = 0; 
0D6E:  BCF    29.5
....................        
....................       mostra_horario(); 
....................     
.................... } 
*
0E54:  BCF    0A.3
0E55:  BSF    0A.4
0E56:  GOTO   3B2 (RETURN)
....................  
.................... //MENU: BLUETOOTH 
.................... void estado_bluetooth(){ 
....................     
....................    trava_menus    = 1; 
*
0E5E:  BSF    2A.3
....................    trava_config_N = 0; 
0E5F:  BCF    2A.4
....................    trava_seta     = 0; 
0E60:  BCF    2A.5
....................     
....................    lcd_pos_xy(20,3); 
0E61:  MOVLW  14
0E62:  MOVWF  6C
0E63:  MOVLW  03
0E64:  MOVWF  6D
0E65:  BCF    0A.3
0E66:  CALL   4D2
0E67:  BSF    0A.3
....................        
....................     switch(info){ 
0E68:  MOVF   38,W
0E69:  XORLW  43
0E6A:  BTFSS  03.2
0E6B:  GOTO   676
....................         case 'C': 
....................         lcd_pos_xy(20,3); 
0E6C:  MOVLW  14
0E6D:  MOVWF  6C
0E6E:  MOVLW  03
0E6F:  MOVWF  6D
0E70:  BCF    0A.3
0E71:  CALL   4D2
0E72:  BSF    0A.3
....................         conectado=1; 
0E73:  MOVLW  01
0E74:  MOVWF  37
....................         break; 
0E75:  GOTO   676
....................     } 
....................       
....................     if(conectado==1){ 
0E76:  DECFSZ 37,W
0E77:  GOTO   698
....................      
....................        lcd_pos_xy(1,1); 
0E78:  MOVLW  01
0E79:  MOVWF  6C
0E7A:  MOVWF  6D
0E7B:  BCF    0A.3
0E7C:  CALL   4D2
0E7D:  BSF    0A.3
....................        printf(lcd_escreve, "  Bluetooth:   "); 
0E7E:  MOVLW  E8
0E7F:  BSF    03.6
0E80:  MOVWF  0D
0E81:  MOVLW  00
0E82:  MOVWF  0F
0E83:  BCF    0A.3
0E84:  BCF    03.6
0E85:  CALL   526
0E86:  BSF    0A.3
....................        lcd_pos_xy(1,2); 
0E87:  MOVLW  01
0E88:  MOVWF  6C
0E89:  MOVLW  02
0E8A:  MOVWF  6D
0E8B:  BCF    0A.3
0E8C:  CALL   4D2
0E8D:  BSF    0A.3
....................        printf(lcd_escreve, "  Conectado    "); 
0E8E:  MOVLW  F0
0E8F:  BSF    03.6
0E90:  MOVWF  0D
0E91:  MOVLW  00
0E92:  MOVWF  0F
0E93:  BCF    0A.3
0E94:  BCF    03.6
0E95:  CALL   526
0E96:  BSF    0A.3
....................         
....................     } 
....................      
....................     else if(conectado==0){ 
0E97:  GOTO   6BA
0E98:  MOVF   37,F
0E99:  BTFSS  03.2
0E9A:  GOTO   6BA
....................         
....................        lcd_pos_xy(1,1); 
0E9B:  MOVLW  01
0E9C:  MOVWF  6C
0E9D:  MOVWF  6D
0E9E:  BCF    0A.3
0E9F:  CALL   4D2
0EA0:  BSF    0A.3
....................        printf(lcd_escreve, "  Bluetooth:     "); 
0EA1:  MOVLW  F8
0EA2:  BSF    03.6
0EA3:  MOVWF  0D
0EA4:  MOVLW  00
0EA5:  MOVWF  0F
0EA6:  BCF    0A.3
0EA7:  BCF    03.6
0EA8:  CALL   526
0EA9:  BSF    0A.3
....................        lcd_pos_xy(1,2); 
0EAA:  MOVLW  01
0EAB:  MOVWF  6C
0EAC:  MOVLW  02
0EAD:  MOVWF  6D
0EAE:  BCF    0A.3
0EAF:  CALL   4D2
0EB0:  BSF    0A.3
....................        printf(lcd_escreve, "  Desconectado   "); 
0EB1:  MOVLW  01
0EB2:  BSF    03.6
0EB3:  MOVWF  0D
0EB4:  MOVLW  01
0EB5:  MOVWF  0F
0EB6:  BCF    0A.3
0EB7:  BCF    03.6
0EB8:  CALL   526
0EB9:  BSF    0A.3
....................         
....................     } 
.................... } 
....................  
.................... //MENU: BLUETOOTH 
.................... void bluetooth(){ 
....................  
....................    trava_menus     = 1; 
*
0E57:  BSF    2A.3
....................    trava_config_N  = 0; 
0E58:  BCF    2A.4
....................    trava_seta      = 0; 
0E59:  BCF    2A.5
....................     
....................    trava_indiv     = 0; 
0E5A:  BCF    29.3
....................    trava_setor     = 0; 
0E5B:  BCF    29.4
....................    trava_config    = 0; 
0E5C:  BCF    29.5
....................    trava_clock     = 0; 
0E5D:  BCF    29.6
....................        
....................    estado_bluetooth(); 
....................     
.................... } 
*
0EBA:  BCF    0A.3
0EBB:  BSF    0A.4
0EBC:  GOTO   3B2 (RETURN)
....................  
.................... //MENU: CONFIGURA - NAVEGADOR 
.................... void navegador_config_inicial(){ 
....................  
....................    if(!input(OK)) trava1 = 0; 
0EBD:  BSF    03.5
0EBE:  BSF    05.0
0EBF:  BCF    03.5
0EC0:  BTFSS  05.0
0EC1:  BCF    2B.1
....................    if(trava_config_N){ 
0EC2:  BTFSS  2A.4
0EC3:  GOTO   6F3
....................        
....................       // configura botão MAIS 
....................       if(input(MAIS)){ 
0EC4:  BSF    03.5
0EC5:  BSF    05.1
0EC6:  BCF    03.5
0EC7:  BTFSS  05.1
0EC8:  GOTO   6CE
....................          if(!trava_mais){       
0EC9:  BTFSC  29.0
0ECA:  GOTO   6CD
....................             config ++; 
0ECB:  INCF   36,F
....................             trava_mais = 1;      
0ECC:  BSF    29.0
....................          }      
....................       } 
....................       else{    
0ECD:  GOTO   6CF
....................          trava_mais = 0;        
0ECE:  BCF    29.0
....................       } 
....................          
....................       // configura botão MENOS 
....................       if(input(MENOS)){ 
0ECF:  BSF    03.5
0ED0:  BSF    05.2
0ED1:  BCF    03.5
0ED2:  BTFSS  05.2
0ED3:  GOTO   6D9
....................          if(!trava_menos){   
0ED4:  BTFSC  29.1
0ED5:  GOTO   6D8
....................             config --; 
0ED6:  DECF   36,F
....................             trava_menos = 1;  
0ED7:  BSF    29.1
....................          }    
....................       } 
....................       else{  
0ED8:  GOTO   6DA
....................          trava_menos = 0;         
0ED9:  BCF    29.1
....................       } 
....................     
....................       if(input(OK) && !trava1){ 
0EDA:  BSF    03.5
0EDB:  BSF    05.0
0EDC:  BCF    03.5
0EDD:  BTFSS  05.0
0EDE:  GOTO   6E7
0EDF:  BTFSC  2B.1
0EE0:  GOTO   6E7
....................          if(!trava_OK){     
0EE1:  BTFSC  29.2
0EE2:  GOTO   6E6
....................             config_esse = 1; 
0EE3:  MOVLW  01
0EE4:  MOVWF  32
....................             trava_OK = 1;      
0EE5:  BSF    29.2
....................          }    
....................       } 
....................          
....................       else{    
0EE6:  GOTO   6E8
....................          trava_OK = 0;      
0EE7:  BCF    29.2
....................       } 
....................          
....................       // configurações de limites 
....................       if(config >= limite_config)       config      = 1; 
0EE8:  MOVF   31,W
0EE9:  SUBWF  36,W
0EEA:  BTFSS  03.0
0EEB:  GOTO   6EE
0EEC:  MOVLW  01
0EED:  MOVWF  36
....................       if(config <= 0)                   config      = 2;  
0EEE:  MOVF   36,F
0EEF:  BTFSS  03.2
0EF0:  GOTO   6F3
0EF1:  MOVLW  02
0EF2:  MOVWF  36
....................        
....................    } 
.................... } 
0EF3:  RETURN
....................  
.................... //MENU: CONFIGURA/RELÓGIO 
.................... void soma_decrementa_minuto(){ 
....................      
....................     lcd_escreve("\f");  
*
18BA:  MOVLW  0A
18BB:  BSF    03.6
18BC:  MOVWF  0D
18BD:  MOVLW  01
18BE:  MOVWF  0F
18BF:  BCF    0A.4
18C0:  BCF    0A.3
18C1:  BCF    03.6
18C2:  CALL   526
18C3:  BSF    0A.4
18C4:  BSF    0A.3
....................     lcd_pos_xy(1,1); 
18C5:  MOVLW  01
18C6:  MOVWF  6C
18C7:  MOVWF  6D
18C8:  BCF    0A.4
18C9:  BCF    0A.3
18CA:  CALL   4D2
18CB:  BSF    0A.4
18CC:  BSF    0A.3
....................     printf (lcd_escreve, "     MINUTO :"); 
18CD:  MOVLW  0B
18CE:  BSF    03.6
18CF:  MOVWF  0D
18D0:  MOVLW  01
18D1:  MOVWF  0F
18D2:  BCF    0A.4
18D3:  BCF    0A.3
18D4:  BCF    03.6
18D5:  CALL   526
18D6:  BSF    0A.4
18D7:  BSF    0A.3
....................     lcd_pos_xy(7,2); 
18D8:  MOVLW  07
18D9:  MOVWF  6C
18DA:  MOVLW  02
18DB:  MOVWF  6D
18DC:  BCF    0A.4
18DD:  BCF    0A.3
18DE:  CALL   4D2
18DF:  BSF    0A.4
18E0:  BSF    0A.3
....................     printf(lcd_escreve, "%02u" ,min); 
18E1:  MOVF   3A,W
18E2:  MOVWF  67
18E3:  MOVLW  01
18E4:  MOVWF  68
18E5:  BCF    0A.4
18E6:  CALL   6F4
18E7:  BSF    0A.4
....................   
....................    if (trava_dsmin){ 
18E8:  BTFSS  2D.2
18E9:  GOTO   13F
....................       while(!input(OK)){ 
18EA:  BSF    03.5
18EB:  BSF    05.0
18EC:  BCF    03.5
18ED:  BTFSC  05.0
18EE:  GOTO   13F
....................          if (input(MAIS)){ 
18EF:  BSF    03.5
18F0:  BSF    05.1
18F1:  BCF    03.5
18F2:  BTFSS  05.1
18F3:  GOTO   116
....................             if(min < 60){ 
18F4:  MOVF   3A,W
18F5:  SUBLW  3B
18F6:  BTFSS  03.0
18F7:  GOTO   115
....................                min ++; 
18F8:  INCF   3A,F
....................                lcd_pos_xy(7,2); 
18F9:  MOVLW  07
18FA:  MOVWF  6C
18FB:  MOVLW  02
18FC:  MOVWF  6D
18FD:  BCF    0A.4
18FE:  BCF    0A.3
18FF:  CALL   4D2
1900:  BSF    0A.4
1901:  BSF    0A.3
....................                printf(lcd_escreve, "%02u" ,min); 
1902:  MOVF   3A,W
1903:  MOVWF  67
1904:  MOVLW  01
1905:  MOVWF  68
1906:  BCF    0A.4
1907:  CALL   6F4
1908:  BSF    0A.4
....................                delay_ms(300); 
1909:  MOVLW  02
190A:  MOVWF  67
190B:  MOVLW  96
190C:  MOVWF  6C
190D:  BCF    0A.4
190E:  BCF    0A.3
190F:  CALL   446
1910:  BSF    0A.4
1911:  BSF    0A.3
1912:  DECFSZ 67,F
1913:  GOTO   10B
....................             } 
....................             else{ 
1914:  GOTO   116
....................                min = 00; 
1915:  CLRF   3A
....................             } 
....................          }    
....................        
....................          if (input(MENOS)){ 
1916:  BSF    03.5
1917:  BSF    05.2
1918:  BCF    03.5
1919:  BTFSS  05.2
191A:  GOTO   13E
....................             if(min >= 01){ 
191B:  MOVF   3A,W
191C:  SUBLW  00
191D:  BTFSC  03.0
191E:  GOTO   13C
....................                min --; 
191F:  DECF   3A,F
....................                
....................                lcd_pos_xy(7,2); 
1920:  MOVLW  07
1921:  MOVWF  6C
1922:  MOVLW  02
1923:  MOVWF  6D
1924:  BCF    0A.4
1925:  BCF    0A.3
1926:  CALL   4D2
1927:  BSF    0A.4
1928:  BSF    0A.3
....................                printf(lcd_escreve, "%02u", min); 
1929:  MOVF   3A,W
192A:  MOVWF  67
192B:  MOVLW  01
192C:  MOVWF  68
192D:  BCF    0A.4
192E:  CALL   6F4
192F:  BSF    0A.4
....................                delay_ms(300); 
1930:  MOVLW  02
1931:  MOVWF  67
1932:  MOVLW  96
1933:  MOVWF  6C
1934:  BCF    0A.4
1935:  BCF    0A.3
1936:  CALL   446
1937:  BSF    0A.4
1938:  BSF    0A.3
1939:  DECFSZ 67,F
193A:  GOTO   132
....................             } 
....................             else{ 
193B:  GOTO   13E
....................                min = 59; 
193C:  MOVLW  3B
193D:  MOVWF  3A
....................             } 
....................          } 
....................       } 
193E:  GOTO   0EA
....................    } 
.................... } 
....................  
.................... //MENU: CONFIGURA/RELÓGIO 
.................... void soma_decrementa_hora(){ 
....................  
....................    lcd_escreve("\f"); 
*
1951:  MOVLW  12
1952:  BSF    03.6
1953:  MOVWF  0D
1954:  MOVLW  01
1955:  MOVWF  0F
1956:  BCF    0A.4
1957:  BCF    0A.3
1958:  BCF    03.6
1959:  CALL   526
195A:  BSF    0A.4
195B:  BSF    0A.3
....................    lcd_pos_xy(1,1); 
195C:  MOVLW  01
195D:  MOVWF  6C
195E:  MOVWF  6D
195F:  BCF    0A.4
1960:  BCF    0A.3
1961:  CALL   4D2
1962:  BSF    0A.4
1963:  BSF    0A.3
....................    printf (lcd_escreve "     HORA :"); 
1964:  MOVLW  13
1965:  BSF    03.6
1966:  MOVWF  0D
1967:  MOVLW  01
1968:  MOVWF  0F
1969:  BCF    0A.4
196A:  BCF    0A.3
196B:  BCF    03.6
196C:  CALL   526
196D:  BSF    0A.4
196E:  BSF    0A.3
....................    lcd_pos_xy(7,2); 
196F:  MOVLW  07
1970:  MOVWF  6C
1971:  MOVLW  02
1972:  MOVWF  6D
1973:  BCF    0A.4
1974:  BCF    0A.3
1975:  CALL   4D2
1976:  BSF    0A.4
1977:  BSF    0A.3
....................    printf(lcd_escreve "%02u", hrs); 
1978:  MOVF   3B,W
1979:  MOVWF  67
197A:  MOVLW  01
197B:  MOVWF  68
197C:  BCF    0A.4
197D:  CALL   6F4
197E:  BSF    0A.4
....................    delay_ms(50);    
197F:  MOVLW  32
1980:  MOVWF  6C
1981:  BCF    0A.4
1982:  BCF    0A.3
1983:  CALL   446
1984:  BSF    0A.4
1985:  BSF    0A.3
....................     
....................    if(trava_dsh){ 
1986:  BTFSS  2D.3
1987:  GOTO   1DD
....................     
....................       while(!input(OK)){ 
1988:  BSF    03.5
1989:  BSF    05.0
198A:  BCF    03.5
198B:  BTFSC  05.0
198C:  GOTO   1DD
....................           
....................          if (input(MAIS)){ 
198D:  BSF    03.5
198E:  BSF    05.1
198F:  BCF    03.5
1990:  BTFSS  05.1
1991:  GOTO   1B4
....................             if(hrs <= 22){ 
1992:  MOVF   3B,W
1993:  SUBLW  16
1994:  BTFSS  03.0
1995:  GOTO   1B3
....................                hrs ++; 
1996:  INCF   3B,F
....................                lcd_pos_xy(7,2); 
1997:  MOVLW  07
1998:  MOVWF  6C
1999:  MOVLW  02
199A:  MOVWF  6D
199B:  BCF    0A.4
199C:  BCF    0A.3
199D:  CALL   4D2
199E:  BSF    0A.4
199F:  BSF    0A.3
....................                printf(lcd_escreve "%02u", hrs); 
19A0:  MOVF   3B,W
19A1:  MOVWF  67
19A2:  MOVLW  01
19A3:  MOVWF  68
19A4:  BCF    0A.4
19A5:  CALL   6F4
19A6:  BSF    0A.4
....................                delay_ms(300); 
19A7:  MOVLW  02
19A8:  MOVWF  67
19A9:  MOVLW  96
19AA:  MOVWF  6C
19AB:  BCF    0A.4
19AC:  BCF    0A.3
19AD:  CALL   446
19AE:  BSF    0A.4
19AF:  BSF    0A.3
19B0:  DECFSZ 67,F
19B1:  GOTO   1A9
....................             } 
....................             else{ 
19B2:  GOTO   1B4
....................                hrs = 00; 
19B3:  CLRF   3B
....................             } 
....................          }    
....................        
....................          if (input(MENOS)){ 
19B4:  BSF    03.5
19B5:  BSF    05.2
19B6:  BCF    03.5
19B7:  BTFSS  05.2
19B8:  GOTO   1DC
....................             if(hrs >= 01){ 
19B9:  MOVF   3B,W
19BA:  SUBLW  00
19BB:  BTFSC  03.0
19BC:  GOTO   1DA
....................                hrs --; 
19BD:  DECF   3B,F
....................                lcd_pos_xy(7,2); 
19BE:  MOVLW  07
19BF:  MOVWF  6C
19C0:  MOVLW  02
19C1:  MOVWF  6D
19C2:  BCF    0A.4
19C3:  BCF    0A.3
19C4:  CALL   4D2
19C5:  BSF    0A.4
19C6:  BSF    0A.3
....................                printf(lcd_escreve "%02u", hrs); 
19C7:  MOVF   3B,W
19C8:  MOVWF  67
19C9:  MOVLW  01
19CA:  MOVWF  68
19CB:  BCF    0A.4
19CC:  CALL   6F4
19CD:  BSF    0A.4
....................                delay_ms(300); 
19CE:  MOVLW  02
19CF:  MOVWF  67
19D0:  MOVLW  96
19D1:  MOVWF  6C
19D2:  BCF    0A.4
19D3:  BCF    0A.3
19D4:  CALL   446
19D5:  BSF    0A.4
19D6:  BSF    0A.3
19D7:  DECFSZ 67,F
19D8:  GOTO   1D0
....................             } 
....................             else{ 
19D9:  GOTO   1DC
....................                hrs = 23; 
19DA:  MOVLW  17
19DB:  MOVWF  3B
....................             } 
....................          } 
....................       } 
19DC:  GOTO   188
....................    }   
.................... } 
....................  
.................... //MENU: CONFIGURA/RELÓGIO 
.................... void soma_decrementa_dia_semana(){ 
....................  
....................    lcd_escreve("\f"); 
*
1000:  MOVLW  19
1001:  BSF    03.6
1002:  MOVWF  0D
1003:  MOVLW  01
1004:  MOVWF  0F
1005:  BCF    0A.4
1006:  BCF    03.6
1007:  CALL   526
1008:  BSF    0A.4
....................    sem = 1; 
1009:  MOVLW  01
100A:  MOVWF  3F
....................    sem_v= "Dom"; 
100B:  CLRF   67
100C:  CLRF   68
100D:  MOVLW  63
100E:  MOVWF  04
100F:  BCF    03.7
1010:  MOVF   67,W
1011:  ADDWF  04,F
1012:  MOVF   68,W
1013:  BCF    0A.4
1014:  CALL   040
1015:  BSF    0A.4
1016:  MOVWF  00
1017:  IORLW  00
1018:  BTFSC  03.2
1019:  GOTO   01D
101A:  INCF   68,F
101B:  INCF   67,F
101C:  GOTO   00D
....................    lcd_pos_xy(1,1); 
101D:  MOVLW  01
101E:  MOVWF  6C
101F:  MOVWF  6D
1020:  BCF    0A.4
1021:  CALL   4D2
1022:  BSF    0A.4
....................    printf (lcd_escreve " DIA DA SEMANA:"); 
1023:  MOVLW  1A
1024:  BSF    03.6
1025:  MOVWF  0D
1026:  MOVLW  01
1027:  MOVWF  0F
1028:  BCF    0A.4
1029:  BCF    03.6
102A:  CALL   526
102B:  BSF    0A.4
....................    lcd_pos_xy(7,2); 
102C:  MOVLW  07
102D:  MOVWF  6C
102E:  MOVLW  02
102F:  MOVWF  6D
1030:  BCF    0A.4
1031:  CALL   4D2
1032:  BSF    0A.4
....................    printf(lcd_escreve "%02s", sem_v); 
1033:  MOVLW  63
1034:  MOVWF  04
1035:  BCF    03.7
....................    delay_ms(50); 
*
104D:  MOVLW  32
104E:  MOVWF  6C
104F:  BCF    0A.4
1050:  CALL   446
1051:  BSF    0A.4
....................     
....................    if(trava_dsdsem){ 
1052:  BTFSS  2D.7
1053:  GOTO   1DF
....................       while(!input(OK)){ 
1054:  BSF    03.5
1055:  BSF    05.0
1056:  BCF    03.5
1057:  BTFSC  05.0
1058:  GOTO   1DF
....................          if (input(MAIS)){ 
1059:  BSF    03.5
105A:  BSF    05.1
105B:  BCF    03.5
105C:  BTFSS  05.1
105D:  GOTO   11B
....................             if(sem <= 06){ 
105E:  MOVF   3F,W
105F:  SUBLW  06
1060:  BTFSS  03.0
1061:  GOTO   11A
....................                sem ++; 
1062:  INCF   3F,F
....................                switch(sem){ 
1063:  MOVLW  01
1064:  SUBWF  3F,W
1065:  ADDLW  F9
1066:  BTFSC  03.0
1067:  GOTO   0EF
1068:  ADDLW  07
1069:  GOTO   1E2
....................                   case 1: (sem_v="Dom"); break; 
106A:  CLRF   67
106B:  CLRF   68
106C:  MOVLW  63
106D:  MOVWF  04
106E:  BCF    03.7
106F:  MOVF   67,W
1070:  ADDWF  04,F
1071:  MOVF   68,W
1072:  BCF    0A.4
1073:  CALL   040
1074:  BSF    0A.4
1075:  MOVWF  00
1076:  IORLW  00
1077:  BTFSC  03.2
1078:  GOTO   07C
1079:  INCF   68,F
107A:  INCF   67,F
107B:  GOTO   06C
107C:  GOTO   0EF
....................                   case 2: (sem_v="Seg"); break; 
107D:  CLRF   67
107E:  CLRF   68
107F:  MOVLW  63
1080:  MOVWF  04
1081:  BCF    03.7
1082:  MOVF   67,W
1083:  ADDWF  04,F
1084:  MOVF   68,W
1085:  BCF    0A.4
1086:  CALL   048
1087:  BSF    0A.4
1088:  MOVWF  00
1089:  IORLW  00
108A:  BTFSC  03.2
108B:  GOTO   08F
108C:  INCF   68,F
108D:  INCF   67,F
108E:  GOTO   07F
108F:  GOTO   0EF
....................                   case 3: (sem_v="Ter"); break; 
1090:  CLRF   67
1091:  CLRF   68
1092:  MOVLW  63
1093:  MOVWF  04
1094:  BCF    03.7
1095:  MOVF   67,W
1096:  ADDWF  04,F
1097:  MOVF   68,W
1098:  BCF    0A.4
1099:  CALL   050
109A:  BSF    0A.4
109B:  MOVWF  00
109C:  IORLW  00
109D:  BTFSC  03.2
109E:  GOTO   0A2
109F:  INCF   68,F
10A0:  INCF   67,F
10A1:  GOTO   092
10A2:  GOTO   0EF
....................                   case 4: (sem_v="Qua"); break; 
10A3:  CLRF   67
10A4:  CLRF   68
10A5:  MOVLW  63
10A6:  MOVWF  04
10A7:  BCF    03.7
10A8:  MOVF   67,W
10A9:  ADDWF  04,F
10AA:  MOVF   68,W
10AB:  BCF    0A.4
10AC:  CALL   058
10AD:  BSF    0A.4
10AE:  MOVWF  00
10AF:  IORLW  00
10B0:  BTFSC  03.2
10B1:  GOTO   0B5
10B2:  INCF   68,F
10B3:  INCF   67,F
10B4:  GOTO   0A5
10B5:  GOTO   0EF
....................                   case 5: (sem_v="Qui"); break; 
10B6:  CLRF   67
10B7:  CLRF   68
10B8:  MOVLW  63
10B9:  MOVWF  04
10BA:  BCF    03.7
10BB:  MOVF   67,W
10BC:  ADDWF  04,F
10BD:  MOVF   68,W
10BE:  BCF    0A.4
10BF:  CALL   060
10C0:  BSF    0A.4
10C1:  MOVWF  00
10C2:  IORLW  00
10C3:  BTFSC  03.2
10C4:  GOTO   0C8
10C5:  INCF   68,F
10C6:  INCF   67,F
10C7:  GOTO   0B8
10C8:  GOTO   0EF
....................                   case 6: (sem_v="Sex"); break; 
10C9:  CLRF   67
10CA:  CLRF   68
10CB:  MOVLW  63
10CC:  MOVWF  04
10CD:  BCF    03.7
10CE:  MOVF   67,W
10CF:  ADDWF  04,F
10D0:  MOVF   68,W
10D1:  BCF    0A.4
10D2:  CALL   068
10D3:  BSF    0A.4
10D4:  MOVWF  00
10D5:  IORLW  00
10D6:  BTFSC  03.2
10D7:  GOTO   0DB
10D8:  INCF   68,F
10D9:  INCF   67,F
10DA:  GOTO   0CB
10DB:  GOTO   0EF
....................                   case 7: (sem_v="Sab"); break; 
10DC:  CLRF   67
10DD:  CLRF   68
10DE:  MOVLW  63
10DF:  MOVWF  04
10E0:  BCF    03.7
10E1:  MOVF   67,W
10E2:  ADDWF  04,F
10E3:  MOVF   68,W
10E4:  BCF    0A.4
10E5:  CALL   070
10E6:  BSF    0A.4
10E7:  MOVWF  00
10E8:  IORLW  00
10E9:  BTFSC  03.2
10EA:  GOTO   0EE
10EB:  INCF   68,F
10EC:  INCF   67,F
10ED:  GOTO   0DE
10EE:  GOTO   0EF
....................                    
....................                } 
....................                lcd_pos_xy(7,2); 
10EF:  MOVLW  07
10F0:  MOVWF  6C
10F1:  MOVLW  02
10F2:  MOVWF  6D
10F3:  BCF    0A.4
10F4:  CALL   4D2
10F5:  BSF    0A.4
....................                printf(lcd_escreve "%02s", sem_v); 
10F6:  MOVLW  63
10F7:  MOVWF  04
10F8:  BCF    03.7
....................                delay_ms(300); 
*
1110:  MOVLW  02
1111:  MOVWF  67
1112:  MOVLW  96
1113:  MOVWF  6C
1114:  BCF    0A.4
1115:  CALL   446
1116:  BSF    0A.4
1117:  DECFSZ 67,F
1118:  GOTO   112
....................             } 
....................             else{ 
1119:  GOTO   11B
....................                sem = 0; 
111A:  CLRF   3F
....................             } 
....................          } 
....................          if (input(MENOS)){ 
111B:  BSF    03.5
111C:  BSF    05.2
111D:  BCF    03.5
111E:  BTFSS  05.2
111F:  GOTO   1DE
....................             if(sem >= 01){ 
1120:  MOVF   3F,W
1121:  SUBLW  00
1122:  BTFSC  03.0
1123:  GOTO   1DC
....................                sem --; 
1124:  DECF   3F,F
....................                switch(sem){ 
1125:  MOVLW  01
1126:  SUBWF  3F,W
1127:  ADDLW  F9
1128:  BTFSC  03.0
1129:  GOTO   1B1
112A:  ADDLW  07
112B:  GOTO   1ED
....................                   case 1: sem_v="Dom"; break; 
112C:  CLRF   67
112D:  CLRF   68
112E:  MOVLW  63
112F:  MOVWF  04
1130:  BCF    03.7
1131:  MOVF   67,W
1132:  ADDWF  04,F
1133:  MOVF   68,W
1134:  BCF    0A.4
1135:  CALL   040
1136:  BSF    0A.4
1137:  MOVWF  00
1138:  IORLW  00
1139:  BTFSC  03.2
113A:  GOTO   13E
113B:  INCF   68,F
113C:  INCF   67,F
113D:  GOTO   12E
113E:  GOTO   1B1
....................                   case 2: sem_v="Seg"; break; 
113F:  CLRF   67
1140:  CLRF   68
1141:  MOVLW  63
1142:  MOVWF  04
1143:  BCF    03.7
1144:  MOVF   67,W
1145:  ADDWF  04,F
1146:  MOVF   68,W
1147:  BCF    0A.4
1148:  CALL   048
1149:  BSF    0A.4
114A:  MOVWF  00
114B:  IORLW  00
114C:  BTFSC  03.2
114D:  GOTO   151
114E:  INCF   68,F
114F:  INCF   67,F
1150:  GOTO   141
1151:  GOTO   1B1
....................                   case 3: sem_v="Ter"; break; 
1152:  CLRF   67
1153:  CLRF   68
1154:  MOVLW  63
1155:  MOVWF  04
1156:  BCF    03.7
1157:  MOVF   67,W
1158:  ADDWF  04,F
1159:  MOVF   68,W
115A:  BCF    0A.4
115B:  CALL   050
115C:  BSF    0A.4
115D:  MOVWF  00
115E:  IORLW  00
115F:  BTFSC  03.2
1160:  GOTO   164
1161:  INCF   68,F
1162:  INCF   67,F
1163:  GOTO   154
1164:  GOTO   1B1
....................                   case 4: sem_v="Qua"; break; 
1165:  CLRF   67
1166:  CLRF   68
1167:  MOVLW  63
1168:  MOVWF  04
1169:  BCF    03.7
116A:  MOVF   67,W
116B:  ADDWF  04,F
116C:  MOVF   68,W
116D:  BCF    0A.4
116E:  CALL   058
116F:  BSF    0A.4
1170:  MOVWF  00
1171:  IORLW  00
1172:  BTFSC  03.2
1173:  GOTO   177
1174:  INCF   68,F
1175:  INCF   67,F
1176:  GOTO   167
1177:  GOTO   1B1
....................                   case 5: sem_v="Qui"; break; 
1178:  CLRF   67
1179:  CLRF   68
117A:  MOVLW  63
117B:  MOVWF  04
117C:  BCF    03.7
117D:  MOVF   67,W
117E:  ADDWF  04,F
117F:  MOVF   68,W
1180:  BCF    0A.4
1181:  CALL   060
1182:  BSF    0A.4
1183:  MOVWF  00
1184:  IORLW  00
1185:  BTFSC  03.2
1186:  GOTO   18A
1187:  INCF   68,F
1188:  INCF   67,F
1189:  GOTO   17A
118A:  GOTO   1B1
....................                   case 6: sem_v="Sex"; break; 
118B:  CLRF   67
118C:  CLRF   68
118D:  MOVLW  63
118E:  MOVWF  04
118F:  BCF    03.7
1190:  MOVF   67,W
1191:  ADDWF  04,F
1192:  MOVF   68,W
1193:  BCF    0A.4
1194:  CALL   068
1195:  BSF    0A.4
1196:  MOVWF  00
1197:  IORLW  00
1198:  BTFSC  03.2
1199:  GOTO   19D
119A:  INCF   68,F
119B:  INCF   67,F
119C:  GOTO   18D
119D:  GOTO   1B1
....................                   case 7: sem_v="Sab"; break; 
119E:  CLRF   67
119F:  CLRF   68
11A0:  MOVLW  63
11A1:  MOVWF  04
11A2:  BCF    03.7
11A3:  MOVF   67,W
11A4:  ADDWF  04,F
11A5:  MOVF   68,W
11A6:  BCF    0A.4
11A7:  CALL   070
11A8:  BSF    0A.4
11A9:  MOVWF  00
11AA:  IORLW  00
11AB:  BTFSC  03.2
11AC:  GOTO   1B0
11AD:  INCF   68,F
11AE:  INCF   67,F
11AF:  GOTO   1A0
11B0:  GOTO   1B1
....................                    
....................                } 
....................                lcd_pos_xy(7,2); 
11B1:  MOVLW  07
11B2:  MOVWF  6C
11B3:  MOVLW  02
11B4:  MOVWF  6D
11B5:  BCF    0A.4
11B6:  CALL   4D2
11B7:  BSF    0A.4
....................                printf(lcd_escreve "%02s", sem_v); 
11B8:  MOVLW  63
11B9:  MOVWF  04
11BA:  BCF    03.7
....................                delay_ms(300); 
*
11D2:  MOVLW  02
11D3:  MOVWF  67
11D4:  MOVLW  96
11D5:  MOVWF  6C
11D6:  BCF    0A.4
11D7:  CALL   446
11D8:  BSF    0A.4
11D9:  DECFSZ 67,F
11DA:  GOTO   1D4
....................             } 
....................              
....................             else{ 
11DB:  GOTO   1DE
....................                sem = 8; 
11DC:  MOVLW  08
11DD:  MOVWF  3F
....................             } 
....................          } 
....................       } 
11DE:  GOTO   054
....................    } 
.................... }    
11DF:  BSF    0A.3
11E0:  BSF    0A.4
11E1:  GOTO   1F1 (RETURN)
....................  
.................... //MENU: CONFIGURA/RELÓGIO 
.................... void soma_decrementa_dia(){ 
....................       
....................    lcd_escreve("\f"); 
*
1A04:  MOVLW  22
1A05:  BSF    03.6
1A06:  MOVWF  0D
1A07:  MOVLW  01
1A08:  MOVWF  0F
1A09:  BCF    0A.4
1A0A:  BCF    0A.3
1A0B:  BCF    03.6
1A0C:  CALL   526
1A0D:  BSF    0A.4
1A0E:  BSF    0A.3
....................    lcd_pos_xy(1,1); 
1A0F:  MOVLW  01
1A10:  MOVWF  6C
1A11:  MOVWF  6D
1A12:  BCF    0A.4
1A13:  BCF    0A.3
1A14:  CALL   4D2
1A15:  BSF    0A.4
1A16:  BSF    0A.3
....................    printf (lcd_escreve "      DIA:"); 
1A17:  MOVLW  23
1A18:  BSF    03.6
1A19:  MOVWF  0D
1A1A:  MOVLW  01
1A1B:  MOVWF  0F
1A1C:  BCF    0A.4
1A1D:  BCF    0A.3
1A1E:  BCF    03.6
1A1F:  CALL   526
1A20:  BSF    0A.4
1A21:  BSF    0A.3
....................    lcd_pos_xy(7,2); 
1A22:  MOVLW  07
1A23:  MOVWF  6C
1A24:  MOVLW  02
1A25:  MOVWF  6D
1A26:  BCF    0A.4
1A27:  BCF    0A.3
1A28:  CALL   4D2
1A29:  BSF    0A.4
1A2A:  BSF    0A.3
....................    printf(lcd_escreve "%02u", dia); 
1A2B:  MOVF   3C,W
1A2C:  MOVWF  67
1A2D:  MOVLW  01
1A2E:  MOVWF  68
1A2F:  BCF    0A.4
1A30:  CALL   6F4
1A31:  BSF    0A.4
....................    delay_ms(50); 
1A32:  MOVLW  32
1A33:  MOVWF  6C
1A34:  BCF    0A.4
1A35:  BCF    0A.3
1A36:  CALL   446
1A37:  BSF    0A.4
1A38:  BSF    0A.3
....................     
....................    if(trava_dsd){ 
1A39:  BTFSS  2D.4
1A3A:  GOTO   291
....................     
....................       while(!input(OK)){ 
1A3B:  BSF    03.5
1A3C:  BSF    05.0
1A3D:  BCF    03.5
1A3E:  BTFSC  05.0
1A3F:  GOTO   291
....................        
....................          if (input(MAIS)){ 
1A40:  BSF    03.5
1A41:  BSF    05.1
1A42:  BCF    03.5
1A43:  BTFSS  05.1
1A44:  GOTO   268
....................             if(dia <= 30){ 
1A45:  MOVF   3C,W
1A46:  SUBLW  1E
1A47:  BTFSS  03.0
1A48:  GOTO   266
....................                dia ++; 
1A49:  INCF   3C,F
....................                lcd_pos_xy(7,2); 
1A4A:  MOVLW  07
1A4B:  MOVWF  6C
1A4C:  MOVLW  02
1A4D:  MOVWF  6D
1A4E:  BCF    0A.4
1A4F:  BCF    0A.3
1A50:  CALL   4D2
1A51:  BSF    0A.4
1A52:  BSF    0A.3
....................                printf(lcd_escreve "%02u", dia); 
1A53:  MOVF   3C,W
1A54:  MOVWF  67
1A55:  MOVLW  01
1A56:  MOVWF  68
1A57:  BCF    0A.4
1A58:  CALL   6F4
1A59:  BSF    0A.4
....................                delay_ms(300); 
1A5A:  MOVLW  02
1A5B:  MOVWF  67
1A5C:  MOVLW  96
1A5D:  MOVWF  6C
1A5E:  BCF    0A.4
1A5F:  BCF    0A.3
1A60:  CALL   446
1A61:  BSF    0A.4
1A62:  BSF    0A.3
1A63:  DECFSZ 67,F
1A64:  GOTO   25C
....................             } 
....................             else{ 
1A65:  GOTO   268
....................                dia = 01; 
1A66:  MOVLW  01
1A67:  MOVWF  3C
....................             } 
....................          }    
....................           
....................          if (input(MENOS)){ 
1A68:  BSF    03.5
1A69:  BSF    05.2
1A6A:  BCF    03.5
1A6B:  BTFSS  05.2
1A6C:  GOTO   290
....................             if(dia >= 01){ 
1A6D:  MOVF   3C,W
1A6E:  SUBLW  00
1A6F:  BTFSC  03.0
1A70:  GOTO   28E
....................                dia --; 
1A71:  DECF   3C,F
....................                lcd_pos_xy(7,2); 
1A72:  MOVLW  07
1A73:  MOVWF  6C
1A74:  MOVLW  02
1A75:  MOVWF  6D
1A76:  BCF    0A.4
1A77:  BCF    0A.3
1A78:  CALL   4D2
1A79:  BSF    0A.4
1A7A:  BSF    0A.3
....................                printf(lcd_escreve "%02u", dia); 
1A7B:  MOVF   3C,W
1A7C:  MOVWF  67
1A7D:  MOVLW  01
1A7E:  MOVWF  68
1A7F:  BCF    0A.4
1A80:  CALL   6F4
1A81:  BSF    0A.4
....................                delay_ms(300); 
1A82:  MOVLW  02
1A83:  MOVWF  67
1A84:  MOVLW  96
1A85:  MOVWF  6C
1A86:  BCF    0A.4
1A87:  BCF    0A.3
1A88:  CALL   446
1A89:  BSF    0A.4
1A8A:  BSF    0A.3
1A8B:  DECFSZ 67,F
1A8C:  GOTO   284
....................             } 
....................             else{ 
1A8D:  GOTO   290
....................                dia = 31; 
1A8E:  MOVLW  1F
1A8F:  MOVWF  3C
....................             } 
....................          } 
....................       }  
1A90:  GOTO   23B
....................    }         
.................... } 
....................  
.................... //MENU: CONFIGURA/RELÓIO 
.................... void soma_decrementa_mes(){ 
....................     
....................    lcd_escreve("\f"); 
*
1AA3:  MOVLW  29
1AA4:  BSF    03.6
1AA5:  MOVWF  0D
1AA6:  MOVLW  01
1AA7:  MOVWF  0F
1AA8:  BCF    0A.4
1AA9:  BCF    0A.3
1AAA:  BCF    03.6
1AAB:  CALL   526
1AAC:  BSF    0A.4
1AAD:  BSF    0A.3
....................    lcd_pos_xy(1,1); 
1AAE:  MOVLW  01
1AAF:  MOVWF  6C
1AB0:  MOVWF  6D
1AB1:  BCF    0A.4
1AB2:  BCF    0A.3
1AB3:  CALL   4D2
1AB4:  BSF    0A.4
1AB5:  BSF    0A.3
....................    printf (lcd_escreve "      MES:"); 
1AB6:  MOVLW  2A
1AB7:  BSF    03.6
1AB8:  MOVWF  0D
1AB9:  MOVLW  01
1ABA:  MOVWF  0F
1ABB:  BCF    0A.4
1ABC:  BCF    0A.3
1ABD:  BCF    03.6
1ABE:  CALL   526
1ABF:  BSF    0A.4
1AC0:  BSF    0A.3
....................    lcd_pos_xy(7,2); 
1AC1:  MOVLW  07
1AC2:  MOVWF  6C
1AC3:  MOVLW  02
1AC4:  MOVWF  6D
1AC5:  BCF    0A.4
1AC6:  BCF    0A.3
1AC7:  CALL   4D2
1AC8:  BSF    0A.4
1AC9:  BSF    0A.3
....................    printf(lcd_escreve "%02u", mes); 
1ACA:  MOVF   3D,W
1ACB:  MOVWF  67
1ACC:  MOVLW  01
1ACD:  MOVWF  68
1ACE:  BCF    0A.4
1ACF:  CALL   6F4
1AD0:  BSF    0A.4
....................    delay_ms(50); 
1AD1:  MOVLW  32
1AD2:  MOVWF  6C
1AD3:  BCF    0A.4
1AD4:  BCF    0A.3
1AD5:  CALL   446
1AD6:  BSF    0A.4
1AD7:  BSF    0A.3
....................     
....................    if(trava_dsmes){ 
1AD8:  BTFSS  2D.5
1AD9:  GOTO   330
....................       while(!input(OK)){ 
1ADA:  BSF    03.5
1ADB:  BSF    05.0
1ADC:  BCF    03.5
1ADD:  BTFSC  05.0
1ADE:  GOTO   330
....................          if (input(MAIS)){ 
1ADF:  BSF    03.5
1AE0:  BSF    05.1
1AE1:  BCF    03.5
1AE2:  BTFSS  05.1
1AE3:  GOTO   307
....................             if(mes <= 11){ 
1AE4:  MOVF   3D,W
1AE5:  SUBLW  0B
1AE6:  BTFSS  03.0
1AE7:  GOTO   305
....................                mes ++; 
1AE8:  INCF   3D,F
....................                lcd_pos_xy(7,2); 
1AE9:  MOVLW  07
1AEA:  MOVWF  6C
1AEB:  MOVLW  02
1AEC:  MOVWF  6D
1AED:  BCF    0A.4
1AEE:  BCF    0A.3
1AEF:  CALL   4D2
1AF0:  BSF    0A.4
1AF1:  BSF    0A.3
....................                printf(lcd_escreve "%02u", mes); 
1AF2:  MOVF   3D,W
1AF3:  MOVWF  67
1AF4:  MOVLW  01
1AF5:  MOVWF  68
1AF6:  BCF    0A.4
1AF7:  CALL   6F4
1AF8:  BSF    0A.4
....................                delay_ms(300); 
1AF9:  MOVLW  02
1AFA:  MOVWF  67
1AFB:  MOVLW  96
1AFC:  MOVWF  6C
1AFD:  BCF    0A.4
1AFE:  BCF    0A.3
1AFF:  CALL   446
1B00:  BSF    0A.4
1B01:  BSF    0A.3
1B02:  DECFSZ 67,F
1B03:  GOTO   2FB
....................             } 
....................             else{ 
1B04:  GOTO   307
....................                mes = 01; 
1B05:  MOVLW  01
1B06:  MOVWF  3D
....................             } 
....................          }    
....................        
....................          if (input(MENOS)){ 
1B07:  BSF    03.5
1B08:  BSF    05.2
1B09:  BCF    03.5
1B0A:  BTFSS  05.2
1B0B:  GOTO   32F
....................             if(mes >= 01){ 
1B0C:  MOVF   3D,W
1B0D:  SUBLW  00
1B0E:  BTFSC  03.0
1B0F:  GOTO   32D
....................                mes --; 
1B10:  DECF   3D,F
....................                lcd_pos_xy(7,2); 
1B11:  MOVLW  07
1B12:  MOVWF  6C
1B13:  MOVLW  02
1B14:  MOVWF  6D
1B15:  BCF    0A.4
1B16:  BCF    0A.3
1B17:  CALL   4D2
1B18:  BSF    0A.4
1B19:  BSF    0A.3
....................                printf(lcd_escreve "%02u", mes); 
1B1A:  MOVF   3D,W
1B1B:  MOVWF  67
1B1C:  MOVLW  01
1B1D:  MOVWF  68
1B1E:  BCF    0A.4
1B1F:  CALL   6F4
1B20:  BSF    0A.4
....................                delay_ms(300); 
1B21:  MOVLW  02
1B22:  MOVWF  67
1B23:  MOVLW  96
1B24:  MOVWF  6C
1B25:  BCF    0A.4
1B26:  BCF    0A.3
1B27:  CALL   446
1B28:  BSF    0A.4
1B29:  BSF    0A.3
1B2A:  DECFSZ 67,F
1B2B:  GOTO   323
....................             } 
....................             else{ 
1B2C:  GOTO   32F
....................                mes = 12; 
1B2D:  MOVLW  0C
1B2E:  MOVWF  3D
....................             } 
....................          } 
....................       }  
1B2F:  GOTO   2DA
....................    }       
.................... }   
....................  
.................... //MENU: CONFIGURA/RELÓGIO 
.................... void soma_decrementa_ano(){ 
....................  
....................    ano = 17; 
*
1B42:  MOVLW  11
1B43:  MOVWF  3E
....................    lcd_escreve("\f"); 
1B44:  MOVLW  30
1B45:  BSF    03.6
1B46:  MOVWF  0D
1B47:  MOVLW  01
1B48:  MOVWF  0F
1B49:  BCF    0A.4
1B4A:  BCF    0A.3
1B4B:  BCF    03.6
1B4C:  CALL   526
1B4D:  BSF    0A.4
1B4E:  BSF    0A.3
....................    lcd_pos_xy(1,1); 
1B4F:  MOVLW  01
1B50:  MOVWF  6C
1B51:  MOVWF  6D
1B52:  BCF    0A.4
1B53:  BCF    0A.3
1B54:  CALL   4D2
1B55:  BSF    0A.4
1B56:  BSF    0A.3
....................    printf (lcd_escreve "      ANO:"); 
1B57:  MOVLW  31
1B58:  BSF    03.6
1B59:  MOVWF  0D
1B5A:  MOVLW  01
1B5B:  MOVWF  0F
1B5C:  BCF    0A.4
1B5D:  BCF    0A.3
1B5E:  BCF    03.6
1B5F:  CALL   526
1B60:  BSF    0A.4
1B61:  BSF    0A.3
....................    lcd_pos_xy(7,2); 
1B62:  MOVLW  07
1B63:  MOVWF  6C
1B64:  MOVLW  02
1B65:  MOVWF  6D
1B66:  BCF    0A.4
1B67:  BCF    0A.3
1B68:  CALL   4D2
1B69:  BSF    0A.4
1B6A:  BSF    0A.3
....................    printf(lcd_escreve "20%02u", ano); 
1B6B:  MOVLW  32
1B6C:  MOVWF  6B
1B6D:  BCF    0A.4
1B6E:  BCF    0A.3
1B6F:  CALL   4E4
1B70:  BSF    0A.4
1B71:  BSF    0A.3
1B72:  MOVLW  30
1B73:  MOVWF  6B
1B74:  BCF    0A.4
1B75:  BCF    0A.3
1B76:  CALL   4E4
1B77:  BSF    0A.4
1B78:  BSF    0A.3
1B79:  MOVF   3E,W
1B7A:  MOVWF  67
1B7B:  MOVLW  01
1B7C:  MOVWF  68
1B7D:  BCF    0A.4
1B7E:  CALL   6F4
1B7F:  BSF    0A.4
....................     
....................    if(trava_dsa){ 
1B80:  BTFSS  2D.6
1B81:  GOTO   3D8
....................     
....................       while(!input(OK)){ 
1B82:  BSF    03.5
1B83:  BSF    05.0
1B84:  BCF    03.5
1B85:  BTFSC  05.0
1B86:  GOTO   3D7
....................        
....................          if (input(MAIS)){ 
1B87:  BSF    03.5
1B88:  BSF    05.1
1B89:  BCF    03.5
1B8A:  BTFSS  05.1
1B8B:  GOTO   3AE
....................             if(ano <= 99){ 
1B8C:  MOVF   3E,W
1B8D:  SUBLW  63
1B8E:  BTFSS  03.0
1B8F:  GOTO   3AD
....................                ano ++; 
1B90:  INCF   3E,F
....................                lcd_pos_xy(9,2); 
1B91:  MOVLW  09
1B92:  MOVWF  6C
1B93:  MOVLW  02
1B94:  MOVWF  6D
1B95:  BCF    0A.4
1B96:  BCF    0A.3
1B97:  CALL   4D2
1B98:  BSF    0A.4
1B99:  BSF    0A.3
....................                printf(lcd_escreve "%02u", ano); 
1B9A:  MOVF   3E,W
1B9B:  MOVWF  67
1B9C:  MOVLW  01
1B9D:  MOVWF  68
1B9E:  BCF    0A.4
1B9F:  CALL   6F4
1BA0:  BSF    0A.4
....................                delay_ms(300); 
1BA1:  MOVLW  02
1BA2:  MOVWF  67
1BA3:  MOVLW  96
1BA4:  MOVWF  6C
1BA5:  BCF    0A.4
1BA6:  BCF    0A.3
1BA7:  CALL   446
1BA8:  BSF    0A.4
1BA9:  BSF    0A.3
1BAA:  DECFSZ 67,F
1BAB:  GOTO   3A3
....................             } 
....................             else{ 
1BAC:  GOTO   3AE
....................                ano = 0; 
1BAD:  CLRF   3E
....................             } 
....................          }    
....................        
....................          if (input(MENOS)){ 
1BAE:  BSF    03.5
1BAF:  BSF    05.2
1BB0:  BCF    03.5
1BB1:  BTFSS  05.2
1BB2:  GOTO   3D6
....................             if(ano >= 01){ 
1BB3:  MOVF   3E,W
1BB4:  SUBLW  00
1BB5:  BTFSC  03.0
1BB6:  GOTO   3D4
....................                ano --; 
1BB7:  DECF   3E,F
....................                lcd_pos_xy(9,2); 
1BB8:  MOVLW  09
1BB9:  MOVWF  6C
1BBA:  MOVLW  02
1BBB:  MOVWF  6D
1BBC:  BCF    0A.4
1BBD:  BCF    0A.3
1BBE:  CALL   4D2
1BBF:  BSF    0A.4
1BC0:  BSF    0A.3
....................                printf(lcd_escreve "%02u", ano); 
1BC1:  MOVF   3E,W
1BC2:  MOVWF  67
1BC3:  MOVLW  01
1BC4:  MOVWF  68
1BC5:  BCF    0A.4
1BC6:  CALL   6F4
1BC7:  BSF    0A.4
....................                delay_ms(300); 
1BC8:  MOVLW  02
1BC9:  MOVWF  67
1BCA:  MOVLW  96
1BCB:  MOVWF  6C
1BCC:  BCF    0A.4
1BCD:  BCF    0A.3
1BCE:  CALL   446
1BCF:  BSF    0A.4
1BD0:  BSF    0A.3
1BD1:  DECFSZ 67,F
1BD2:  GOTO   3CA
....................             } 
....................             else{ 
1BD3:  GOTO   3D6
....................                ano = 99; 
1BD4:  MOVLW  63
1BD5:  MOVWF  3E
....................             } 
....................          } 
....................       }  
1BD6:  GOTO   382
....................       trava_okay = 1; 
1BD7:  BSF    2D.1
....................    }  
.................... } 
....................  
.................... //MENU: CONFIGURA/RONDA NOTURNA (ALTERADO) 
.................... void inverno(){ 
*
0149:  DATA 00,00
....................  
....................    if(!trava_inverno){ 
*
1D47:  BTFSC  2E.3
1D48:  GOTO   57C
....................     
....................       lcd_escreve("\f"); 
1D49:  MOVLW  37
1D4A:  BSF    03.6
1D4B:  MOVWF  0D
1D4C:  MOVLW  01
1D4D:  MOVWF  0F
1D4E:  BCF    0A.4
1D4F:  BCF    0A.3
1D50:  BCF    03.6
1D51:  CALL   526
1D52:  BSF    0A.4
1D53:  BSF    0A.3
....................       lcd_pos_xy(1,1); 
1D54:  MOVLW  01
1D55:  MOVWF  6C
1D56:  MOVWF  6D
1D57:  BCF    0A.4
1D58:  BCF    0A.3
1D59:  CALL   4D2
1D5A:  BSF    0A.4
1D5B:  BSF    0A.3
....................       printf(lcd_escreve, " Modo Inverno   "); 
1D5C:  MOVLW  38
1D5D:  BSF    03.6
1D5E:  MOVWF  0D
1D5F:  MOVLW  01
1D60:  MOVWF  0F
1D61:  BCF    0A.4
1D62:  BCF    0A.3
1D63:  BCF    03.6
1D64:  CALL   526
1D65:  BSF    0A.4
1D66:  BSF    0A.3
....................       lcd_pos_xy(1,2); 
1D67:  MOVLW  01
1D68:  MOVWF  6C
1D69:  MOVLW  02
1D6A:  MOVWF  6D
1D6B:  BCF    0A.4
1D6C:  BCF    0A.3
1D6D:  CALL   4D2
1D6E:  BSF    0A.4
1D6F:  BSF    0A.3
....................       printf(lcd_escreve, " 18 as 06 horas "); 
1D70:  MOVLW  41
1D71:  BSF    03.6
1D72:  MOVWF  0D
1D73:  MOVLW  01
1D74:  MOVWF  0F
1D75:  BCF    0A.4
1D76:  BCF    0A.3
1D77:  BCF    03.6
1D78:  CALL   526
1D79:  BSF    0A.4
1D7A:  BSF    0A.3
....................        
....................       trava_inverno = 1; 
1D7B:  BSF    2E.3
....................        
....................    } 
....................     
....................    trava_verao   = 0; 
1D7C:  BCF    2E.2
....................    trava_senai   = 0; 
1D7D:  BCF    2E.4
....................     
.................... } 
....................  
.................... //MENU: CONFIGURA/RONDA NOTURNA (ALTERADO) 
.................... void verao(){ 
*
015C:  DATA 00,00
....................  
....................    if(!trava_verao){ 
*
1D7F:  BTFSC  2E.2
1D80:  GOTO   5B4
....................  
....................       lcd_escreve("\f"); 
1D81:  MOVLW  4A
1D82:  BSF    03.6
1D83:  MOVWF  0D
1D84:  MOVLW  01
1D85:  MOVWF  0F
1D86:  BCF    0A.4
1D87:  BCF    0A.3
1D88:  BCF    03.6
1D89:  CALL   526
1D8A:  BSF    0A.4
1D8B:  BSF    0A.3
....................       lcd_pos_xy(1,1); 
1D8C:  MOVLW  01
1D8D:  MOVWF  6C
1D8E:  MOVWF  6D
1D8F:  BCF    0A.4
1D90:  BCF    0A.3
1D91:  CALL   4D2
1D92:  BSF    0A.4
1D93:  BSF    0A.3
....................       printf(lcd_escreve, " Modo Verao     "); 
1D94:  MOVLW  4B
1D95:  BSF    03.6
1D96:  MOVWF  0D
1D97:  MOVLW  01
1D98:  MOVWF  0F
1D99:  BCF    0A.4
1D9A:  BCF    0A.3
1D9B:  BCF    03.6
1D9C:  CALL   526
1D9D:  BSF    0A.4
1D9E:  BSF    0A.3
....................       lcd_pos_xy(1,2); 
1D9F:  MOVLW  01
1DA0:  MOVWF  6C
1DA1:  MOVLW  02
1DA2:  MOVWF  6D
1DA3:  BCF    0A.4
1DA4:  BCF    0A.3
1DA5:  CALL   4D2
1DA6:  BSF    0A.4
1DA7:  BSF    0A.3
....................       printf(lcd_escreve, " 20 as 07 horas "); 
1DA8:  MOVLW  54
1DA9:  BSF    03.6
1DAA:  MOVWF  0D
1DAB:  MOVLW  01
1DAC:  MOVWF  0F
1DAD:  BCF    0A.4
1DAE:  BCF    0A.3
1DAF:  BCF    03.6
1DB0:  CALL   526
1DB1:  BSF    0A.4
1DB2:  BSF    0A.3
....................     
....................       trava_verao   = 1; 
1DB3:  BSF    2E.2
....................        
....................    } 
....................     
....................    trava_inverno = 0; 
1DB4:  BCF    2E.3
....................    trava_senai   = 0; 
1DB5:  BCF    2E.4
....................     
.................... } 
....................     
.................... //MENU: CONFIGURA/RONDA NOTURNA (ALTERADO) 
.................... void senai(){ 
*
016F:  DATA 00,00
....................  
....................    if(!trava_senai){ 
*
1DB7:  BTFSC  2E.4
1DB8:  GOTO   5EC
....................  
....................       lcd_escreve("\f"); 
1DB9:  MOVLW  5D
1DBA:  BSF    03.6
1DBB:  MOVWF  0D
1DBC:  MOVLW  01
1DBD:  MOVWF  0F
1DBE:  BCF    0A.4
1DBF:  BCF    0A.3
1DC0:  BCF    03.6
1DC1:  CALL   526
1DC2:  BSF    0A.4
1DC3:  BSF    0A.3
....................       lcd_pos_xy(1,1); 
1DC4:  MOVLW  01
1DC5:  MOVWF  6C
1DC6:  MOVWF  6D
1DC7:  BCF    0A.4
1DC8:  BCF    0A.3
1DC9:  CALL   4D2
1DCA:  BSF    0A.4
1DCB:  BSF    0A.3
....................       printf(lcd_escreve, " Modo Padrao    "); 
1DCC:  MOVLW  5E
1DCD:  BSF    03.6
1DCE:  MOVWF  0D
1DCF:  MOVLW  01
1DD0:  MOVWF  0F
1DD1:  BCF    0A.4
1DD2:  BCF    0A.3
1DD3:  BCF    03.6
1DD4:  CALL   526
1DD5:  BSF    0A.4
1DD6:  BSF    0A.3
....................       lcd_pos_xy(1,2); 
1DD7:  MOVLW  01
1DD8:  MOVWF  6C
1DD9:  MOVLW  02
1DDA:  MOVWF  6D
1DDB:  BCF    0A.4
1DDC:  BCF    0A.3
1DDD:  CALL   4D2
1DDE:  BSF    0A.4
1DDF:  BSF    0A.3
....................       printf(lcd_escreve, " 23 as 07 horas "); 
1DE0:  MOVLW  67
1DE1:  BSF    03.6
1DE2:  MOVWF  0D
1DE3:  MOVLW  01
1DE4:  MOVWF  0F
1DE5:  BCF    0A.4
1DE6:  BCF    0A.3
1DE7:  BCF    03.6
1DE8:  CALL   526
1DE9:  BSF    0A.4
1DEA:  BSF    0A.3
....................     
....................       trava_senai   = 1; 
1DEB:  BSF    2E.4
....................        
....................    } 
....................     
....................    trava_inverno = 0; 
1DEC:  BCF    2E.3
....................    trava_verao   = 0; 
1DED:  BCF    2E.2
....................  
.................... } 
....................  
.................... //MENU: CONFIGURA/RONDA NOTURNA (ALTERADO) 
.................... void ronda_pre_programada(){ 
*
0181:  DATA 00,00
....................  
....................    lcd_escreve("\f"); 
*
1D0B:  MOVLW  70
1D0C:  BSF    03.6
1D0D:  MOVWF  0D
1D0E:  MOVLW  01
1D0F:  MOVWF  0F
1D10:  BCF    0A.4
1D11:  BCF    0A.3
1D12:  BCF    03.6
1D13:  CALL   526
1D14:  BSF    0A.4
1D15:  BSF    0A.3
....................    delay_ms(50); 
1D16:  MOVLW  32
1D17:  MOVWF  6C
1D18:  BCF    0A.4
1D19:  BCF    0A.3
1D1A:  CALL   446
1D1B:  BSF    0A.4
1D1C:  BSF    0A.3
....................    pre_programada = 1; 
1D1D:  MOVLW  01
1D1E:  MOVWF  34
....................     
....................    printf(lcd_escreve, " Modo Inverno "); 
1D1F:  MOVLW  71
1D20:  BSF    03.6
1D21:  MOVWF  0D
1D22:  MOVLW  01
1D23:  MOVWF  0F
1D24:  BCF    0A.4
1D25:  BCF    0A.3
1D26:  BCF    03.6
1D27:  CALL   526
1D28:  BSF    0A.4
1D29:  BSF    0A.3
....................    printf(lcd_escreve, " 18 as 06 horas "); 
1D2A:  MOVLW  79
1D2B:  BSF    03.6
1D2C:  MOVWF  0D
1D2D:  MOVLW  01
1D2E:  MOVWF  0F
1D2F:  BCF    0A.4
1D30:  BCF    0A.3
1D31:  BCF    03.6
1D32:  CALL   526
1D33:  BSF    0A.4
1D34:  BSF    0A.3
....................     
....................    if(trava_auto){ 
1D35:  BTFSS  2E.5
1D36:  GOTO   61D
....................     
....................       while(!input(OK)){ 
1D37:  BSF    03.5
1D38:  BSF    05.0
1D39:  BCF    03.5
1D3A:  BTFSC  05.0
1D3B:  GOTO   61D
....................        
....................          switch(pre_programada){ 
1D3C:  MOVF   34,W
1D3D:  XORLW  01
1D3E:  BTFSC  03.2
1D3F:  GOTO   547
1D40:  XORLW  03
1D41:  BTFSC  03.2
1D42:  GOTO   57F
1D43:  XORLW  01
1D44:  BTFSC  03.2
1D45:  GOTO   5B7
1D46:  GOTO   5EF
....................           
....................             case 1: inverno ();  break; 
*
1D7E:  GOTO   5EF
....................             case 2: verao   ();  break; 
*
1DB6:  GOTO   5EF
....................             case 3: senai   ();  break; 
*
1DEE:  GOTO   5EF
....................        
....................          } 
....................           
....................          if(input(MAIS)){     
1DEF:  BSF    03.5
1DF0:  BSF    05.1
1DF1:  BCF    03.5
1DF2:  BTFSS  05.1
1DF3:  GOTO   600
....................             pre_programada ++; 
1DF4:  INCF   34,F
....................             delay_ms(300); 
1DF5:  MOVLW  02
1DF6:  MOVWF  67
1DF7:  MOVLW  96
1DF8:  MOVWF  6C
1DF9:  BCF    0A.4
1DFA:  BCF    0A.3
1DFB:  CALL   446
1DFC:  BSF    0A.4
1DFD:  BSF    0A.3
1DFE:  DECFSZ 67,F
1DFF:  GOTO   5F7
....................          } 
....................           
....................          if(input(MENOS)){ 
1E00:  BSF    03.5
1E01:  BSF    05.2
1E02:  BCF    03.5
1E03:  BTFSS  05.2
1E04:  GOTO   611
....................           
....................             pre_programada --; 
1E05:  DECF   34,F
....................             delay_ms(300); 
1E06:  MOVLW  02
1E07:  MOVWF  67
1E08:  MOVLW  96
1E09:  MOVWF  6C
1E0A:  BCF    0A.4
1E0B:  BCF    0A.3
1E0C:  CALL   446
1E0D:  BSF    0A.4
1E0E:  BSF    0A.3
1E0F:  DECFSZ 67,F
1E10:  GOTO   608
....................              
....................          } 
....................           
....................          //LIMITES 
....................          if(pre_programada >= 4) pre_programada = 1; 
1E11:  MOVF   34,W
1E12:  SUBLW  03
1E13:  BTFSC  03.0
1E14:  GOTO   617
1E15:  MOVLW  01
1E16:  MOVWF  34
....................          if(pre_programada <= 0) pre_programada = 3; 
1E17:  MOVF   34,F
1E18:  BTFSS  03.2
1E19:  GOTO   61C
1E1A:  MOVLW  03
1E1B:  MOVWF  34
....................           
....................       } 
1E1C:  GOTO   537
....................    } 
.................... } 
....................  
.................... //MENU: CONFIGURA/RONDA NOTURNA 
.................... void liga_desliga(){ 
*
019D:  DATA 00,00
....................  
....................    lcd_escreve("\f"); 
*
1E2B:  MOVLW  82
1E2C:  BSF    03.6
1E2D:  MOVWF  0D
1E2E:  MOVLW  01
1E2F:  MOVWF  0F
1E30:  BCF    0A.4
1E31:  BCF    0A.3
1E32:  BCF    03.6
1E33:  CALL   526
1E34:  BSF    0A.4
1E35:  BSF    0A.3
....................    lcd_pos_xy(1,1); 
1E36:  MOVLW  01
1E37:  MOVWF  6C
1E38:  MOVWF  6D
1E39:  BCF    0A.4
1E3A:  BCF    0A.3
1E3B:  CALL   4D2
1E3C:  BSF    0A.4
1E3D:  BSF    0A.3
....................    printf(lcd_escreve, " RONDA NOTURNA: "); 
1E3E:  MOVLW  83
1E3F:  BSF    03.6
1E40:  MOVWF  0D
1E41:  MOVLW  01
1E42:  MOVWF  0F
1E43:  BCF    0A.4
1E44:  BCF    0A.3
1E45:  BCF    03.6
1E46:  CALL   526
1E47:  BSF    0A.4
1E48:  BSF    0A.3
....................    delay_ms(50); 
1E49:  MOVLW  32
1E4A:  MOVWF  6C
1E4B:  BCF    0A.4
1E4C:  BCF    0A.3
1E4D:  CALL   446
1E4E:  BSF    0A.4
1E4F:  BSF    0A.3
....................     
....................    if(trava_entra){ 
1E50:  BTFSS  2E.0
1E51:  GOTO   6A9
....................     
....................       while(!input(OK)){ 
1E52:  BSF    03.5
1E53:  BSF    05.0
1E54:  BCF    03.5
1E55:  BTFSC  05.0
1E56:  GOTO   6A9
....................        
....................          if (input(MAIS)){ 
1E57:  BSF    03.5
1E58:  BSF    05.1
1E59:  BCF    03.5
1E5A:  BTFSS  05.1
1E5B:  GOTO   669
....................                ativa= ~ativa; 
1E5C:  MOVLW  80
1E5D:  XORWF  2E,F
....................                delay_ms(300); 
1E5E:  MOVLW  02
1E5F:  MOVWF  67
1E60:  MOVLW  96
1E61:  MOVWF  6C
1E62:  BCF    0A.4
1E63:  BCF    0A.3
1E64:  CALL   446
1E65:  BSF    0A.4
1E66:  BSF    0A.3
1E67:  DECFSZ 67,F
1E68:  GOTO   660
....................          } 
....................  
....................          if (input(MENOS)){ 
1E69:  BSF    03.5
1E6A:  BSF    05.2
1E6B:  BCF    03.5
1E6C:  BTFSS  05.2
1E6D:  GOTO   67B
....................  
....................                ativa= ~ativa; 
1E6E:  MOVLW  80
1E6F:  XORWF  2E,F
....................                delay_ms(300); 
1E70:  MOVLW  02
1E71:  MOVWF  67
1E72:  MOVLW  96
1E73:  MOVWF  6C
1E74:  BCF    0A.4
1E75:  BCF    0A.3
1E76:  CALL   446
1E77:  BSF    0A.4
1E78:  BSF    0A.3
1E79:  DECFSZ 67,F
1E7A:  GOTO   672
....................          } 
....................           
....................          if(ativa){ 
1E7B:  BTFSS  2E.7
1E7C:  GOTO   693
....................           
....................             trava_ativado = 1; 
1E7D:  BSF    2E.1
....................             lcd_pos_xy(1,2); 
1E7E:  MOVLW  01
1E7F:  MOVWF  6C
1E80:  MOVLW  02
1E81:  MOVWF  6D
1E82:  BCF    0A.4
1E83:  BCF    0A.3
1E84:  CALL   4D2
1E85:  BSF    0A.4
1E86:  BSF    0A.3
....................             printf(lcd_escreve, "    LIGADO      "); 
1E87:  MOVLW  8C
1E88:  BSF    03.6
1E89:  MOVWF  0D
1E8A:  MOVLW  01
1E8B:  MOVWF  0F
1E8C:  BCF    0A.4
1E8D:  BCF    0A.3
1E8E:  BCF    03.6
1E8F:  CALL   526
1E90:  BSF    0A.4
1E91:  BSF    0A.3
....................          } 
....................          else{ 
1E92:  GOTO   6A8
....................              
....................             trava_ativado = 0; 
1E93:  BCF    2E.1
....................             lcd_pos_xy(1,2); 
1E94:  MOVLW  01
1E95:  MOVWF  6C
1E96:  MOVLW  02
1E97:  MOVWF  6D
1E98:  BCF    0A.4
1E99:  BCF    0A.3
1E9A:  CALL   4D2
1E9B:  BSF    0A.4
1E9C:  BSF    0A.3
....................             printf(lcd_escreve, "    DESLIGADO   "); 
1E9D:  MOVLW  95
1E9E:  BSF    03.6
1E9F:  MOVWF  0D
1EA0:  MOVLW  01
1EA1:  MOVWF  0F
1EA2:  BCF    0A.4
1EA3:  BCF    0A.3
1EA4:  BCF    03.6
1EA5:  CALL   526
1EA6:  BSF    0A.4
1EA7:  BSF    0A.3
....................          } 
....................       }   
1EA8:  GOTO   652
....................    } 
.................... }    
....................        
.................... //CONVERSÃO DECIMAL - HEXADECIMAL 
.................... int d2h(int x){ 
....................  
....................       int x_alto, x_baixo; 
....................        
....................       x_alto  = 0.1*x; 
*
11F8:  CLRF   6B
11F9:  MOVF   67,W
11FA:  MOVWF  6A
*
1217:  MOVLW  CD
1218:  MOVWF  6D
1219:  MOVLW  CC
121A:  MOVWF  6C
121B:  MOVLW  4C
121C:  MOVWF  6B
121D:  MOVLW  7B
121E:  MOVWF  6A
121F:  MOVF   7A,W
1220:  MOVWF  71
1221:  MOVF   79,W
1222:  MOVWF  70
1223:  MOVF   78,W
1224:  MOVWF  6F
1225:  MOVF   77,W
1226:  MOVWF  6E
*
129B:  MOVF   7A,W
129C:  MOVWF  6D
129D:  MOVF   79,W
129E:  MOVWF  6C
129F:  MOVF   78,W
12A0:  MOVWF  6B
12A1:  MOVF   77,W
12A2:  MOVWF  6A
*
12C1:  MOVF   78,W
12C2:  MOVWF  68
....................       x_baixo = x-(10*x_alto); 
12C3:  MOVLW  0A
12C4:  MOVWF  6A
12C5:  MOVF   68,W
12C6:  MOVWF  6B
*
12EB:  MOVF   78,W
12EC:  SUBWF  67,W
12ED:  MOVWF  69
....................        
....................       x_alto = x_alto*0b00010000; 
12EE:  SWAPF  68,F
12EF:  MOVLW  F0
12F0:  ANDWF  68,F
....................        
....................       x = x_alto | x_baixo; 
12F1:  MOVF   68,W
12F2:  IORWF  69,W
12F3:  MOVWF  67
....................         
....................       return x; 
12F4:  MOVF   67,W
12F5:  MOVWF  78
.................... } 
12F6:  RETURN
....................  
.................... //MENU: CONFIGURA/RELÓGIO 
.................... void comanda_relogio(){ 
....................  
....................    trava_menus    = 0; 
*
1891:  BCF    2A.3
....................    trava_config_N = 1; 
1892:  BSF    2A.4
....................    trava_seta     = 0; 
1893:  BCF    2A.5
....................    config         = 1; 
1894:  MOVLW  01
1895:  MOVWF  36
....................     
....................    if(config==1 && config_esse==1){ 
1896:  DECFSZ 36,W
1897:  GOTO   4B0
1898:  DECFSZ 32,W
1899:  GOTO   4B0
....................     
....................       config_esse    = 0; 
189A:  CLRF   32
....................       trava_config_N = 0; 
189B:  BCF    2A.4
....................       trava_menus    = 0; 
189C:  BCF    2A.3
....................       trava_seta     = 0; 
189D:  BCF    2A.5
....................     
....................       if(!finalizado){ 
189E:  BTFSC  2B.0
189F:  GOTO   45D
....................        
....................          do{ 
....................              
....................             if(!trava_okay){ 
18A0:  BTFSC  2D.1
18A1:  GOTO   3DF
....................                min = 0; 
18A2:  CLRF   3A
....................                hrs = 0; 
18A3:  CLRF   3B
....................                dia = 1; 
18A4:  MOVLW  01
18A5:  MOVWF  3C
....................                mes = 1; 
18A6:  MOVWF  3D
....................                ano = 0; 
18A7:  CLRF   3E
....................         
....................                 
....................                trava_okay   = 0; 
18A8:  BCF    2D.1
....................                trava_dsmin  = 1; 
18A9:  BSF    2D.2
....................                trava_dsh    = 0; 
18AA:  BCF    2D.3
....................                trava_dsd    = 0; 
18AB:  BCF    2D.4
....................                trava_dsmes  = 0; 
18AC:  BCF    2D.5
....................                trava_dsa    = 0; 
18AD:  BCF    2D.6
....................                trava_dsdsem = 0; 
18AE:  BCF    2D.7
....................                 
....................                delay_ms(500); 
18AF:  MOVLW  02
18B0:  MOVWF  67
18B1:  MOVLW  FA
18B2:  MOVWF  6C
18B3:  BCF    0A.4
18B4:  BCF    0A.3
18B5:  CALL   446
18B6:  BSF    0A.4
18B7:  BSF    0A.3
18B8:  DECFSZ 67,F
18B9:  GOTO   0B1
....................                 
....................                soma_decrementa_minuto(); 
....................                
....................                trava_okay   = 0; 
*
193F:  BCF    2D.1
....................                trava_dsmin  = 0; 
1940:  BCF    2D.2
....................                trava_dsh    = 1; 
1941:  BSF    2D.3
....................                trava_dsd    = 0; 
1942:  BCF    2D.4
....................                trava_dsmes  = 0; 
1943:  BCF    2D.5
....................                trava_dsa    = 0; 
1944:  BCF    2D.6
....................                trava_dsdsem = 0; 
1945:  BCF    2D.7
....................                 
....................                delay_ms(500); 
1946:  MOVLW  02
1947:  MOVWF  67
1948:  MOVLW  FA
1949:  MOVWF  6C
194A:  BCF    0A.4
194B:  BCF    0A.3
194C:  CALL   446
194D:  BSF    0A.4
194E:  BSF    0A.3
194F:  DECFSZ 67,F
1950:  GOTO   148
....................                                
....................                soma_decrementa_hora(); 
....................                
....................                trava_okay   = 0; 
*
19DD:  BCF    2D.1
....................                trava_dsmin  = 0; 
19DE:  BCF    2D.2
....................                trava_dsh    = 0; 
19DF:  BCF    2D.3
....................                trava_dsd    = 0; 
19E0:  BCF    2D.4
....................                trava_dsmes  = 0; 
19E1:  BCF    2D.5
....................                trava_dsa    = 0;  
19E2:  BCF    2D.6
....................                trava_dsdsem = 1; 
19E3:  BSF    2D.7
....................                 
....................                delay_ms(500); 
19E4:  MOVLW  02
19E5:  MOVWF  67
19E6:  MOVLW  FA
19E7:  MOVWF  6C
19E8:  BCF    0A.4
19E9:  BCF    0A.3
19EA:  CALL   446
19EB:  BSF    0A.4
19EC:  BSF    0A.3
19ED:  DECFSZ 67,F
19EE:  GOTO   1E6
....................                 
....................                soma_decrementa_dia_semana(); 
19EF:  BCF    0A.3
19F0:  GOTO   000
19F1:  BSF    0A.3
....................                 
....................                trava_okay   = 0; 
19F2:  BCF    2D.1
....................                trava_dsmin  = 0; 
19F3:  BCF    2D.2
....................                trava_dsh    = 0; 
19F4:  BCF    2D.3
....................                trava_dsd    = 1; 
19F5:  BSF    2D.4
....................                trava_dsmes  = 0; 
19F6:  BCF    2D.5
....................                trava_dsa    = 0;  
19F7:  BCF    2D.6
....................                trava_dsdsem = 0; 
19F8:  BCF    2D.7
....................                 
....................                delay_ms(500); 
19F9:  MOVLW  02
19FA:  MOVWF  67
19FB:  MOVLW  FA
19FC:  MOVWF  6C
19FD:  BCF    0A.4
19FE:  BCF    0A.3
19FF:  CALL   446
1A00:  BSF    0A.4
1A01:  BSF    0A.3
1A02:  DECFSZ 67,F
1A03:  GOTO   1FB
....................                 
....................                soma_decrementa_dia(); 
....................                 
....................                trava_okay   = 0; 
*
1A91:  BCF    2D.1
....................                trava_dsmin  = 0; 
1A92:  BCF    2D.2
....................                trava_dsh    = 0; 
1A93:  BCF    2D.3
....................                trava_dsd    = 0; 
1A94:  BCF    2D.4
....................                trava_dsmes  = 1; 
1A95:  BSF    2D.5
....................                trava_dsa    = 0;  
1A96:  BCF    2D.6
....................                trava_dsdsem = 0; 
1A97:  BCF    2D.7
....................                 
....................                delay_ms(500); 
1A98:  MOVLW  02
1A99:  MOVWF  67
1A9A:  MOVLW  FA
1A9B:  MOVWF  6C
1A9C:  BCF    0A.4
1A9D:  BCF    0A.3
1A9E:  CALL   446
1A9F:  BSF    0A.4
1AA0:  BSF    0A.3
1AA1:  DECFSZ 67,F
1AA2:  GOTO   29A
....................                 
....................                soma_decrementa_mes(); 
....................               
....................                trava_okay   = 0; 
*
1B30:  BCF    2D.1
....................                trava_dsmin  = 0; 
1B31:  BCF    2D.2
....................                trava_dsh    = 0; 
1B32:  BCF    2D.3
....................                trava_dsd    = 0; 
1B33:  BCF    2D.4
....................                trava_dsmes  = 0; 
1B34:  BCF    2D.5
....................                trava_dsa    = 1; 
1B35:  BSF    2D.6
....................                trava_dsdsem = 0; 
1B36:  BCF    2D.7
....................                 
....................                delay_ms(500); 
1B37:  MOVLW  02
1B38:  MOVWF  67
1B39:  MOVLW  FA
1B3A:  MOVWF  6C
1B3B:  BCF    0A.4
1B3C:  BCF    0A.3
1B3D:  CALL   446
1B3E:  BSF    0A.4
1B3F:  BSF    0A.3
1B40:  DECFSZ 67,F
1B41:  GOTO   339
....................                 
....................                soma_decrementa_ano(); 
....................                 
....................                trava_okay   = 1; 
*
1BD8:  BSF    2D.1
....................                trava_dsmin  = 0; 
1BD9:  BCF    2D.2
....................                trava_dsh    = 0; 
1BDA:  BCF    2D.3
....................                trava_dsd    = 0; 
1BDB:  BCF    2D.4
....................                trava_dsmes  = 0; 
1BDC:  BCF    2D.5
....................                trava_dsa    = 0; 
1BDD:  BCF    2D.6
....................                trava_dsdsem = 0; 
1BDE:  BCF    2D.7
....................             } 
....................              
....................             min=d2h(min); 
1BDF:  MOVF   3A,W
1BE0:  MOVWF  67
1BE1:  BCF    0A.3
1BE2:  CALL   1F8
1BE3:  BSF    0A.3
1BE4:  MOVF   78,W
1BE5:  MOVWF  3A
....................             hrs=d2h(hrs); 
1BE6:  MOVF   3B,W
1BE7:  MOVWF  67
1BE8:  BCF    0A.3
1BE9:  CALL   1F8
1BEA:  BSF    0A.3
1BEB:  MOVF   78,W
1BEC:  MOVWF  3B
....................             dia=d2h(dia); 
1BED:  MOVF   3C,W
1BEE:  MOVWF  67
1BEF:  BCF    0A.3
1BF0:  CALL   1F8
1BF1:  BSF    0A.3
1BF2:  MOVF   78,W
1BF3:  MOVWF  3C
....................             mes=d2h(mes); 
1BF4:  MOVF   3D,W
1BF5:  MOVWF  67
1BF6:  BCF    0A.3
1BF7:  CALL   1F8
1BF8:  BSF    0A.3
1BF9:  MOVF   78,W
1BFA:  MOVWF  3D
....................             ano=d2h(ano); 
1BFB:  MOVF   3E,W
1BFC:  MOVWF  67
1BFD:  BCF    0A.3
1BFE:  CALL   1F8
1BFF:  BSF    0A.3
1C00:  MOVF   78,W
1C01:  MOVWF  3E
....................              
....................             escreve_hora_rtc(); 
1C02:  BCF    0A.4
1C03:  CALL   755
1C04:  BSF    0A.4
....................             escreve_data_rtc(); 
....................             escreve_sem_rtc(); 
*
1C4C:  BCF    0A.4
1C4D:  BCF    03.5
1C4E:  CALL   3BC
1C4F:  BSF    0A.4
....................  
....................             if(input(OK) && trava_okay) finalizado=1;                                        // esse é o ultimo OK  
1C50:  BSF    03.5
1C51:  BSF    05.0
1C52:  BCF    03.5
1C53:  BTFSS  05.0
1C54:  GOTO   457
1C55:  BTFSC  2D.1
1C56:  BSF    2B.0
....................              
....................          }while(!finalizado && !trava_okay); 
1C57:  BTFSC  2B.0
1C58:  GOTO   45B
1C59:  BTFSS  2D.1
1C5A:  GOTO   0A0
....................           
....................          trava_okay = 0; 
1C5B:  BCF    2D.1
....................          config_esse = 0; 
1C5C:  CLRF   32
....................           
....................       } 
....................        
....................       escreve_hora_rtc(); 
1C5D:  BCF    0A.4
1C5E:  CALL   755
1C5F:  BSF    0A.4
....................       escreve_data_rtc(); 
....................       escreve_sem_rtc(); 
*
1CA7:  BCF    0A.4
1CA8:  BCF    03.5
1CA9:  CALL   3BC
1CAA:  BSF    0A.4
....................  
....................       muda_menus     = 1; 
1CAB:  MOVLW  01
1CAC:  MOVWF  35
....................       trava_menus    = 1; 
1CAD:  BSF    2A.3
....................       trava_config_N = 0; 
1CAE:  BCF    2A.4
....................       trava_seta     = 0; 
1CAF:  BCF    2A.5
....................        
....................    } 
.................... } 
....................  
.................... //MENU: CONFIGURA/RELÓGIO 
.................... void relogio(){ 
....................        
....................    trava_menus     = 0; 
*
1855:  BCF    2A.3
....................    trava_config_N  = 1; 
1856:  BSF    2A.4
....................    trava_seta      = 0; 
1857:  BCF    2A.5
....................    navegador_config_inicial(); 
1858:  BCF    0A.4
1859:  CALL   6BD
185A:  BSF    0A.4
....................     
....................    if(!trava_relogio){                                                          // trava para escrever 1 vez 
185B:  BTFSC  2A.7
185C:  GOTO   090
....................        
....................       trava_relogio = 1;     
185D:  BSF    2A.7
....................       lcd_escreve("\f");     
185E:  MOVLW  9E
185F:  BSF    03.6
1860:  MOVWF  0D
1861:  MOVLW  01
1862:  MOVWF  0F
1863:  BCF    0A.4
1864:  BCF    0A.3
1865:  BCF    03.6
1866:  CALL   526
1867:  BSF    0A.4
1868:  BSF    0A.3
....................       lcd_pos_xy(1,1); 
1869:  MOVLW  01
186A:  MOVWF  6C
186B:  MOVWF  6D
186C:  BCF    0A.4
186D:  BCF    0A.3
186E:  CALL   4D2
186F:  BSF    0A.4
1870:  BSF    0A.3
....................       printf(lcd_escreve, " Configurar:"); 
1871:  MOVLW  9F
1872:  BSF    03.6
1873:  MOVWF  0D
1874:  MOVLW  01
1875:  MOVWF  0F
1876:  BCF    0A.4
1877:  BCF    0A.3
1878:  BCF    03.6
1879:  CALL   526
187A:  BSF    0A.4
187B:  BSF    0A.3
....................       lcd_pos_xy(1,2); 
187C:  MOVLW  01
187D:  MOVWF  6C
187E:  MOVLW  02
187F:  MOVWF  6D
1880:  BCF    0A.4
1881:  BCF    0A.3
1882:  CALL   4D2
1883:  BSF    0A.4
1884:  BSF    0A.3
....................       printf(lcd_escreve, " Relogio   "); 
1885:  MOVLW  A6
1886:  BSF    03.6
1887:  MOVWF  0D
1888:  MOVLW  01
1889:  MOVWF  0F
188A:  BCF    0A.4
188B:  BCF    0A.3
188C:  BCF    03.6
188D:  CALL   526
188E:  BSF    0A.4
188F:  BSF    0A.3
....................        
....................    } 
....................     
....................       trava_ronda  = 0; 
1890:  BCF    2A.6
....................  
....................       comanda_relogio(); 
....................     
.................... } 
....................  
.................... //MENU: CONFIGURA/RONDA NOTURNA 
.................... void comanda_ronda(){ 
....................  
....................    trava_menus    = 0; 
*
1CEA:  BCF    2A.3
....................    trava_config_N = 1; 
1CEB:  BSF    2A.4
....................    trava_seta     = 0; 
1CEC:  BCF    2A.5
....................    config         = 2; 
1CED:  MOVLW  02
1CEE:  MOVWF  36
....................  
....................    if(config==2 && config_esse==1){ 
1CEF:  MOVF   36,W
1CF0:  SUBLW  02
1CF1:  BTFSS  03.2
1CF2:  GOTO   6CB
1CF3:  DECFSZ 32,W
1CF4:  GOTO   6CB
....................     
....................       config_esse    = 0; 
1CF5:  CLRF   32
....................       trava_menus    = 0; 
1CF6:  BCF    2A.3
....................       trava_config_N = 0; 
1CF7:  BCF    2A.4
....................       trava_seta     = 0; 
1CF8:  BCF    2A.5
....................        
....................       if(!finalizado){ 
1CF9:  BTFSC  2B.0
1CFA:  GOTO   6C3
....................        
....................          do{  
....................              
....................             if(!trava_rondac){       
1CFB:  BTFSC  2E.6
1CFC:  GOTO   6AC
....................  
....................                trava_rondac   = 0; // Trava para garantir quebra do if 
1CFD:  BCF    2E.6
....................                trava_auto     = 1; // Trava para garantir entrada na sub-rotina ronda programada 
1CFE:  BSF    2E.5
....................                trava_entra    = 0; 
1CFF:  BCF    2E.0
....................                delay_ms(500); 
1D00:  MOVLW  02
1D01:  MOVWF  67
1D02:  MOVLW  FA
1D03:  MOVWF  6C
1D04:  BCF    0A.4
1D05:  BCF    0A.3
1D06:  CALL   446
1D07:  BSF    0A.4
1D08:  BSF    0A.3
1D09:  DECFSZ 67,F
1D0A:  GOTO   502
....................                 
....................                ronda_pre_programada(); 
....................                 
....................                trava_rondac   = 0; 
*
1E1D:  BCF    2E.6
....................                trava_auto     = 0; 
1E1E:  BCF    2E.5
....................                trava_entra    = 1; 
1E1F:  BSF    2E.0
....................                delay_ms(500); 
1E20:  MOVLW  02
1E21:  MOVWF  67
1E22:  MOVLW  FA
1E23:  MOVWF  6C
1E24:  BCF    0A.4
1E25:  BCF    0A.3
1E26:  CALL   446
1E27:  BSF    0A.4
1E28:  BSF    0A.3
1E29:  DECFSZ 67,F
1E2A:  GOTO   622
....................                 
....................                liga_desliga(); 
....................                 
....................                trava_rondac  = 1; 
*
1EA9:  BSF    2E.6
....................                trava_entra   = 0; 
1EAA:  BCF    2E.0
....................                trava_auto    = 0; 
1EAB:  BCF    2E.5
....................       
....................             } 
....................              
....................             le_hora_rtc(); 
1EAC:  BCF    0A.4
1EAD:  CALL   35B
1EAE:  BSF    0A.4
....................              
....................             if(input(OK) && trava_rondac) finalizado=1;                                        // esse é o ultimo OK  
1EAF:  BSF    03.5
1EB0:  BSF    05.0
1EB1:  BCF    03.5
1EB2:  BTFSS  05.0
1EB3:  GOTO   6B6
1EB4:  BTFSC  2E.6
1EB5:  BSF    2B.0
....................              
....................          }while(!finalizado && !trava_rondac); 
1EB6:  BTFSC  2B.0
1EB7:  GOTO   6BA
1EB8:  BTFSS  2E.6
1EB9:  GOTO   4FB
....................           
....................          trava_rondac = 0; 
1EBA:  BCF    2E.6
....................          config_esse = 0; 
1EBB:  CLRF   32
....................          hrs=d2h(hrs); 
1EBC:  MOVF   3B,W
1EBD:  MOVWF  67
1EBE:  BCF    0A.3
1EBF:  CALL   1F8
1EC0:  BSF    0A.3
1EC1:  MOVF   78,W
1EC2:  MOVWF  3B
....................  
....................       } 
....................        
....................       escreve_hora_rtc(); 
1EC3:  BCF    0A.4
1EC4:  CALL   755
1EC5:  BSF    0A.4
....................        
....................       muda_menus     = 1; 
1EC6:  MOVLW  01
1EC7:  MOVWF  35
....................       trava_menus    = 1; 
1EC8:  BSF    2A.3
....................       trava_config_N = 0; 
1EC9:  BCF    2A.4
....................       trava_seta     = 0; 
1ECA:  BCF    2A.5
....................      
....................    } 
.................... } 
....................  
.................... //MENU: CONFIGURA/RONDA NOTURNA 
.................... void config_noturna(){ 
*
01BB:  DATA 00,00
....................        
....................    trava_menus    = 0; 
*
1CB1:  BCF    2A.3
....................    trava_config_N = 1; 
1CB2:  BSF    2A.4
....................    trava_seta     = 0; 
1CB3:  BCF    2A.5
....................     
....................    if(!trava_ronda){                                                          // trava para escrever 1 vez 
1CB4:  BTFSC  2A.6
1CB5:  GOTO   4E9
....................        
....................       trava_ronda = 1;     
1CB6:  BSF    2A.6
....................       lcd_escreve("\f"); 
1CB7:  MOVLW  AC
1CB8:  BSF    03.6
1CB9:  MOVWF  0D
1CBA:  MOVLW  01
1CBB:  MOVWF  0F
1CBC:  BCF    0A.4
1CBD:  BCF    0A.3
1CBE:  BCF    03.6
1CBF:  CALL   526
1CC0:  BSF    0A.4
1CC1:  BSF    0A.3
....................       lcd_pos_xy(1,1); 
1CC2:  MOVLW  01
1CC3:  MOVWF  6C
1CC4:  MOVWF  6D
1CC5:  BCF    0A.4
1CC6:  BCF    0A.3
1CC7:  CALL   4D2
1CC8:  BSF    0A.4
1CC9:  BSF    0A.3
....................       printf(lcd_escreve, " Configurar:"); 
1CCA:  MOVLW  AD
1CCB:  BSF    03.6
1CCC:  MOVWF  0D
1CCD:  MOVLW  01
1CCE:  MOVWF  0F
1CCF:  BCF    0A.4
1CD0:  BCF    0A.3
1CD1:  BCF    03.6
1CD2:  CALL   526
1CD3:  BSF    0A.4
1CD4:  BSF    0A.3
....................       lcd_pos_xy(1,2); 
1CD5:  MOVLW  01
1CD6:  MOVWF  6C
1CD7:  MOVLW  02
1CD8:  MOVWF  6D
1CD9:  BCF    0A.4
1CDA:  BCF    0A.3
1CDB:  CALL   4D2
1CDC:  BSF    0A.4
1CDD:  BSF    0A.3
....................       printf(lcd_escreve, " Ronda Noturna"); 
1CDE:  MOVLW  B4
1CDF:  BSF    03.6
1CE0:  MOVWF  0D
1CE1:  MOVLW  01
1CE2:  MOVWF  0F
1CE3:  BCF    0A.4
1CE4:  BCF    0A.3
1CE5:  BCF    03.6
1CE6:  CALL   526
1CE7:  BSF    0A.4
1CE8:  BSF    0A.3
....................    } 
....................     
....................       trava_relogio  = 0; 
1CE9:  BCF    2A.7
....................  
....................       comanda_ronda(); 
....................     
.................... } 
....................  
.................... //MENU: CONFIGURA 
.................... void configuracao_ativa(){ 
....................  
....................    if(muda_menus==5 && input(OK)){  
*
1829:  MOVF   35,W
182A:  SUBLW  05
182B:  BTFSS  03.2
182C:  GOTO   6CE
182D:  BSF    03.5
182E:  BSF    05.0
182F:  BCF    03.5
1830:  BTFSS  05.0
1831:  GOTO   6CE
....................     
....................       config_esse   = 0; 
1832:  CLRF   32
....................       config        = 1; 
1833:  MOVLW  01
1834:  MOVWF  36
....................       trava_relogio = 0; 
1835:  BCF    2A.7
....................       delay_ms(300); 
1836:  MOVLW  02
1837:  MOVWF  67
1838:  MOVLW  96
1839:  MOVWF  6C
183A:  BCF    0A.4
183B:  BCF    0A.3
183C:  CALL   446
183D:  BSF    0A.4
183E:  BSF    0A.3
183F:  DECFSZ 67,F
1840:  GOTO   038
....................  
....................       do{ 
....................           
....................          trava_menus            = 0; 
1841:  BCF    2A.3
....................          trava_seta             = 0; 
1842:  BCF    2A.5
....................          trava_config_N         = 1; 
1843:  BSF    2A.4
....................          trava1                 = 1; 
1844:  BSF    2B.1
....................          if(!input(OK)) trava1  = 0; 
1845:  BSF    03.5
1846:  BSF    05.0
1847:  BCF    03.5
1848:  BTFSS  05.0
1849:  BCF    2B.1
....................           
....................          navegador_config_inicial(); 
184A:  BCF    0A.4
184B:  CALL   6BD
184C:  BSF    0A.4
....................        
....................          switch(config){ 
184D:  MOVF   36,W
184E:  XORLW  01
184F:  BTFSC  03.2
1850:  GOTO   055
1851:  XORLW  03
1852:  BTFSC  03.2
1853:  GOTO   4B1
1854:  GOTO   6CC
....................           
....................             case 1: relogio       ();  break;           //criar navegador para o RTC 
*
1CB0:  GOTO   6CC
....................             case 2: config_noturna();  break;           //criar navegador para o RDN 
*
1ECB:  GOTO   6CC
....................              
....................          } 
....................       }while(!finalizado); 
1ECC:  BTFSS  2B.0
1ECD:  GOTO   041
....................    } 
.................... } 
....................  
.................... //MENU: CONFIGURA 
.................... void configura(){ 
*
01C4:  DATA 00,00
....................  
....................    trava_menus    = 1; 
*
1800:  BSF    2A.3
....................    trava_config_N = 0; 
1801:  BCF    2A.4
....................    trava_seta     = 0; 
1802:  BCF    2A.5
....................     
....................    if(!trava_config){                                                          // trava para escrever 1 vez 
1803:  BTFSC  29.5
1804:  GOTO   024
....................        
....................       trava_config = 1;     
1805:  BSF    29.5
....................       lcd_escreve("\f"); 
1806:  MOVLW  BC
1807:  BSF    03.6
1808:  MOVWF  0D
1809:  MOVLW  01
180A:  MOVWF  0F
180B:  BCF    0A.4
180C:  BCF    0A.3
180D:  BCF    03.6
180E:  CALL   526
180F:  BSF    0A.4
1810:  BSF    0A.3
....................       lcd_pos_xy(1,1); 
1811:  MOVLW  01
1812:  MOVWF  6C
1813:  MOVWF  6D
1814:  BCF    0A.4
1815:  BCF    0A.3
1816:  CALL   4D2
1817:  BSF    0A.4
1818:  BSF    0A.3
....................       printf(lcd_escreve, " Configuracao "); 
1819:  MOVLW  BD
181A:  BSF    03.6
181B:  MOVWF  0D
181C:  MOVLW  01
181D:  MOVWF  0F
181E:  BCF    0A.4
181F:  BCF    0A.3
1820:  BCF    03.6
1821:  CALL   526
1822:  BSF    0A.4
1823:  BSF    0A.3
....................        
....................    } 
....................     
....................       trava_indiv     = 0; 
1824:  BCF    29.3
....................       trava_setor     = 0; 
1825:  BCF    29.4
....................       trava_clock     = 0; 
1826:  BCF    29.6
....................       finalizado      = 0; 
1827:  BCF    2B.0
....................       config_esse     = 0; 
1828:  CLRF   32
....................        
....................       configuracao_ativa(); 
....................  
.................... } 
*
1ECE:  BCF    0A.3
1ECF:  BSF    0A.4
1ED0:  GOTO   3B2 (RETURN)
....................  
.................... //NAVEGADOR ENTRE MENUS   
.................... void navegador_menus(){ 
....................    
....................    if(trava_menus){ 
*
0731:  BTFSS  2A.3
0732:  GOTO   754
....................    
....................    // configura botão MAIS 
....................     
....................       if(input(MAIS)){ 
0733:  BSF    03.5
0734:  BSF    05.1
0735:  BCF    03.5
0736:  BTFSS  05.1
0737:  GOTO   73D
....................        
....................          if(!trava_mais){ 
0738:  BTFSC  29.0
0739:  GOTO   73C
....................             
....................             muda_menus ++; 
073A:  INCF   35,F
....................             trava_mais = 1; 
073B:  BSF    29.0
....................              
....................          } 
....................          
....................       } 
....................          
....................       else{ 
073C:  GOTO   73E
....................          
....................          trava_mais = 0; 
073D:  BCF    29.0
....................             
....................       } 
....................          
....................    // configura botão MENOS 
....................     
....................       if(input(MENOS)){ 
073E:  BSF    03.5
073F:  BSF    05.2
0740:  BCF    03.5
0741:  BTFSS  05.2
0742:  GOTO   748
....................        
....................          if(!trava_menos){ 
0743:  BTFSC  29.1
0744:  GOTO   747
....................             
....................             muda_menus --; 
0745:  DECF   35,F
....................             trava_menos = 1; 
0746:  BSF    29.1
....................             
....................          } 
....................          
....................       } 
....................          
....................       else{ 
0747:  GOTO   749
....................          
....................          trava_menos = 0; 
0748:  BCF    29.1
....................             
....................       } 
....................     
....................    // configurações de limites  
....................     
....................       if(muda_menus >= limite_menus) muda_menus  = 1; 
0749:  MOVF   30,W
074A:  SUBWF  35,W
074B:  BTFSS  03.0
074C:  GOTO   74F
074D:  MOVLW  01
074E:  MOVWF  35
....................       if(muda_menus <= 0)            muda_menus  = 5; 
074F:  MOVF   35,F
0750:  BTFSS  03.2
0751:  GOTO   754
0752:  MOVLW  05
0753:  MOVWF  35
....................        
....................    } 
.................... } 
0754:  BCF    0A.3
0755:  BSF    0A.4
0756:  GOTO   38E (RETURN)
....................  
.................... #int_TIMER1 
.................... void TIMER1_eeprom_rdn(void){ 
....................  
....................   //Executa a tarefa a cada 4 ms 
....................   if(divisor2>=4){              
*
01EC:  MOVF   40,W
01ED:  SUBLW  03
01EE:  BTFSC  03.0
01EF:  GOTO   233
....................    
....................       LUGH_LIGHT(); 
....................       LUGH_LIGHT2(); 
*
0231:  CALL   1C5
....................       divisor2=0; 
0232:  CLRF   40
....................        
....................    } 
....................     
....................    divisor2++; 
0233:  INCF   40,F
....................    set_timer1(131); 
0234:  CLRF   0F
0235:  MOVLW  83
0236:  MOVWF  0E
.................... } 
....................  
0237:  BCF    0C.0
0238:  BCF    0A.3
0239:  BCF    0A.4
023A:  GOTO   021
.................... #int_RTCC 
.................... void RTCC_isr(void){ 
....................  
....................    //Executa a tarefa a cada 80 ms 
....................    if(divisor>=20){ 
*
0407:  MOVF   41,W
0408:  SUBLW  13
0409:  BTFSC  03.0
040A:  GOTO   43F
....................    
....................       escreve_EEPROM(); 
040B:  CALL   23B
....................       leitura_EEPROM(); 
040C:  CALL   352
....................       ronda_noturna_auto(); 
....................       divisor=0; 
*
043E:  CLRF   41
....................     
....................    } 
....................    divisor++; 
043F:  INCF   41,F
....................    set_timer0(131); 
0440:  MOVLW  83
0441:  MOVWF  01
....................     
.................... } 
....................       
0442:  BCF    0B.2
0443:  BCF    0A.3
0444:  BCF    0A.4
0445:  GOTO   021
.................... void main(){ 
*
12F7:  CLRF   04
12F8:  BCF    03.7
12F9:  MOVLW  1F
12FA:  ANDWF  03,F
12FB:  MOVLW  FF
12FC:  MOVWF  28
12FD:  MOVLW  0C
12FE:  BSF    03.5
12FF:  MOVWF  19
1300:  MOVLW  A2
1301:  MOVWF  18
1302:  MOVLW  90
1303:  BCF    03.5
1304:  MOVWF  18
1305:  BCF    29.0
1306:  BCF    29.1
1307:  BCF    29.2
1308:  BCF    29.3
1309:  BCF    29.4
130A:  BCF    29.5
130B:  BCF    29.6
130C:  BCF    29.7
130D:  BCF    2A.0
130E:  BCF    2A.1
130F:  BCF    2A.2
1310:  BCF    2A.3
1311:  BCF    2A.4
1312:  BCF    2A.5
1313:  BCF    2A.6
1314:  BCF    2A.7
1315:  BCF    2B.0
1316:  BCF    2B.1
1317:  BCF    2B.2
1318:  BCF    2B.3
1319:  BCF    2B.4
131A:  BCF    2B.5
131B:  BCF    2B.6
131C:  BCF    2B.7
131D:  BCF    2C.0
131E:  BCF    2C.1
131F:  BCF    2C.2
1320:  BCF    2C.3
1321:  BCF    2C.4
1322:  BCF    2C.5
1323:  BCF    2C.6
1324:  BCF    2C.7
1325:  BCF    2D.0
1326:  BCF    2D.1
1327:  BCF    2D.2
1328:  BCF    2D.3
1329:  BCF    2D.4
132A:  BCF    2D.5
132B:  BCF    2D.6
132C:  BCF    2D.7
132D:  BCF    2E.0
132E:  BCF    2E.1
132F:  BCF    2E.2
1330:  BCF    2E.3
1331:  BCF    2E.4
1332:  BCF    2E.5
1333:  MOVLW  03
1334:  MOVWF  2F
1335:  MOVLW  06
1336:  MOVWF  30
1337:  MOVLW  03
1338:  MOVWF  31
1339:  CLRF   32
133A:  MOVLW  01
133B:  MOVWF  33
133C:  MOVWF  34
133D:  MOVWF  35
133E:  MOVWF  36
133F:  CLRF   37
1340:  CLRF   40
1341:  CLRF   41
1342:  CLRF   42
1343:  BCF    2E.6
1344:  BCF    2E.7
1345:  BSF    03.5
1346:  BSF    1F.0
1347:  BSF    1F.1
1348:  BSF    1F.2
1349:  BCF    1F.3
134A:  MOVLW  07
134B:  MOVWF  1C
....................  
....................    inicializa(); 
*
137A:  BCF    0A.4
137B:  GOTO   56C
137C:  BSF    0A.4
....................    ativa_CGRAM(); 
137D:  BCF    0A.4
137E:  GOTO   632
137F:  BSF    0A.4
....................    apresentacao(); 
1380:  BCF    0A.4
1381:  GOTO   6BE
1382:  BSF    0A.4
....................    leitura_EEPROM(); 
1383:  BCF    0A.4
1384:  CALL   352
1385:  BSF    0A.4
....................    timers(); 
1386:  BCF    0A.4
1387:  GOTO   71B
1388:  BSF    0A.4
....................  
....................    while(1){ 
....................     
....................    trava_menus    = 1; 
1389:  BSF    2A.3
....................    trava_seta     = 0; 
138A:  BCF    2A.5
....................    trava_config_N = 0; 
138B:  BCF    2A.4
....................    navegador_menus(); 
138C:  BCF    0A.4
138D:  GOTO   731
138E:  BSF    0A.4
....................     
....................       switch(muda_menus){ 
138F:  MOVLW  01
1390:  SUBWF  35,W
1391:  ADDLW  FB
1392:  BTFSC  03.0
1393:  GOTO   3B2
1394:  ADDLW  05
1395:  GOTO   3B4
....................        
....................          case 1: setorizado();  break; 
1396:  BCF    0A.4
1397:  BSF    0A.3
1398:  GOTO   000
1399:  BSF    0A.4
139A:  BCF    0A.3
139B:  GOTO   3B2
....................          case 2: individual();  break; 
139C:  BCF    0A.4
139D:  BSF    0A.3
139E:  GOTO   147
139F:  BSF    0A.4
13A0:  BCF    0A.3
13A1:  GOTO   3B2
....................          case 3: clock();       break; 
13A2:  BCF    0A.4
13A3:  BSF    0A.3
13A4:  GOTO   4ED
13A5:  BSF    0A.4
13A6:  BCF    0A.3
13A7:  GOTO   3B2
....................          case 4: bluetooth();   break; 
13A8:  BCF    0A.4
13A9:  BSF    0A.3
13AA:  GOTO   657
13AB:  BSF    0A.4
13AC:  BCF    0A.3
13AD:  GOTO   3B2
....................          case 5: configura();   break; 
13AE:  BSF    0A.3
13AF:  GOTO   000
13B0:  BCF    0A.3
13B1:  GOTO   3B2
....................           
....................       } 
....................    } 
13B2:  GOTO   389
.................... } 
13B3:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
